[
  {
    "EntityType": "User",
    "EntityName": "iam-auditor-user",
    "PolicyName": "AuditorMinimalPermissions",
    "PolicyType": "UserInline",
    "Findings": [
      {
        "Sid": "",
        "Actions": [
          "iam:ListUsers",
          "iam:ListGroups",
          "iam:ListRoles",
          "iam:GetUserPolicy",
          "iam:ListUserPolicies",
          "iam:ListAttachedUserPolicies",
          "iam:GetGroupPolicy",
          "iam:ListGroupPolicies",
          "iam:ListAttachedGroupPolicies",
          "iam:GetRolePolicy",
          "iam:ListRolePolicies",
          "iam:ListAttachedRolePolicies",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "sns:Publish"
        ],
        "Resources": [
          "*"
        ]
      }
    ]
  },
  {
    "EntityType": "Role",
    "EntityName": "AWSServiceRoleForSupport",
    "PolicyName": "AWSSupportServiceRolePolicy",
    "PolicyType": "RoleManaged",
    "Findings": [
      {
        "Sid": "AWSSupportActions",
        "Actions": [
          "access-analyzer:getAccessPreview",
          "access-analyzer:getAnalyzedResource",
          "access-analyzer:getAnalyzer",
          "access-analyzer:getArchiveRule",
          "access-analyzer:getFinding",
          "access-analyzer:getGeneratedPolicy",
          "access-analyzer:listAccessPreviewFindings",
          "access-analyzer:listAccessPreviews",
          "access-analyzer:listAnalyzedResources",
          "access-analyzer:listAnalyzers",
          "access-analyzer:listArchiveRules",
          "access-analyzer:listFindings",
          "access-analyzer:listPolicyGenerations",
          "account:getRegionOptStatus",
          "account:listRegions",
          "acm-pca:describeCertificateAuthority",
          "acm-pca:describeCertificateAuthorityAuditReport",
          "acm-pca:getCertificate",
          "acm-pca:getCertificateAuthorityCertificate",
          "acm-pca:getCertificateAuthorityCsr",
          "acm-pca:listCertificateAuthorities",
          "acm-pca:listTags",
          "acm:describeCertificate",
          "acm:getAccountConfiguration",
          "acm:getCertificate",
          "acm:listCertificates",
          "acm:listTagsForCertificate",
          "airflow:getEnvironment",
          "airflow:listEnvironments",
          "airflow:listTagsForResource",
          "amplify:getApp",
          "amplify:getBackendEnvironment",
          "amplify:getBranch",
          "amplify:getDomainAssociation",
          "amplify:getJob",
          "amplify:getWebhook",
          "amplify:listApps",
          "amplify:listBackendEnvironments",
          "amplify:listBranches",
          "amplify:listDomainAssociations",
          "amplify:listWebhooks",
          "amplifyuibuilder:exportComponents",
          "amplifyuibuilder:exportThemes",
          "aoss:batchGetCollection",
          "aoss:batchGetEffectiveLifecyclePolicy",
          "aoss:batchGetLifecyclePolicy",
          "aoss:batchGetVpcEndpoint",
          "aoss:getAccessPolicy",
          "aoss:getAccountSettings",
          "aoss:getPoliciesStats",
          "aoss:getSecurityConfig",
          "aoss:getSecurityPolicy",
          "aoss:listAccessPolicies",
          "aoss:listCollections",
          "aoss:listLifecyclePolicies",
          "aoss:listSecurityConfigs",
          "aoss:listSecurityPolicies",
          "aoss:listTagsForResource",
          "aoss:listVpcEndpoints",
          "appconfig:getApplication",
          "appconfig:getConfigurationProfile",
          "appconfig:getDeployment",
          "appconfig:getDeploymentStrategy",
          "appconfig:getEnvironment",
          "appconfig:getExtension",
          "appconfig:getExtensionAssociation",
          "appconfig:listApplications",
          "appconfig:listConfigurationProfiles",
          "appconfig:listDeployments",
          "appconfig:listDeploymentStrategies",
          "appconfig:listEnvironments",
          "appconfig:listExtensionAssociations",
          "appconfig:listHostedConfigurationVersions",
          "appconfig:listExtensions",
          "appflow:describeConnectorEntity",
          "appflow:describeConnectorProfiles",
          "appflow:describeConnectors",
          "appflow:describeFlow",
          "appflow:describeFlowExecutionRecords",
          "appflow:listConnectorEntities",
          "appflow:listFlows",
          "application-autoscaling:describeScalableTargets",
          "application-autoscaling:describeScalingActivities",
          "application-autoscaling:describeScalingPolicies",
          "application-autoscaling:describeScheduledActions",
          "applicationinsights:describeApplication",
          "applicationinsights:describeComponent",
          "applicationinsights:describeComponentConfiguration",
          "applicationinsights:describeComponentConfigurationRecommendation",
          "applicationinsights:describeLogPattern",
          "applicationinsights:describeObservation",
          "applicationinsights:describeProblem",
          "applicationinsights:describeProblemObservations",
          "applicationinsights:listApplications",
          "applicationinsights:listComponents",
          "applicationinsights:listConfigurationHistory",
          "applicationinsights:listLogPatterns",
          "applicationinsights:listLogPatternSets",
          "applicationinsights:listProblems",
          "appmesh:describeGatewayRoute",
          "appmesh:describeMesh",
          "appmesh:describeRoute",
          "appmesh:describeVirtualGateway",
          "appmesh:describeVirtualNode",
          "appmesh:describeVirtualRouter",
          "appmesh:describeVirtualService",
          "appmesh:listGatewayRoutes",
          "appmesh:listMeshes",
          "appmesh:listRoutes",
          "appmesh:listTagsForResource",
          "appmesh:listVirtualGateways",
          "appmesh:listVirtualNodes",
          "appmesh:listVirtualRouters",
          "appmesh:listVirtualServices",
          "apprunner:describeAutoScalingConfiguration",
          "apprunner:describeCustomDomains",
          "apprunner:describeOperation",
          "apprunner:describeService",
          "apprunner:listAutoScalingConfigurations",
          "apprunner:listConnections",
          "apprunner:listOperations",
          "apprunner:listServices",
          "application-signals:getServiceLevelObjective",
          "application-signals:getService",
          "application-signals:listServiceDependencies",
          "application-signals:listServiceDependents",
          "application-signals:listServiceLevelObjectives",
          "application-signals:listServiceOperations",
          "application-signals:listServices",
          "apprunner:listTagsForResource",
          "appstream:describeAppBlockBuilderAppBlockAssociations",
          "appstream:describeAppBlockBuilders",
          "appstream:describeAppBlocks",
          "appstream:describeApplicationFleetAssociations",
          "appstream:describeApplications",
          "appstream:describeDirectoryConfigs",
          "appstream:describeEntitlements",
          "appstream:describeFleets",
          "appstream:describeImageBuilders",
          "appstream:describeImagePermissions",
          "appstream:describeImages",
          "appstream:describeSessions",
          "appstream:describeStacks",
          "appstream:describeUsageReportSubscriptions",
          "appstream:describeUsers",
          "appstream:describeUserStackAssociations",
          "appstream:listAssociatedFleets",
          "appstream:listAssociatedStacks",
          "appstream:listEntitledApplications",
          "appstream:listTagsForResource",
          "appsync:getApiAssociation",
          "appsync:getApiCache",
          "appsync:getDomainName",
          "appsync:getFunction",
          "appsync:getGraphqlApi",
          "appsync:getIntrospectionSchema",
          "appsync:getResolver",
          "appsync:getSchemaCreationStatus",
          "appsync:getSourceApiAssociation",
          "appsync:getType",
          "appsync:listDataSources",
          "appsync:listDomainNames",
          "appsync:listFunctions",
          "appsync:listGraphqlApis",
          "appsync:listResolvers",
          "appsync:listResolversByFunction",
          "appsync:listSourceApiAssociations",
          "appsync:listTypes",
          "appsync:listTypesByAssociation",
          "aps:describeAlertManagerDefinition",
          "aps:describeRuleGroupsNamespace",
          "aps:describeScraper",
          "aps:describeWorkspace",
          "aps:listRuleGroupsNamespaces",
          "aps:listScrapers",
          "aps:listWorkspaces",
          "athena:batchGetNamedQuery",
          "athena:batchGetQueryExecution",
          "athena:getCalculationExecution",
          "athena:getCalculationExecutionStatus",
          "athena:getDataCatalog",
          "athena:getNamedQuery",
          "athena:getNotebookMetadata",
          "athena:getQueryExecution",
          "athena:getQueryRuntimeStatistics",
          "athena:getSession",
          "athena:getSessionStatus",
          "athena:getWorkGroup",
          "athena:listApplicationDPUSizes",
          "athena:listCalculationExecutions",
          "athena:listDataCatalogs",
          "athena:listEngineVersions",
          "athena:listExecutors",
          "athena:listNamedQueries",
          "athena:listNotebookMetadata",
          "athena:listNotebookSessions",
          "athena:listQueryExecutions",
          "athena:listSessions",
          "athena:listTagsForResource",
          "athena:listWorkGroups",
          "athena:getCapacityAssignmentConfiguration",
          "athena:getCapacityReservation",
          "athena:listCapacityReservations",
          "auditmanager:getAccountStatus",
          "auditmanager:getDelegations",
          "auditmanager:listAssessmentFrameworks",
          "auditmanager:listAssessmentReports",
          "auditmanager:listAssessments",
          "auditmanager:listControls",
          "auditmanager:listKeywordsForDataSource",
          "auditmanager:listNotifications",
          "autoscaling-plans:describeScalingPlanResources",
          "autoscaling-plans:describeScalingPlans",
          "autoscaling-plans:getScalingPlanResourceForecastData",
          "autoscaling:describeAccountLimits",
          "autoscaling:describeAdjustmentTypes",
          "autoscaling:describeAutoScalingGroups",
          "autoscaling:describeAutoScalingInstances",
          "autoscaling:describeAutoScalingNotificationTypes",
          "autoscaling:describeInstanceRefreshes",
          "autoscaling:describeLaunchConfigurations",
          "autoscaling:describeLifecycleHooks",
          "autoscaling:describeLifecycleHookTypes",
          "autoscaling:describeLoadBalancers",
          "autoscaling:describeLoadBalancerTargetGroups",
          "autoscaling:describeMetricCollectionTypes",
          "autoscaling:describeNotificationConfigurations",
          "autoscaling:describePolicies",
          "autoscaling:describeScalingActivities",
          "autoscaling:describeScalingProcessTypes",
          "autoscaling:describeScheduledActions",
          "autoscaling:describeTrafficSources",
          "autoscaling:describeTags",
          "autoscaling:describeTerminationPolicyTypes",
          "autoscaling:describeWarmPool",
          "backup:describeBackupJob",
          "backup:describeBackupVault",
          "backup:describeCopyJob",
          "backup:describeFramework",
          "backup:describeGlobalSettings",
          "backup:describeProtectedResource",
          "backup:describeRecoveryPoint",
          "backup:describeRegionSettings",
          "backup:describeReportJob",
          "backup:describeReportPlan",
          "backup:describeRestoreJob",
          "backup:getBackupPlan",
          "backup:getBackupPlanFromJSON",
          "backup:getBackupPlanFromTemplate",
          "backup:getBackupSelection",
          "backup:getBackupVaultAccessPolicy",
          "backup:getBackupVaultNotifications",
          "backup:getLegalHold",
          "backup:getRecoveryPointRestoreMetadata",
          "backup:getRestoreJobMetadata",
          "backup:getRestoreTestingInferredMetadata",
          "backup:getRestoreTestingPlan",
          "backup:getRestoreTestingSelection",
          "backup:getSupportedResourceTypes",
          "backup:listBackupJobs",
          "backup:listBackupPlans",
          "backup:listBackupPlanTemplates",
          "backup:listBackupPlanVersions",
          "backup:listBackupSelections",
          "backup:listBackupVaults",
          "backup:listCopyJobs",
          "backup:listFrameworks",
          "backup:listLegalHolds",
          "backup:listProtectedResources",
          "backup:listRecoveryPointsByBackupVault",
          "backup:listRecoveryPointsByLegalHold",
          "backup:listRecoveryPointsByResource",
          "backup:listReportJobs",
          "backup:listReportPlans",
          "backup:listRestoreJobs",
          "backup:listRestoreJobsByProtectedResource",
          "backup:listRestoreTestingPlans",
          "backup:listRestoreTestingSelections",
          "backup:listTags",
          "backup-gateway:getGateway",
          "backup-gateway:getHypervisor",
          "backup-gateway:getHypervisorPropertyMappings",
          "backup-gateway:getVirtualMachine",
          "backup-gateway:listGateways",
          "backup-gateway:listHypervisors",
          "backup-gateway:listVirtualMachines",
          "batch:describeComputeEnvironments",
          "batch:describeJobDefinitions",
          "batch:describeJobQueues",
          "batch:describeJobs",
          "batch:listJobs",
          "bedrock:getAgent",
          "bedrock:getAgentActionGroup",
          "bedrock:getAgentAlias",
          "bedrock:getAgentKnowledgeBase",
          "bedrock:getAgentVersion",
          "bedrock:getDataSource",
          "bedrock:getIngestionJob",
          "bedrock:getKnowledgeBase",
          "bedrock:getModelInvocationLoggingConfiguration",
          "bedrock:listAgentActionGroups",
          "bedrock:listAgentAliases",
          "bedrock:listAgentKnowledgeBases",
          "bedrock:listAgents",
          "bedrock:listAgentVersions",
          "bedrock:listCustomModels",
          "bedrock:listDataSources",
          "bedrock:listIngestionJobs",
          "bedrock:listKnowledgeBases",
          "bedrock:listProvisionedModelThroughputs",
          "bedrock:getEvaluationJob",
          "bedrock:getFoundationModel",
          "bedrock:getCustomModel",
          "bedrock:getGuardrail",
          "bedrock:getImportedModel",
          "bedrock:getInferenceProfile",
          "bedrock:getModelCopyJob",
          "bedrock:getModelCustomizationJob",
          "bedrock:getModelImportJob",
          "bedrock:getModelInvocationJob",
          "bedrock:getProvisionedModelThroughput",
          "bedrock:listEvaluationJobs",
          "bedrock:listFoundationModels",
          "bedrock:listGuardrails",
          "bedrock:listInferenceProfiles",
          "bedrock:listImportedModels",
          "bedrock:listModelCopyJobs",
          "bedrock:listModelCustomizationJobs",
          "bedrock:listModelImportJobs",
          "bedrock:listModelInvocationJobs",
          "bedrock:getFlow",
          "bedrock:getFlowAlias",
          "bedrock:getFlowVersion",
          "bedrock:getPrompt",
          "bedrock:listFlowAliases",
          "bedrock:listFlowVersions",
          "bedrock:listFlows",
          "bedrock:listPrompts",
          "braket:getDevice",
          "braket:getQuantumTask",
          "braket:searchDevices",
          "braket:searchQuantumTasks",
          "budgets:viewBudget",
          "ce:getCostAndUsage",
          "ce:getCostAndUsageWithResources",
          "ce:getCostForecast",
          "ce:getDimensionValues",
          "ce:getReservationCoverage",
          "ce:getReservationPurchaseRecommendation",
          "ce:getReservationUtilization",
          "ce:getRightsizingRecommendation",
          "ce:getSavingsPlansCoverage",
          "ce:getSavingsPlansPurchaseRecommendation",
          "ce:getSavingsPlansUtilization",
          "ce:getSavingsPlansUtilizationDetails",
          "ce:getTags",
          "chime:describeAppInstance",
          "chime:getAttendee",
          "chime:getGlobalSettings",
          "chime:getMediaCapturePipeline",
          "chime:getMediaPipeline",
          "chime:getMeeting",
          "chime:getProxySession",
          "chime:getSipMediaApplication",
          "chime:getSipRule",
          "chime:getVoiceConnector",
          "chime:getVoiceConnectorGroup",
          "chime:getVoiceConnectorLoggingConfiguration",
          "chime:listAppInstances",
          "chime:listAttendees",
          "chime:listChannelBans",
          "chime:listChannels",
          "chime:listChannelsModeratedByAppInstanceUser",
          "chime:listMediaCapturePipelines",
          "chime:listMediaPipelines",
          "chime:listMeetings",
          "chime:listSipMediaApplications",
          "chime:listSipRules",
          "chime:listVoiceConnectorGroups",
          "chime:listVoiceConnectors",
          "cleanrooms:batchGetCollaborationAnalysisTemplate",
          "cleanrooms:batchGetSchema",
          "cleanrooms:getAnalysisTemplate",
          "cleanrooms:getCollaboration",
          "cleanrooms:getCollaborationAnalysisTemplate",
          "cleanrooms:getConfiguredTable",
          "cleanrooms:getConfiguredTableAssociation",
          "cleanrooms:getMembership",
          "cleanrooms:getSchema",
          "cleanrooms:listAnalysisTemplates",
          "cleanrooms:listCollaborationAnalysisTemplates",
          "cleanrooms:listCollaborations",
          "cleanrooms:listConfiguredTableAssociations",
          "cleanrooms:listConfiguredTables",
          "cleanrooms:listMembers",
          "cleanrooms:listMemberships",
          "cleanrooms:listSchemas",
          "cloud9:describeEnvironmentMemberships",
          "cloud9:describeEnvironments",
          "cloud9:listEnvironments",
          "clouddirectory:getDirectory",
          "clouddirectory:listDirectories",
          "cloudformation:batchDescribeTypeConfigurations",
          "cloudformation:describeAccountLimits",
          "cloudformation:describeChangeSet",
          "cloudformation:describeChangeSetHooks",
          "cloudformation:describePublisher",
          "cloudformation:describeStackEvents",
          "cloudformation:describeStackInstance",
          "cloudformation:describeStackResource",
          "cloudformation:describeStackResources",
          "cloudformation:describeStacks",
          "cloudformation:describeStackSet",
          "cloudformation:describeStackSetOperation",
          "cloudformation:describeType",
          "cloudformation:describeTypeRegistration",
          "cloudformation:estimateTemplateCost",
          "cloudformation:getStackPolicy",
          "cloudformation:getTemplate",
          "cloudformation:getTemplateSummary",
          "cloudformation:listChangeSets",
          "cloudformation:listExports",
          "cloudformation:listImports",
          "cloudformation:listStackInstances",
          "cloudformation:listStackResources",
          "cloudformation:listStacks",
          "cloudformation:listStackSetOperationResults",
          "cloudformation:listStackSetOperations",
          "cloudformation:listStackSets",
          "cloudformation:listTypeRegistrations",
          "cloudformation:listTypes",
          "cloudformation:listTypeVersions",
          "cloudfront:describeFunction",
          "cloudfront:getCachePolicy",
          "cloudfront:getCachePolicyConfig",
          "cloudfront:getCloudFrontOriginAccessIdentity",
          "cloudfront:getCloudFrontOriginAccessIdentityConfig",
          "cloudfront:getContinuousDeploymentPolicy",
          "cloudfront:getContinuousDeploymentPolicyConfig",
          "cloudfront:getDistribution",
          "cloudfront:getDistributionConfig",
          "cloudfront:getInvalidation",
          "cloudfront:getKeyGroup",
          "cloudfront:getKeyGroupConfig",
          "cloudfront:getMonitoringSubscription",
          "cloudfront:getOriginAccessControl",
          "cloudfront:getOriginAccessControlConfig",
          "cloudfront:getOriginRequestPolicy",
          "cloudfront:getOriginRequestPolicyConfig",
          "cloudfront:getPublicKey",
          "cloudfront:getPublicKeyConfig",
          "cloudfront:getRealtimeLogConfig",
          "cloudfront:getResponseHeadersPolicy",
          "cloudfront:getResponseHeadersPolicyConfig",
          "cloudfront:getStreamingDistribution",
          "cloudfront:getStreamingDistributionConfig",
          "cloudfront:listCachePolicies",
          "cloudfront:listCloudFrontOriginAccessIdentities",
          "cloudfront:listContinuousDeploymentPolicies",
          "cloudfront:listDistributions",
          "cloudfront:listDistributionsByCachePolicyId",
          "cloudfront:listDistributionsByKeyGroup",
          "cloudfront:listDistributionsByOriginRequestPolicyId",
          "cloudfront:listDistributionsByRealtimeLogConfig",
          "cloudfront:listDistributionsByResponseHeadersPolicyId",
          "cloudfront:listDistributionsByWebACLId",
          "cloudfront:listFunctions",
          "cloudfront:listInvalidations",
          "cloudfront:listKeyGroups",
          "cloudfront:listOriginAccessControls",
          "cloudfront:listOriginRequestPolicies",
          "cloudfront:listPublicKeys",
          "cloudfront:listRealtimeLogConfigs",
          "cloudfront:listResponseHeadersPolicies",
          "cloudfront:listStreamingDistributions",
          "cloudhsm:describeBackups",
          "cloudhsm:describeClusters",
          "cloudsearch:describeAnalysisSchemes",
          "cloudsearch:describeAvailabilityOptions",
          "cloudsearch:describeDomains",
          "cloudsearch:describeExpressions",
          "cloudsearch:describeIndexFields",
          "cloudsearch:describeScalingParameters",
          "cloudsearch:describeServiceAccessPolicies",
          "cloudsearch:describeSuggesters",
          "cloudsearch:listDomainNames",
          "cloudtrail:describeTrails",
          "cloudtrail:getEventSelectors",
          "cloudtrail:getInsightSelectors",
          "cloudtrail:getTrail",
          "cloudtrail:getTrailStatus",
          "cloudtrail:listPublicKeys",
          "cloudtrail:listTags",
          "cloudtrail:listTrails",
          "cloudtrail:lookupEvents",
          "cloudwatch:describeAlarmHistory",
          "cloudwatch:describeAlarms",
          "cloudwatch:describeAlarmsForMetric",
          "cloudwatch:describeAnomalyDetectors",
          "cloudwatch:describeInsightRules",
          "cloudwatch:getDashboard",
          "cloudWatch:getMetricWidgetImage",
          "cloudwatch:getInsightRuleReport",
          "cloudwatch:getMetricData",
          "cloudwatch:getMetricStatistics",
          "cloudwatch:getMetricStream",
          "cloudwatch:listDashboards",
          "cloudwatch:listManagedInsightRules",
          "cloudwatch:listMetrics",
          "cloudwatch:listMetricStreams",
          "codeartifact:describeDomain",
          "codeartifact:describePackageVersion",
          "codeartifact:describeRepository",
          "codeartifact:getDomainPermissionsPolicy",
          "codeartifact:getRepositoryEndpoint",
          "codeartifact:getRepositoryPermissionsPolicy",
          "codeartifact:listDomains",
          "codeartifact:listPackages",
          "codeartifact:listPackageVersionAssets",
          "codeartifact:listPackageVersions",
          "codeartifact:listRepositories",
          "codeartifact:listRepositoriesInDomain",
          "codebuild:batchGetBuildBatches",
          "codebuild:batchGetBuilds",
          "codebuild:batchGetFleets",
          "codebuild:batchGetProjects",
          "codebuild:listBuildBatches",
          "codebuild:listBuildBatchesForProject",
          "codebuild:listBuilds",
          "codebuild:listBuildsForProject",
          "codebuild:listCuratedEnvironmentImages",
          "codebuild:listFleets",
          "codebuild:listProjects",
          "codebuild:listSourceCredentials",
          "codecommit:batchGetRepositories",
          "codecommit:getBranch",
          "codecommit:getRepository",
          "codecommit:getRepositoryTriggers",
          "codecommit:listBranches",
          "codecommit:listRepositories",
          "codeconnections:getConnection",
          "codeconnections:getHost",
          "codeconnections:getRepositoryLink",
          "codeconnections:getRepositorySyncStatus",
          "codeconnections:getResourceSyncStatus",
          "codeconnections:getSyncBlockerSummary",
          "codeconnections:getSyncConfiguration",
          "codeconnections:listConnections",
          "codeconnections:listHosts",
          "codeconnections:listRepositoryLinks",
          "codeconnections:listRepositorySyncDefinitions",
          "codeconnections:listSyncConfigurations",
          "codedeploy:batchGetApplicationRevisions",
          "codedeploy:batchGetApplications",
          "codedeploy:batchGetDeploymentGroups",
          "codedeploy:batchGetDeploymentInstances",
          "codedeploy:batchGetDeployments",
          "codedeploy:batchGetDeploymentTargets",
          "codedeploy:batchGetOnPremisesInstances",
          "codedeploy:getApplication",
          "codedeploy:getApplicationRevision",
          "codedeploy:getDeployment",
          "codedeploy:getDeploymentConfig",
          "codedeploy:getDeploymentGroup",
          "codedeploy:getDeploymentInstance",
          "codedeploy:getDeploymentTarget",
          "codedeploy:getOnPremisesInstance",
          "codedeploy:listApplicationRevisions",
          "codedeploy:listApplications",
          "codedeploy:listDeploymentConfigs",
          "codedeploy:listDeploymentGroups",
          "codedeploy:listDeploymentInstances",
          "codedeploy:listDeployments",
          "codedeploy:listDeploymentTargets",
          "codedeploy:listGitHubAccountTokenNames",
          "codedeploy:listOnPremisesInstances",
          "codepipeline:getJobDetails",
          "codepipeline:getPipeline",
          "codepipeline:getPipelineExecution",
          "codepipeline:getPipelineState",
          "codepipeline:listActionExecutions",
          "codepipeline:listActionTypes",
          "codepipeline:listPipelineExecutions",
          "codepipeline:listPipelines",
          "codepipeline:listWebhooks",
          "codestar:describeProject",
          "codestar:listProjects",
          "codestar:listResources",
          "codestar:listTeamMembers",
          "codestar:listUserProfiles",
          "codestar-connections:getConnection",
          "codestar-connections:getHost",
          "codestar-connections:listConnections",
          "codestar-connections:listHosts",
          "cognito-identity:describeIdentityPool",
          "cognito-identity:getIdentityPoolRoles",
          "cognito-identity:listIdentities",
          "cognito-identity:listIdentityPools",
          "cognito-idp:describeIdentityProvider",
          "cognito-idp:describeResourceServer",
          "cognito-idp:describeRiskConfiguration",
          "cognito-idp:describeUserImportJob",
          "cognito-idp:describeUserPool",
          "cognito-idp:describeUserPoolClient",
          "cognito-idp:describeUserPoolDomain",
          "cognito-idp:getGroup",
          "cognito-idp:getUICustomization",
          "cognito-idp:getUserPoolMfaConfig",
          "cognito-idp:listGroups",
          "cognito-idp:listIdentityProviders",
          "cognito-idp:listResourceServers",
          "cognito-idp:listUserImportJobs",
          "cognito-idp:listUserPoolClients",
          "cognito-idp:listUserPools",
          "cognito-sync:describeDataset",
          "cognito-sync:describeIdentityPoolUsage",
          "cognito-sync:describeIdentityUsage",
          "cognito-sync:getCognitoEvents",
          "cognito-sync:getIdentityPoolConfiguration",
          "cognito-sync:listDatasets",
          "cognito-sync:listIdentityPoolUsage",
          "comprehend:describeDocumentClassificationJob",
          "comprehend:describeDocumentClassifier",
          "comprehend:describeDominantLanguageDetectionJob",
          "comprehend:describeEndpoint",
          "comprehend:describeEntitiesDetectionJob",
          "comprehend:describeEntityRecognizer",
          "comprehend:describeEventsDetectionJob",
          "comprehend:describeFlywheel",
          "comprehend:describeFlywheelIteration",
          "comprehend:describeKeyPhrasesDetectionJob",
          "comprehend:describePiiEntitiesDetectionJob",
          "comprehend:describeSentimentDetectionJob",
          "comprehend:describeTargetedSentimentDetectionJob",
          "comprehend:describeTopicsDetectionJob",
          "comprehend:listDocumentClassificationJobs",
          "comprehend:listDocumentClassifiers",
          "comprehend:listDominantLanguageDetectionJobs",
          "comprehend:listEndpoints",
          "comprehend:listEntitiesDetectionJobs",
          "comprehend:listEntityRecognizers",
          "comprehend:listEventsDetectionJobs",
          "comprehend:listFlywheelIterationHistory",
          "comprehend:listFlywheels",
          "comprehend:listKeyPhrasesDetectionJobs",
          "comprehend:listPiiEntitiesDetectionJobs",
          "comprehend:listSentimentDetectionJobs",
          "comprehend:listTargetedSentimentDetectionJobs",
          "comprehend:listTopicsDetectionJobs",
          "compute-optimizer:getAutoScalingGroupRecommendations",
          "compute-optimizer:getEBSVolumeRecommendations",
          "compute-optimizer:getEC2InstanceRecommendations",
          "compute-optimizer:getEC2RecommendationProjectedMetrics",
          "compute-optimizer:getECSServiceRecommendations",
          "compute-optimizer:getECSServiceRecommendationProjectedMetrics",
          "compute-optimizer:getEnrollmentStatus",
          "compute-optimizer:getRecommendationSummaries",
          "config:batchGetAggregateResourceConfig",
          "config:batchGetResourceConfig",
          "config:describeAggregateComplianceByConfigRules",
          "config:describeAggregationAuthorizations",
          "config:describeComplianceByConfigRule",
          "config:describeComplianceByResource",
          "config:describeConfigRuleEvaluationStatus",
          "config:describeConfigRules",
          "config:describeConfigurationAggregators",
          "config:describeConfigurationAggregatorSourcesStatus",
          "config:describeConfigurationRecorders",
          "config:describeConfigurationRecorderStatus",
          "config:describeConformancePackCompliance",
          "config:describeConformancePacks",
          "config:describeConformancePackStatus",
          "config:describeDeliveryChannels",
          "config:describeDeliveryChannelStatus",
          "config:describeOrganizationConfigRules",
          "config:describeOrganizationConfigRuleStatuses",
          "config:describeOrganizationConformancePacks",
          "config:describeOrganizationConformancePackStatuses",
          "config:describePendingAggregationRequests",
          "config:describeRemediationConfigurations",
          "config:describeRemediationExceptions",
          "config:describeRemediationExecutionStatus",
          "config:describeRetentionConfigurations",
          "config:getAggregateComplianceDetailsByConfigRule",
          "config:getAggregateConfigRuleComplianceSummary",
          "config:getAggregateDiscoveredResourceCounts",
          "config:getAggregateResourceConfig",
          "config:getComplianceDetailsByConfigRule",
          "config:getComplianceDetailsByResource",
          "config:getComplianceSummaryByConfigRule",
          "config:getComplianceSummaryByResourceType",
          "config:getConformancePackComplianceDetails",
          "config:getConformancePackComplianceSummary",
          "config:getDiscoveredResourceCounts",
          "config:getOrganizationConfigRuleDetailedStatus",
          "config:getOrganizationConformancePackDetailedStatus",
          "config:getResourceConfigHistory",
          "config:listAggregateDiscoveredResources",
          "config:listDiscoveredResources",
          "config:listTagsForResource",
          "connect:describeContact",
          "connect:describePhoneNumber",
          "connect:describeQuickConnect",
          "connect:describeUser",
          "connect:getCurrentMetricData",
          "connect:getMetricData",
          "connect:listContactEvaluations",
          "connect:listEvaluationForms",
          "connect:listEvaluationFormVersions",
          "connect:listPhoneNumbersV2",
          "connect:listQuickConnects",
          "connect:listRoutingProfiles",
          "connect:listSecurityProfiles",
          "connect:listUsers",
          "connect:listViews",
          "connect:listViewVersions",
          "connect:describeQueue",
          "connect:listQueues",
          "connect:describeRoutingProfile",
          "connect:searchQueues",
          "connect:searchUsers",
          "connect:searchRoutingProfiles",
          "connect:listRoutingProfileQueues",
          "connect:describeUserHierarchyStructure",
          "connect:listQueueQuickConnects",
          "controltower:describeAccountFactoryConfig",
          "controltower:describeCoreService",
          "controltower:describeGuardrail",
          "controltower:describeGuardrailForTarget",
          "controltower:describeManagedAccount",
          "controltower:describeSingleSignOn",
          "controltower:getAvailableUpdates",
          "controltower:getHomeRegion",
          "controltower:getLandingZone",
          "controltower:getLandingZoneStatus",
          "controltower:listDirectoryGroups",
          "controltower:listEnabledControls",
          "controltower:listGuardrailsForTarget",
          "controltower:listGuardrailViolations",
          "controltower:listLandingZones",
          "controltower:listManagedAccounts",
          "controltower:listManagedAccountsForGuardrail",
          "controltower:listManagedAccountsForParent",
          "controltower:listManagedOrganizationalUnits",
          "controltower:listManagedOrganizationalUnitsForGuardrail",
          "cost-optimization-hub:getPreferences",
          "cost-optimization-hub:getRecommendation",
          "cost-optimization-hub:listEnrollmentStatuses",
          "cost-optimization-hub:listRecommendations",
          "cost-optimization-hub:listRecommendationSummaries",
          "databrew:describeDataset",
          "databrew:describeJob",
          "databrew:describeProject",
          "databrew:describeRecipe",
          "databrew:listDatasets",
          "databrew:listJobRuns",
          "databrew:listJobs",
          "databrew:listProjects",
          "databrew:listRecipes",
          "databrew:listRecipeVersions",
          "databrew:listTagsForResource",
          "datapipeline:describeObjects",
          "datapipeline:describePipelines",
          "datapipeline:getPipelineDefinition",
          "datapipeline:listPipelines",
          "datapipeline:queryObjects",
          "datasync:describeAgent",
          "datasync:describeLocationEfs",
          "datasync:describeLocationFsxLustre",
          "datasync:describeLocationFsxOpenZfs",
          "datasync:describeLocationFsxWindows",
          "datasync:describeLocationHdfs",
          "datasync:describeLocationNfs",
          "datasync:describeLocationObjectStorage",
          "datasync:describeLocationS3",
          "datasync:describeLocationSmb",
          "datasync:describeTask",
          "datasync:describeTaskExecution",
          "datasync:listAgents",
          "datasync:listLocations",
          "datasync:listTaskExecutions",
          "datasync:listTasks",
          "datazone:getAsset",
          "datazone:getAssetType",
          "datazone:getDataSource",
          "datazone:getDataSourceRun",
          "datazone:getDomain",
          "datazone:getEnvironment",
          "datazone:getEnvironmentBlueprint",
          "datazone:getEnvironmentBlueprintConfiguration",
          "datazone:getFormType",
          "datazone:getGlossary",
          "datazone:getGlossaryTerm",
          "datazone:getGroupProfile",
          "datazone:getListing",
          "datazone:getMetadataGenerationRun",
          "datazone:getProject",
          "datazone:getSubscription",
          "datazone:getSubscriptionGrant",
          "datazone:getSubscriptionRequestDetails",
          "datazone:getSubscriptionTarget",
          "datazone:getUserProfile",
          "datazone:listAssetRevisions",
          "datazone:listDataSourceRunActivities",
          "datazone:listDataSourceRuns",
          "datazone:listDataSources",
          "datazone:listDomains",
          "datazone:listEnvironmentBlueprintConfigurations",
          "datazone:listEnvironmentBlueprints",
          "datazone:listEnvironmentProfiles",
          "datazone:listEnvironments",
          "datazone:listMetadataGenerationRuns",
          "datazone:listProjectMemberships",
          "datazone:listProjects",
          "datazone:listSubscriptionGrants",
          "datazone:listSubscriptionRequests",
          "datazone:listSubscriptions",
          "datazone:listSubscriptionTargets",
          "datazone:searchGroupProfiles",
          "datazone:searchUserProfiles",
          "datazone:getEnvironmentProfile",
          "dax:describeClusters",
          "dax:describeDefaultParameters",
          "dax:describeEvents",
          "dax:describeParameterGroups",
          "dax:describeParameters",
          "dax:describeSubnetGroups",
          "deadline:listAvailableMeteredProducts",
          "deadline:listBudgets",
          "deadline:listFarmMembers",
          "deadline:listFarms",
          "deadline:listFleetMembers",
          "deadline:listFleets",
          "deadline:listJobMembers",
          "deadline:listJobs",
          "deadline:listLicenseEndpoints",
          "deadline:listMeteredProducts",
          "deadline:listMonitors",
          "deadline:listQueueEnvironments",
          "deadline:listQueueFleetAssociations",
          "deadline:listQueueMembers",
          "deadline:listQueues",
          "deadline:listStorageProfiles",
          "deadline:listWorkers",
          "detective:getMembers",
          "detective:listGraphs",
          "detective:listInvitations",
          "detective:listMembers",
          "devicefarm:getAccountSettings",
          "devicefarm:getDevice",
          "devicefarm:getDevicePool",
          "devicefarm:getDevicePoolCompatibility",
          "devicefarm:getJob",
          "devicefarm:getProject",
          "devicefarm:getRemoteAccessSession",
          "devicefarm:getRun",
          "devicefarm:getSuite",
          "devicefarm:getTest",
          "devicefarm:getTestGridProject",
          "devicefarm:getTestGridSession",
          "devicefarm:getUpload",
          "devicefarm:listArtifacts",
          "devicefarm:listDevicePools",
          "devicefarm:listDevices",
          "devicefarm:listJobs",
          "devicefarm:listProjects",
          "devicefarm:listRemoteAccessSessions",
          "devicefarm:listRuns",
          "devicefarm:listSamples",
          "devicefarm:listSuites",
          "devicefarm:listTestGridProjects",
          "devicefarm:listTestGridSessionActions",
          "devicefarm:listTestGridSessionArtifacts",
          "devicefarm:listTestGridSessions",
          "devicefarm:listTests",
          "devicefarm:listUniqueProblems",
          "devicefarm:listUploads",
          "directconnect:describeConnectionLoa",
          "directconnect:describeConnections",
          "directconnect:describeConnectionsOnInterconnect",
          "directconnect:describeCustomerMetadata",
          "directconnect:describeDirectConnectGatewayAssociationProposals",
          "directconnect:describeDirectConnectGatewayAssociations",
          "directconnect:describeDirectConnectGatewayAttachments",
          "directconnect:describeDirectConnectGateways",
          "directconnect:describeHostedConnections",
          "directconnect:describeInterconnectLoa",
          "directconnect:describeInterconnects",
          "directconnect:describeLags",
          "directconnect:describeLoa",
          "directconnect:describeLocations",
          "directconnect:describeRouterConfiguration",
          "directconnect:describeVirtualGateways",
          "directconnect:describeVirtualInterfaces",
          "dlm:getLifecyclePolicies",
          "dlm:getLifecyclePolicy",
          "dms:describeAccountAttributes",
          "dms:describeApplicableIndividualAssessments",
          "dms:describeConnections",
          "dms:describeEndpoints",
          "dms:describeEndpointSettings",
          "dms:describeEndpointTypes",
          "dms:describeEventCategories",
          "dms:describeEvents",
          "dms:describeEventSubscriptions",
          "dms:describeFleetAdvisorCollectors",
          "dms:describeFleetAdvisorDatabases",
          "dms:describeFleetAdvisorLsaAnalysis",
          "dms:describeFleetAdvisorSchemaObjectSummary",
          "dms:describeFleetAdvisorSchemas",
          "dms:describeOrderableReplicationInstances",
          "dms:describePendingMaintenanceActions",
          "dms:describeRefreshSchemasStatus",
          "dms:describeReplicationInstances",
          "dms:describeReplicationInstanceTaskLogs",
          "dms:describeReplicationSubnetGroups",
          "dms:describeReplicationTaskAssessmentResults",
          "dms:describeReplicationTaskAssessmentRuns",
          "dms:describeReplicationTaskIndividualAssessments",
          "dms:describeReplicationTasks",
          "dms:describeSchemas",
          "dms:describeTableStatistics",
          "docdb-elastic:getCluster",
          "docdb-elastic:getClusterSnapshot",
          "docdb-elastic:listClusters",
          "docdb-elastic:listClusterSnapshots",
          "drs:describeJobLogItems",
          "drs:describeJobs",
          "drs:describeLaunchConfigurationTemplates",
          "drs:describeRecoveryInstances",
          "drs:describeRecoverySnapshots",
          "drs:describeReplicationConfigurationTemplates",
          "drs:describeSourceNetworks",
          "drs:describeSourceServers",
          "drs:getLaunchConfiguration",
          "drs:getReplicationConfiguration",
          "drs:listExtensibleSourceServers",
          "drs:listLaunchActions",
          "drs:listStagingAccounts",
          "ds:describeClientAuthenticationSettings",
          "ds:describeConditionalForwarders",
          "ds:describeDirectories",
          "ds:describeDomainControllers",
          "ds:describeEventTopics",
          "ds:describeLDAPSSettings",
          "ds:describeSharedDirectories",
          "ds:describeSnapshots",
          "ds:describeTrusts",
          "ds:getDirectoryLimits",
          "ds:getSnapshotLimits",
          "ds:listIpRoutes",
          "ds:listSchemaExtensions",
          "ds:listTagsForResource",
          "dynamodb:describeBackup",
          "dynamodb:describeContinuousBackups",
          "dynamodb:describeContributorInsights",
          "dynamodb:describeExport",
          "dynamodb:describeGlobalTable",
          "dynamodb:describeImport",
          "dynamodb:describeKinesisStreamingDestination",
          "dynamodb:describeLimits",
          "dynamodb:describeStream",
          "dynamodb:describeTable",
          "dynamodb:describeTimeToLive",
          "dynamodb:getResourcePolicy",
          "dynamodb:listBackups",
          "dynamodb:listContributorInsights",
          "dynamodb:listExports",
          "dynamodb:listGlobalTables",
          "dynamodb:listImports",
          "dynamodb:listStreams",
          "dynamodb:listTables",
          "dynamodb:listTagsOfResource",
          "ec2:describeAccountAttributes",
          "ec2:describeAddresses",
          "ec2:describeAddressesAttribute",
          "ec2:describeAddressTransfers",
          "ec2:describeAggregateIdFormat",
          "ec2:describeAvailabilityZones",
          "ec2:describeBundleTasks",
          "ec2:describeByoipCidrs",
          "ec2:describeCapacityReservationFleets",
          "ec2:describeCapacityReservations",
          "ec2:describeCarrierGateways",
          "ec2:describeClassicLinkInstances",
          "ec2:describeClientVpnAuthorizationRules",
          "ec2:describeClientVpnConnections",
          "ec2:describeClientVpnEndpoints",
          "ec2:describeClientVpnRoutes",
          "ec2:describeClientVpnTargetNetworks",
          "ec2:describeCoipPools",
          "ec2:describeConversionTasks",
          "ec2:describeCustomerGateways",
          "ec2:describeDhcpOptions",
          "ec2:describeEgressOnlyInternetGateways",
          "ec2:describeExportImageTasks",
          "ec2:describeExportTasks",
          "ec2:describeFastLaunchImages",
          "ec2:describeFastSnapshotRestores",
          "ec2:describeFleetHistory",
          "ec2:describeFleetInstances",
          "ec2:describeFleets",
          "ec2:describeFlowLogs",
          "ec2:describeFpgaImageAttribute",
          "ec2:describeFpgaImages",
          "ec2:describeHostReservationOfferings",
          "ec2:describeHostReservations",
          "ec2:describeHosts",
          "ec2:describeIamInstanceProfileAssociations",
          "ec2:describeIdentityIdFormat",
          "ec2:describeIdFormat",
          "ec2:describeImageAttribute",
          "ec2:describeImages",
          "ec2:describeImportImageTasks",
          "ec2:describeImportSnapshotTasks",
          "ec2:describeInstanceAttribute",
          "ec2:describeInstanceCreditSpecifications",
          "ec2:describeInstanceEventNotificationAttributes",
          "ec2:describeInstanceEventWindows",
          "ec2:describeInstances",
          "ec2:describeInstanceStatus",
          "ec2:describeInstanceTypeOfferings",
          "ec2:describeInstanceTypes",
          "ec2:describeInternetGateways",
          "ec2:describeIpamPools",
          "ec2:describeIpamScopes",
          "ec2:describeIpv6Pools",
          "ec2:describeKeyPairs",
          "ec2:describeLaunchTemplates",
          "ec2:describeLaunchTemplateVersions",
          "ec2:describeLocalGatewayRouteTables",
          "ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
          "ec2:describeLocalGatewayRouteTableVpcAssociations",
          "ec2:describeLocalGateways",
          "ec2:describeLocalGatewayVirtualInterfaceGroups",
          "ec2:describeLocalGatewayVirtualInterfaces",
          "ec2:describeManagedPrefixLists",
          "ec2:describeMovingAddresses",
          "ec2:describeNatGateways",
          "ec2:describeNetworkAcls",
          "ec2:describeNetworkInterfaceAttribute",
          "ec2:describeNetworkInterfaces",
          "ec2:describeNetworkInsightsPaths",
          "ec2:describePlacementGroups",
          "ec2:describePrefixLists",
          "ec2:describePrincipalIdFormat",
          "ec2:describePublicIpv4Pools",
          "ec2:describeRegions",
          "ec2:describeReservedInstances",
          "ec2:describeReservedInstancesListings",
          "ec2:describeReservedInstancesModifications",
          "ec2:describeReservedInstancesOfferings",
          "ec2:describeRouteTables",
          "ec2:describeScheduledInstanceAvailability",
          "ec2:describeScheduledInstances",
          "ec2:describeSecurityGroupReferences",
          "ec2:describeSecurityGroupRules",
          "ec2:describeSecurityGroups",
          "ec2:describeSnapshotAttribute",
          "ec2:describeSnapshots",
          "ec2:describeSnapshotTierStatus",
          "ec2:describeSpotDatafeedSubscription",
          "ec2:describeSpotFleetInstances",
          "ec2:describeSpotFleetRequestHistory",
          "ec2:describeSpotFleetRequests",
          "ec2:describeSpotInstanceRequests",
          "ec2:describeSpotPriceHistory",
          "ec2:describeStaleSecurityGroups",
          "ec2:describeStoreImageTasks",
          "ec2:describeSubnets",
          "ec2:describeTags",
          "ec2:describeTrafficMirrorFilters",
          "ec2:describeTrafficMirrorSessions",
          "ec2:describeTrafficMirrorTargets",
          "ec2:describeTransitGatewayAttachments",
          "ec2:describeTransitGatewayConnectPeers",
          "ec2:describeTransitGatewayMulticastDomains",
          "ec2:describeTransitGatewayPeeringAttachments",
          "ec2:describeTransitGatewayPolicyTables",
          "ec2:describeTransitGatewayRouteTableAnnouncements",
          "ec2:describeTransitGatewayRouteTables",
          "ec2:describeTransitGateways",
          "ec2:describeTransitGatewayVpcAttachments",
          "ec2:describeVerifiedAccessEndpoints",
          "ec2:describeVerifiedAccessGroups",
          "ec2:describeVerifiedAccessInstances",
          "ec2:describeVerifiedAccessTrustProviders",
          "ec2:describeVolumeAttribute",
          "ec2:describeVolumes",
          "ec2:describeVolumesModifications",
          "ec2:describeVolumeStatus",
          "ec2:describeVpcAttribute",
          "ec2:describeVpcClassicLink",
          "ec2:describeVpcClassicLinkDnsSupport",
          "ec2:describeVpcEndpointConnectionNotifications",
          "ec2:describeVpcEndpointConnections",
          "ec2:describeVpcEndpoints",
          "ec2:describeVpcEndpointServiceConfigurations",
          "ec2:describeVpcEndpointServicePermissions",
          "ec2:describeVpcEndpointServices",
          "ec2:describeVpcPeeringConnections",
          "ec2:describeVpcs",
          "ec2:describeVpnConnections",
          "ec2:describeVpnGateways",
          "ec2:getAssociatedIpv6PoolCidrs",
          "ec2:getCapacityReservationUsage",
          "ec2:getSubnetCidrReservations",
          "ec2:getCoipPoolUsage",
          "ec2:getConsoleOutput",
          "ec2:getConsoleScreenshot",
          "ec2:getDefaultCreditSpecification",
          "ec2:getEbsDefaultKmsKeyId",
          "ec2:getEbsEncryptionByDefault",
          "ec2:getGroupsForCapacityReservation",
          "ec2:getHostReservationPurchasePreview",
          "ec2:getInstanceTypesFromInstanceRequirements",
          "ec2:getIpamAddressHistory",
          "ec2:getIpamPoolAllocations",
          "ec2:getLaunchTemplateData",
          "ec2:getManagedPrefixListAssociations",
          "ec2:getManagedPrefixListEntries",
          "ec2:getReservedInstancesExchangeQuote",
          "ec2:getSerialConsoleAccessStatus",
          "ec2:getSpotPlacementScores",
          "ec2:getTransitGatewayMulticastDomainAssociations",
          "ec2:getTransitGatewayPrefixListReferences",
          "ec2:getVerifiedAccessEndpointPolicy",
          "ec2:getVerifiedAccessGroupPolicy",
          "ec2:listImagesInRecycleBin",
          "ec2:listSnapshotsInRecycleBin",
          "ec2:searchLocalGatewayRoutes",
          "ec2:searchTransitGatewayMulticastGroups",
          "ec2:searchTransitGatewayRoutes",
          "ec2:describeIpamByoasn",
          "ec2:describeIpamResourceDiscoveries",
          "ec2:describeIpamResourceDiscoveryAssociations",
          "ec2:describeIpams",
          "ec2:getIpamDiscoveredAccounts",
          "ec2:getIpamDiscoveredPublicAddresses",
          "ec2:getIpamDiscoveredResourceCidrs",
          "ec2:getIpamPoolCidrs",
          "ec2:getIpamResourceCidrs",
          "ec2:describeNetworkInsightsAccessScopes",
          "ec2:describeNetworkInsightsAnalyses",
          "ec2:describeTrafficMirrorFilterRules",
          "ecr-public:describeImages",
          "ecr-public:describeImageTags",
          "ecr-public:describeRegistries",
          "ecr-public:describeRepositories",
          "ecr-public:getRegistryCatalogData",
          "ecr-public:getRepositoryCatalogData",
          "ecr-public:getRepositoryPolicy",
          "ecr-public:listTagsForResource",
          "ecr:batchCheckLayerAvailability",
          "ecr:batchGetRepositoryScanningConfiguration",
          "ecr:describeImages",
          "ecr:describeImageReplicationStatus",
          "ecr:describeImageScanFindings",
          "ecr:describePullThroughCacheRules",
          "ecr:describeRegistry",
          "ecr:describeRepositories",
          "ecr:getLifecyclePolicy",
          "ecr:getLifecyclePolicyPreview",
          "ecr:getRegistryPolicy",
          "ecr:getRegistryScanningConfiguration",
          "ecr:getRepositoryPolicy",
          "ecr:listImages",
          "ecr:listTagsForResource",
          "ecs:describeCapacityProviders",
          "ecs:describeClusters",
          "ecs:describeContainerInstances",
          "ecs:describeServices",
          "ecs:describeTaskDefinition",
          "ecs:describeTasks",
          "ecs:describeTaskSets",
          "ecs:getTaskProtection",
          "ecs:listAccountSettings",
          "ecs:listAttributes",
          "ecs:listClusters",
          "ecs:listContainerInstances",
          "ecs:listServices",
          "ecs:listServicesByNamespace",
          "ecs:listTagsForResource",
          "ecs:listTaskDefinitionFamilies",
          "ecs:listTaskDefinitions",
          "ecs:listTasks",
          "eks:describeAccessEntry",
          "eks:describeAddon",
          "eks:describeAddonConfiguration",
          "eks:describeAddonVersions",
          "eks:describeCluster",
          "eks:describeEksAnywhereSubscription",
          "eks:describeFargateProfile",
          "eks:describeIdentityProviderConfig",
          "eks:describeNodegroup",
          "eks:describePodIdentityAssociation",
          "eks:listPodIdentityAssociations",
          "eks:describeUpdate",
          "eks:listAccessEntries",
          "eks:listAccessPolicies",
          "eks:listAddons",
          "eks:listAssociatedAccessPolicies",
          "eks:listClusters",
          "eks:listEksAnywhereSubscriptions",
          "eks:listFargateProfiles",
          "eks:listIdentityProviderConfigs",
          "eks:listNodegroups",
          "eks:listUpdates",
          "eks:describeInsight",
          "eks:listInsights",
          "elasticache:describeCacheClusters",
          "elasticache:describeCacheEngineVersions",
          "elasticache:describeCacheParameterGroups",
          "elasticache:describeCacheParameters",
          "elasticache:describeCacheSecurityGroups",
          "elasticache:describeCacheSubnetGroups",
          "elasticache:describeEngineDefaultParameters",
          "elasticache:describeEvents",
          "elasticache:describeGlobalReplicationGroups",
          "elasticache:describeReplicationGroups",
          "elasticache:describeReservedCacheNodes",
          "elasticache:describeReservedCacheNodesOfferings",
          "elasticache:describeServerlessCaches",
          "elasticache:describeServerlessCacheSnapshots",
          "elasticache:describeServiceUpdates",
          "elasticache:describeSnapshots",
          "elasticache:describeUpdateActions",
          "elasticache:describeUserGroups",
          "elasticache:describeUsers",
          "elasticache:listAllowedNodeTypeModifications",
          "elasticache:listTagsForResource",
          "elasticbeanstalk:checkDNSAvailability",
          "elasticbeanstalk:describeAccountAttributes",
          "elasticbeanstalk:describeApplicationVersions",
          "elasticbeanstalk:describeApplications",
          "elasticbeanstalk:describeConfigurationOptions",
          "elasticbeanstalk:describeEnvironmentHealth",
          "elasticbeanstalk:describeEnvironmentManagedActionHistory",
          "elasticbeanstalk:describeEnvironmentManagedActions",
          "elasticbeanstalk:describeEnvironmentResources",
          "elasticbeanstalk:describeEnvironments",
          "elasticbeanstalk:describeEvents",
          "elasticbeanstalk:describeInstancesHealth",
          "elasticbeanstalk:describePlatformVersion",
          "elasticbeanstalk:listAvailableSolutionStacks",
          "elasticbeanstalk:listPlatformBranches",
          "elasticbeanstalk:listPlatformVersions",
          "elasticbeanstalk:validateConfigurationSettings",
          "elasticfilesystem:describeAccessPoints",
          "elasticfilesystem:describeBackupPolicy",
          "elasticfilesystem:describeReplicationConfigurations",
          "elasticfilesystem:describeFileSystemPolicy",
          "elasticfilesystem:describeFileSystems",
          "elasticfilesystem:describeLifecycleConfiguration",
          "elasticfilesystem:describeMountTargets",
          "elasticfilesystem:describeMountTargetSecurityGroups",
          "elasticfilesystem:describeTags",
          "elasticfilesystem:listTagsForResource",
          "elasticloadbalancing:describeAccountLimits",
          "elasticloadbalancing:describeInstanceHealth",
          "elasticloadbalancing:describeListenerCertificates",
          "elasticloadbalancing:describeListeners",
          "elasticloadbalancing:describeLoadBalancerAttributes",
          "elasticloadbalancing:describeLoadBalancerPolicies",
          "elasticloadbalancing:describeLoadBalancerPolicyTypes",
          "elasticloadbalancing:describeLoadBalancers",
          "elasticloadbalancing:describeTrustStores",
          "elasticloadbalancing:describeTrustStoreAssociations",
          "elasticloadbalancing:describeTrustStoreRevocations",
          "elasticloadbalancing:describeRules",
          "elasticloadbalancing:describeSSLPolicies",
          "elasticloadbalancing:describeTags",
          "elasticloadbalancing:describeTargetGroupAttributes",
          "elasticloadbalancing:describeTargetGroups",
          "elasticloadbalancing:describeTargetHealth",
          "elasticmapreduce:describeCluster",
          "elasticmapreduce:describeNotebookExecution",
          "elasticmapreduce:describeReleaseLabel",
          "elasticmapreduce:describeSecurityConfiguration",
          "elasticmapreduce:describeStep",
          "elasticmapreduce:describeStudio",
          "elasticmapreduce:getAutoTerminationPolicy",
          "elasticmapreduce:getBlockPublicAccessConfiguration",
          "elasticmapreduce:getManagedScalingPolicy",
          "elasticmapreduce:getStudioSessionMapping",
          "elasticmapreduce:listBootstrapActions",
          "elasticmapreduce:listClusters",
          "elasticmapreduce:listInstanceFleets",
          "elasticmapreduce:listInstanceGroups",
          "elasticmapreduce:listInstances",
          "elasticmapreduce:listNotebookExecutions",
          "elasticmapreduce:listReleaseLabels",
          "elasticmapreduce:listSecurityConfigurations",
          "elasticmapreduce:listSteps",
          "elasticmapreduce:listStudios",
          "elasticmapreduce:listStudioSessionMappings",
          "elastictranscoder:listJobsByPipeline",
          "elastictranscoder:listJobsByStatus",
          "elastictranscoder:listPipelines",
          "elastictranscoder:listPresets",
          "elastictranscoder:readPipeline",
          "elastictranscoder:readPreset",
          "emr-containers:describeJobRun",
          "emr-containers:describeJobTemplate",
          "emr-containers:describeManagedEndpoint",
          "emr-containers:describeVirtualCluster",
          "emr-containers:listJobRuns",
          "emr-containers:listJobTemplates",
          "emr-containers:listManagedEndpoints",
          "emr-containers:listVirtualClusters",
          "emr-serverless:getApplication",
          "emr-serverless:getJobRun",
          "emr-serverless:listApplications",
          "es:describeDomain",
          "es:describeDomainAutoTunes",
          "es:describeDomainChangeProgress",
          "es:describeDomainConfig",
          "es:describeDomains",
          "es:describeDryRunProgress",
          "es:describeElasticsearchDomain",
          "es:describeElasticsearchDomainConfig",
          "es:describeElasticsearchDomains",
          "es:describeInboundConnections",
          "es:describeInstanceTypeLimits",
          "es:describeOutboundConnections",
          "es:describePackages",
          "es:describeReservedInstanceOfferings",
          "es:describeReservedInstances",
          "es:describeVpcEndpoints",
          "es:getCompatibleVersions",
          "es:getPackageVersionHistory",
          "es:getUpgradeHistory",
          "es:getUpgradeStatus",
          "es:listDomainNames",
          "es:listDomainsForPackage",
          "es:listInstanceTypeDetails",
          "es:listPackagesForDomain",
          "es:listScheduledActions",
          "es:listTags",
          "es:listVersions",
          "es:listVpcEndpointAccess",
          "es:listVpcEndpoints",
          "es:listVpcEndpointsForDomain",
          "evidently:getExperiment",
          "evidently:getFeature",
          "evidently:getLaunch",
          "evidently:getProject",
          "evidently:getSegment",
          "evidently:listExperiments",
          "evidently:listFeatures",
          "evidently:listLaunches",
          "evidently:listProjects",
          "evidently:listSegments",
          "evidently:listSegmentReferences",
          "events:describeApiDestination",
          "events:describeArchive",
          "events:describeConnection",
          "events:describeEndpoint",
          "events:describeEventBus",
          "events:describeEventSource",
          "events:describePartnerEventSource",
          "events:describeReplay",
          "events:describeRule",
          "events:listArchives",
          "events:listApiDestinations",
          "events:listConnections",
          "events:listEndpoints",
          "events:listEventBuses",
          "events:listEventSources",
          "events:listPartnerEventSourceAccounts",
          "events:listPartnerEventSources",
          "events:listReplays",
          "events:listRuleNamesByTarget",
          "events:listRules",
          "events:listTargetsByRule",
          "events:testEventPattern",
          "firehose:describeDeliveryStream",
          "firehose:listDeliveryStreams",
          "fms:getAdminAccount",
          "fms:getComplianceDetail",
          "fms:getNotificationChannel",
          "fms:getPolicy",
          "fms:getProtectionStatus",
          "fms:listComplianceStatus",
          "fms:listMemberAccounts",
          "fms:listPolicies",
          "forecast:describeDataset",
          "forecast:describeDatasetGroup",
          "forecast:describeDatasetImportJob",
          "forecast:describeForecast",
          "forecast:describeForecastExportJob",
          "forecast:describePredictor",
          "forecast:getAccuracyMetrics",
          "forecast:listDatasetGroups",
          "forecast:listDatasetImportJobs",
          "forecast:listDatasets",
          "forecast:listForecastExportJobs",
          "forecast:listForecasts",
          "forecast:listPredictors",
          "freetier:getFreeTierUsage",
          "fsx:describeBackups",
          "fsx:describeDataRepositoryAssociations",
          "fsx:describeDataRepositoryTasks",
          "fsx:describeFileCaches",
          "fsx:describeFileSystems",
          "fsx:describeSnapshots",
          "fsx:describeStorageVirtualMachines",
          "fsx:describeVolumes",
          "fsx:listTagsForResource",
          "gamelift:describeAlias",
          "gamelift:describeBuild",
          "gamelift:describeEC2InstanceLimits",
          "gamelift:describeFleetAttributes",
          "gamelift:describeFleetCapacity",
          "gamelift:describeFleetEvents",
          "gamelift:describeFleetLocationAttributes",
          "gamelift:describeFleetLocationCapacity",
          "gamelift:describeFleetLocationUtilization",
          "gamelift:describeFleetPortSettings",
          "gamelift:describeFleetUtilization",
          "gamelift:describeGameServer",
          "gamelift:describeGameServerGroup",
          "gamelift:describeGameSessionDetails",
          "gamelift:describeGameSessionPlacement",
          "gamelift:describeGameSessionQueues",
          "gamelift:describeGameSessions",
          "gamelift:describeInstances",
          "gamelift:describeMatchmaking",
          "gamelift:describeMatchmakingConfigurations",
          "gamelift:describeMatchmakingRuleSets",
          "gamelift:describePlayerSessions",
          "gamelift:describeRuntimeConfiguration",
          "gamelift:describeScalingPolicies",
          "gamelift:describeScript",
          "gamelift:listAliases",
          "gamelift:listBuilds",
          "gamelift:listFleets",
          "gamelift:listGameServerGroups",
          "gamelift:listGameServers",
          "gamelift:listScripts",
          "gamelift:resolveAlias",
          "glacier:describeJob",
          "glacier:describeVault",
          "glacier:getDataRetrievalPolicy",
          "glacier:getVaultAccessPolicy",
          "glacier:getVaultLock",
          "glacier:getVaultNotifications",
          "glacier:listJobs",
          "glacier:listTagsForVault",
          "glacier:listVaults",
          "globalaccelerator:describeAccelerator",
          "globalaccelerator:describeAcceleratorAttributes",
          "globalaccelerator:describeEndpointGroup",
          "globalaccelerator:describeListener",
          "globalaccelerator:listAccelerators",
          "globalaccelerator:listEndpointGroups",
          "globalaccelerator:listListeners",
          "glue:batchGetBlueprints",
          "glue:batchGetCrawlers",
          "glue:batchGetDevEndpoints",
          "glue:batchGetJobs",
          "glue:batchGetPartition",
          "glue:batchGetTriggers",
          "glue:batchGetWorkflows",
          "glue:checkSchemaVersionValidity",
          "glue:getBlueprint",
          "glue:getBlueprintRun",
          "glue:getBlueprintRuns",
          "glue:getCatalogImportStatus",
          "glue:getClassifier",
          "glue:getClassifiers",
          "glue:getColumnStatisticsForPartition",
          "glue:getColumnStatisticsForTable",
          "glue:getCrawler",
          "glue:getCrawlerMetrics",
          "glue:getCrawlers",
          "glue:getCustomEntityType",
          "glue:getDatabase",
          "glue:getDatabases",
          "glue:getDataflowGraph",
          "glue:getDataQualityResult",
          "glue:getDataQualityRuleRecommendationRun",
          "glue:getDataQualityRuleset",
          "glue:getDataQualityRulesetEvaluationRun",
          "glue:getDevEndpoint",
          "glue:getDevEndpoints",
          "glue:getJob",
          "glue:getJobRun",
          "glue:getJobRuns",
          "glue:getJobs",
          "glue:getMapping",
          "glue:getMLTaskRun",
          "glue:getMLTaskRuns",
          "glue:getMLTransform",
          "glue:getMLTransforms",
          "glue:getPartition",
          "glue:getPartitionIndexes",
          "glue:getPartitions",
          "glue:getRegistry",
          "glue:getResourcePolicies",
          "glue:getResourcePolicy",
          "glue:getSchema",
          "glue:getSchemaByDefinition",
          "glue:getSchemaVersion",
          "glue:getSchemaVersionsDiff",
          "glue:getSession",
          "glue:getStatement",
          "glue:getTable",
          "glue:getTables",
          "glue:getTableVersions",
          "glue:getTrigger",
          "glue:getTriggers",
          "glue:getUserDefinedFunction",
          "glue:getUserDefinedFunctions",
          "glue:getWorkflow",
          "glue:getWorkflowRun",
          "glue:getWorkflowRuns",
          "glue:listCrawlers",
          "glue:listCrawls",
          "glue:listDataQualityResults",
          "glue:listDataQualityRuleRecommendationRuns",
          "glue:listDataQualityRulesetEvaluationRuns",
          "glue:listDataQualityRulesets",
          "glue:listDevEndpoints",
          "glue:listMLTransforms",
          "glue:listRegistries",
          "glue:listSchemas",
          "glue:listSchemaVersions",
          "glue:listSessions",
          "glue:listStatements",
          "glue:querySchemaVersionMetadata",
          "glue:listTableOptimizerRuns",
          "glue:getTableOptimizer",
          "grafana:describeWorkspace",
          "grafana:describeWorkspaceAuthentication",
          "grafana:listPermissions",
          "grafana:listVersions",
          "grafana:listWorkspaces",
          "greengrass:getConnectivityInfo",
          "greengrass:getCoreDefinition",
          "greengrass:getCoreDefinitionVersion",
          "greengrass:getDeploymentStatus",
          "greengrass:getDeviceDefinition",
          "greengrass:getDeviceDefinitionVersion",
          "greengrass:getFunctionDefinition",
          "greengrass:getFunctionDefinitionVersion",
          "greengrass:getGroup",
          "greengrass:getGroupCertificateAuthority",
          "greengrass:getGroupVersion",
          "greengrass:getLoggerDefinition",
          "greengrass:getLoggerDefinitionVersion",
          "greengrass:getResourceDefinitionVersion",
          "greengrass:getServiceRoleForAccount",
          "greengrass:getSubscriptionDefinition",
          "greengrass:getSubscriptionDefinitionVersion",
          "greengrass:listCoreDefinitions",
          "greengrass:listCoreDefinitionVersions",
          "greengrass:listDeployments",
          "greengrass:listDeviceDefinitions",
          "greengrass:listDeviceDefinitionVersions",
          "greengrass:listFunctionDefinitions",
          "greengrass:listFunctionDefinitionVersions",
          "greengrass:listGroups",
          "greengrass:listGroupVersions",
          "greengrass:listLoggerDefinitions",
          "greengrass:listLoggerDefinitionVersions",
          "greengrass:listResourceDefinitions",
          "greengrass:listResourceDefinitionVersions",
          "greengrass:listSubscriptionDefinitions",
          "greengrass:listSubscriptionDefinitionVersions",
          "guardduty:getDetector",
          "guardduty:getFindings",
          "guardduty:getFindingsStatistics",
          "guardduty:getInvitationsCount",
          "guardduty:getIPSet",
          "guardduty:getMasterAccount",
          "guardduty:getMembers",
          "guardduty:getThreatIntelSet",
          "guardduty:listDetectors",
          "guardduty:listFindings",
          "guardduty:listInvitations",
          "guardduty:listIPSets",
          "guardduty:listMembers",
          "guardduty:listThreatIntelSets",
          "health:describeAffectedAccountsForOrganization",
          "health:describeAffectedEntities",
          "health:describeAffectedEntitiesForOrganization",
          "health:describeEntityAggregates",
          "health:describeEntityAggregatesForOrganization",
          "health:describeEventAggregates",
          "health:describeEventDetails",
          "health:describeEventDetailsForOrganization",
          "health:describeEvents",
          "health:describeEventsForOrganization",
          "health:describeEventTypes",
          "health:describeHealthServiceStatusForOrganization",
          "iam:getAccessKeyLastUsed",
          "iam:getAccountAuthorizationDetails",
          "iam:getAccountPasswordPolicy",
          "iam:getAccountSummary",
          "iam:getContextKeysForCustomPolicy",
          "iam:getContextKeysForPrincipalPolicy",
          "iam:getCredentialReport",
          "iam:getGroup",
          "iam:getGroupPolicy",
          "iam:getInstanceProfile",
          "iam:getLoginProfile",
          "iam:getOpenIDConnectProvider",
          "iam:getPolicy",
          "iam:getPolicyVersion",
          "iam:getRole",
          "iam:getRolePolicy",
          "iam:getSAMLProvider",
          "iam:getServerCertificate",
          "iam:getServiceLinkedRoleDeletionStatus",
          "iam:getSSHPublicKey",
          "iam:getUser",
          "iam:getUserPolicy",
          "iam:listAccessKeys",
          "iam:listAccountAliases",
          "iam:listAttachedGroupPolicies",
          "iam:listAttachedRolePolicies",
          "iam:listAttachedUserPolicies",
          "iam:listEntitiesForPolicy",
          "iam:listGroupPolicies",
          "iam:listGroups",
          "iam:listGroupsForUser",
          "iam:listInstanceProfiles",
          "iam:listInstanceProfilesForRole",
          "iam:listMFADevices",
          "iam:listOpenIDConnectProviders",
          "iam:listPolicies",
          "iam:listPolicyVersions",
          "iam:listRolePolicies",
          "iam:listRoles",
          "iam:listSAMLProviders",
          "iam:listServerCertificates",
          "iam:listSigningCertificates",
          "iam:listSSHPublicKeys",
          "iam:listUserPolicies",
          "iam:listUsers",
          "iam:listVirtualMFADevices",
          "iam:simulateCustomPolicy",
          "iam:simulatePrincipalPolicy",
          "imagebuilder:getComponent",
          "imagebuilder:getComponentPolicy",
          "imagebuilder:getContainerRecipe",
          "imagebuilder:getDistributionConfiguration",
          "imagebuilder:getImage",
          "imagebuilder:getImagePipeline",
          "imagebuilder:getImagePolicy",
          "imagebuilder:getImageRecipe",
          "imagebuilder:getImageRecipePolicy",
          "imagebuilder:getInfrastructureConfiguration",
          "imagebuilder:getLifecycleExecution",
          "imagebuilder:getLifecyclePolicy",
          "imagebuilder:getWorkflow",
          "imagebuilder:getWorkflowExecution",
          "imagebuilder:getWorkflowStepExecution",
          "imagebuilder:listComponentBuildVersions",
          "imagebuilder:listComponents",
          "imagebuilder:listContainerRecipes",
          "imagebuilder:listDistributionConfigurations",
          "imagebuilder:listImageBuildVersions",
          "imagebuilder:listImagePipelineImages",
          "imagebuilder:listImagePipelines",
          "imagebuilder:listImageRecipes",
          "imagebuilder:listImages",
          "imagebuilder:listImageScanFindingAggregations",
          "imagebuilder:listInfrastructureConfigurations",
          "imagebuilder:listLifecycleExecutions",
          "imagebuilder:listLifecycleExecutionResources",
          "imagebuilder:listLifecyclePolicies",
          "imagebuilder:listWorkflowBuildVersions",
          "imagebuilder:listWorkflowExecutions",
          "imagebuilder:listWorkflows",
          "imagebuilder:listWorkflowStepExecutions",
          "imagebuilder:listTagsForResource",
          "inspector:describeAssessmentRuns",
          "inspector:describeAssessmentTargets",
          "inspector:describeAssessmentTemplates",
          "inspector:describeCrossAccountAccessRole",
          "inspector:describeResourceGroups",
          "inspector:describeRulesPackages",
          "inspector:getTelemetryMetadata",
          "inspector:listAssessmentRunAgents",
          "inspector:listAssessmentRuns",
          "inspector:listAssessmentTargets",
          "inspector:listAssessmentTemplates",
          "inspector:listEventSubscriptions",
          "inspector:listRulesPackages",
          "inspector:listTagsForResource",
          "inspector2:batchGetAccountStatus",
          "inspector2:batchGetFreeTrialInfo",
          "inspector2:describeOrganizationConfiguration",
          "inspector2:getConfiguration",
          "inspector2:getEc2DeepInspectionConfiguration",
          "inspector2:getDelegatedAdminAccount",
          "inspector2:getMember",
          "inspector2:getSbomExport",
          "inspector2:listCisScanConfigurations",
          "inspector2:listCisScanResultsAggregatedByChecks",
          "inspector2:listCisScanResultsAggregatedByTargetResource",
          "inspector2:listCisScans",
          "inspector2:listCoverage",
          "inspector2:listDelegatedAdminAccounts",
          "inspector2:listFilters",
          "inspector2:listFindings",
          "inspector2:listMembers",
          "inspector2:listUsageTotals",
          "inspector-scan:scanSbom",
          "internetmonitor:getMonitor",
          "internetmonitor:listMonitors",
          "internetmonitor:getHealthEvent",
          "internetmonitor:listHealthEvents",
          "iot:describeAuthorizer",
          "iot:describeCACertificate",
          "iot:describeCertificate",
          "iot:describeDefaultAuthorizer",
          "iot:describeDomainConfiguration",
          "iot:describeEndpoint",
          "iot:describeIndex",
          "iot:describeJobExecution",
          "iot:describeThing",
          "iot:describeThingGroup",
          "iot:describeTunnel",
          "iot:getEffectivePolicies",
          "iot:getIndexingConfiguration",
          "iot:getLoggingOptions",
          "iot:getPolicy",
          "iot:getPolicyVersion",
          "iot:getTopicRule",
          "iot:getV2LoggingOptions",
          "iot:listAttachedPolicies",
          "iot:listAuthorizers",
          "iot:listCACertificates",
          "iot:listCertificates",
          "iot:listCertificatesByCA",
          "iot:listDomainConfigurations",
          "iot:listJobExecutionsForJob",
          "iot:listJobExecutionsForThing",
          "iot:listJobs",
          "iot:listOutgoingCertificates",
          "iot:listPackages",
          "iot:listPackageVersions",
          "iot:listPolicies",
          "iot:listPolicyPrincipals",
          "iot:listPolicyVersions",
          "iot:listPrincipalPolicies",
          "iot:listPrincipalThings",
          "iot:listRoleAliases",
          "iot:listTargetsForPolicy",
          "iot:listThingGroups",
          "iot:listThingGroupsForThing",
          "iot:listThingPrincipals",
          "iot:listThingRegistrationTasks",
          "iot:listThings",
          "iot:listThingsInThingGroup",
          "iot:listThingTypes",
          "iot:listTopicRules",
          "iot:listTunnels",
          "iot:listV2LoggingLevels",
          "iot:listNamedShadowsForThing",
          "iotevents:describeDetector",
          "iotevents:describeDetectorModel",
          "iotevents:describeInput",
          "iotevents:describeLoggingOptions",
          "iotevents:listDetectorModels",
          "iotevents:listDetectorModelVersions",
          "iotevents:listDetectors",
          "iotevents:listInputs",
          "iotfleetwise:getCampaign",
          "iotfleetwise:getDecoderManifest",
          "iotfleetwise:getFleet",
          "iotfleetwise:getModelManifest",
          "iotfleetwise:getSignalCatalog",
          "iotfleetwise:getVehicle",
          "iotfleetwise:getVehicleStatus",
          "iotfleetwise:listCampaigns",
          "iotfleetwise:listDecoderManifests",
          "iotfleetwise:listDecoderManifestNetworkInterfaces",
          "iotfleetwise:listDecoderManifestSignals",
          "iotfleetwise:listFleets",
          "iotfleetwise:listFleetsForVehicle",
          "iotfleetwise:listModelManifests",
          "iotfleetwise:listModelManifestNodes",
          "iotfleetwise:listSignalCatalogs",
          "iotfleetwise:listSignalCatalogNodes",
          "iotfleetwise:listVehicles",
          "iotsitewise:describeAccessPolicy",
          "iotsitewise:describeAsset",
          "iotsitewise:describeAssetModel",
          "iotsitewise:describeAssetProperty",
          "iotsitewise:describeDashboard",
          "iotsitewise:describeGateway",
          "iotsitewise:describeGatewayCapabilityConfiguration",
          "iotsitewise:describeLoggingOptions",
          "iotsitewise:describePortal",
          "iotsitewise:describeProject",
          "iotsitewise:listAccessPolicies",
          "iotsitewise:listAssetModels",
          "iotsitewise:listAssets",
          "iotsitewise:listAssociatedAssets",
          "iotsitewise:listDashboards",
          "iotsitewise:listGateways",
          "iotsitewise:listPortals",
          "iotsitewise:listProjectAssets",
          "iotsitewise:listProjects",
          "iottwinmaker:getComponentType",
          "iottwinmaker:getEntity",
          "iottwinmaker:getPricingPlan",
          "iottwinmaker:getScene",
          "iottwinmaker:getWorkspace",
          "iottwinmaker:listComponentTypes",
          "iottwinmaker:listEntities",
          "iottwinmaker:listScenes",
          "iottwinmaker:getSyncJob",
          "iottwinmaker:listSyncJobs",
          "iottwinmaker:listSyncResources",
          "iottwinmaker:listWorkspaces",
          "iotwireless:getDestination",
          "iotwireless:getDeviceProfile",
          "iotwireless:getPartnerAccount",
          "iotwireless:getServiceEndpoint",
          "iotwireless:getServiceProfile",
          "iotwireless:getWirelessDevice",
          "iotwireless:getWirelessDeviceStatistics",
          "iotwireless:getWirelessGateway",
          "iotwireless:getWirelessGatewayCertificate",
          "iotwireless:getWirelessGatewayFirmwareInformation",
          "iotwireless:getWirelessGatewayStatistics",
          "iotwireless:getWirelessGatewayTask",
          "iotwireless:getWirelessGatewayTaskDefinition",
          "iotwireless:listDestinations",
          "iotwireless:listDeviceProfiles",
          "iotwireless:listPartnerAccounts",
          "iotwireless:listServiceProfiles",
          "iotwireless:listTagsForResource",
          "iotwireless:listWirelessDevices",
          "iotwireless:listWirelessGateways",
          "iotwireless:listWirelessGatewayTaskDefinitions",
          "ivs:getChannel",
          "ivs:getRecordingConfiguration",
          "ivs:getStream",
          "ivs:getStreamSession",
          "ivs:listChannels",
          "ivs:listPlaybackKeyPairs",
          "ivs:listRecordingConfigurations",
          "ivs:listStreamKeys",
          "ivs:listStreams",
          "ivs:listStreamSessions",
          "kafka:describeCluster",
          "kafka:describeClusterOperation",
          "kafka:describeClusterOperationV2",
          "kafka:describeClusterV2",
          "kafka:describeConfiguration",
          "kafka:describeConfigurationRevision",
          "kafka:describeReplicator",
          "kafka:describeVpcConnection",
          "kafka:getBootstrapBrokers",
          "kafka:getClusterPolicy",
          "kafka:listConfigurations",
          "kafka:listConfigurationRevisions",
          "kafka:listClientVpcConnections",
          "kafka:listClusterOperations",
          "kafka:listClusterOperationsV2",
          "kafka:listClusters",
          "kafka:listClustersV2",
          "kafka:listNodes",
          "kafka:listReplicators",
          "kafka:listScramSecrets",
          "kafka:listVpcConnections",
          "kafkaconnect:describeConnector",
          "kafkaconnect:describeCustomPlugin",
          "kafkaconnect:describeWorkerConfiguration",
          "kafkaconnect:listConnectors",
          "kafkaconnect:listCustomPlugins",
          "kafkaconnect:listWorkerConfigurations",
          "kendra:describeDataSource",
          "kendra:describeFaq",
          "kendra:describeIndex",
          "kendra:listDataSources",
          "kendra:listFaqs",
          "kendra:listIndices",
          "kinesis:describeStream",
          "kinesis:describeStreamConsumer",
          "kinesis:describeStreamSummary",
          "kinesis:listShards",
          "kinesis:listStreams",
          "kinesis:listStreamConsumers",
          "kinesis:listTagsForStream",
          "kinesisanalytics:describeApplication",
          "kinesisanalytics:describeApplicationSnapshot",
          "kinesisanalytics:listApplications",
          "kinesisanalytics:listApplicationSnapshots",
          "kinesisanalytics:describeApplicationOperation",
          "kinesisanalytics:listApplicationOperations",
          "kinesisanalytics:listApplicationVersions",
          "kinesisvideo:describeImageGenerationConfiguration",
          "kinesisvideo:describeNotificationConfiguration",
          "kinesisvideo:describeSignalingChannel",
          "kinesisvideo:describeStream",
          "kinesisvideo:getDataEndpoint",
          "kinesisvideo:getIceServerConfig",
          "kinesisvideo:getSignalingChannelEndpoint",
          "kinesisvideo:listSignalingChannels",
          "kinesisvideo:listStreams",
          "kms:describeKey",
          "kms:getKeyPolicy",
          "kms:getKeyRotationStatus",
          "kms:listAliases",
          "kms:listGrants",
          "kms:listKeyPolicies",
          "kms:listKeys",
          "kms:listResourceTags",
          "kms:listRetirableGrants",
          "lambda:getAccountSettings",
          "lambda:getAlias",
          "lambda:getCodeSigningConfig",
          "lambda:getEventSourceMapping",
          "lambda:getFunction",
          "lambda:getFunctionCodeSigningConfig",
          "lambda:getFunctionConcurrency",
          "lambda:getFunctionConfiguration",
          "lambda:getFunctionEventInvokeConfig",
          "lambda:getFunctionUrlConfig",
          "lambda:getLayerVersion",
          "lambda:getLayerVersionPolicy",
          "lambda:getPolicy",
          "lambda:getProvisionedConcurrencyConfig",
          "lambda:getRuntimeManagementConfig",
          "lambda:listAliases",
          "lambda:listCodeSigningConfigs",
          "lambda:listEventSourceMappings",
          "lambda:listFunctionEventInvokeConfigs",
          "lambda:listFunctions",
          "lambda:listFunctionsByCodeSigningConfig",
          "lambda:listFunctionUrlConfigs",
          "lambda:listLayers",
          "lambda:listLayerVersions",
          "lambda:listProvisionedConcurrencyConfigs",
          "lambda:listTags",
          "lambda:listVersionsByFunction",
          "lambda:getFunctionRecursionConfig",
          "launchwizard:describeProvisionedApp",
          "launchwizard:describeProvisioningEvents",
          "launchwizard:listProvisionedApps",
          "launchwizard:listDeployments",
          "launchwizard:listDeploymentEvents",
          "lex:describeBot",
          "lex:describeBotAlias",
          "lex:describeBotLocale",
          "lex:describeBotRecommendation",
          "lex:describeBotVersion",
          "lex:describeCustomVocabularyMetadata",
          "lex:describeExport",
          "lex:describeImport",
          "lex:describeIntent",
          "lex:describeResourcePolicy",
          "lex:describeSlot",
          "lex:describeSlotType",
          "lex:getBot",
          "lex:getBotAlias",
          "lex:getBotAliases",
          "lex:getBotChannelAssociation",
          "lex:getBotChannelAssociations",
          "lex:getBots",
          "lex:getBotVersions",
          "lex:getBuiltinIntent",
          "lex:getBuiltinIntents",
          "lex:getBuiltinSlotTypes",
          "lex:getIntent",
          "lex:getIntents",
          "lex:getIntentVersions",
          "lex:getSlotType",
          "lex:getSlotTypes",
          "lex:getSlotTypeVersions",
          "lex:listBotAliases",
          "lex:listBotLocales",
          "lex:listBotRecommendations",
          "lex:listBots",
          "lex:listBotVersions",
          "lex:listExports",
          "lex:listImports",
          "lex:listIntents",
          "lex:listRecommendedIntents",
          "lex:listSlots",
          "lex:listSlotTypes",
          "license-manager:getLicenseConfiguration",
          "license-manager:getServiceSettings",
          "license-manager:listAssociationsForLicenseConfiguration",
          "license-manager:listFailuresForLicenseConfigurationOperations",
          "license-manager:listLicenseConfigurations",
          "license-manager:listLicenseSpecificationsForResource",
          "license-manager:listResourceInventory",
          "license-manager:listUsageForLicenseConfiguration",
          "lightsail:getActiveNames",
          "lightsail:getAlarms",
          "lightsail:getAutoSnapshots",
          "lightsail:getBlueprints",
          "lightsail:getBucketBundles",
          "lightsail:getBucketMetricData",
          "lightsail:getBuckets",
          "lightsail:getBundles",
          "lightsail:getCertificates",
          "lightsail:getContainerImages",
          "lightsail:getContainerServiceDeployments",
          "lightsail:getContainerServiceMetricData",
          "lightsail:getContainerServicePowers",
          "lightsail:getContainerServices",
          "lightsail:getDisk",
          "lightsail:getDisks",
          "lightsail:getDiskSnapshot",
          "lightsail:getDiskSnapshots",
          "lightsail:getDistributionBundles",
          "lightsail:getDistributionMetricData",
          "lightsail:getDistributions",
          "lightsail:getDomain",
          "lightsail:getDomains",
          "lightsail:getExportSnapshotRecords",
          "lightsail:getInstance",
          "lightsail:getInstanceMetricData",
          "lightsail:getInstancePortStates",
          "lightsail:getInstances",
          "lightsail:getInstanceSnapshot",
          "lightsail:getInstanceSnapshots",
          "lightsail:getInstanceState",
          "lightsail:getKeyPair",
          "lightsail:getKeyPairs",
          "lightsail:getLoadBalancer",
          "lightsail:getLoadBalancerMetricData",
          "lightsail:getLoadBalancers",
          "lightsail:getLoadBalancerTlsCertificates",
          "lightsail:getOperation",
          "lightsail:getOperations",
          "lightsail:getOperationsForResource",
          "lightsail:getRegions",
          "lightsail:getRelationalDatabase",
          "lightsail:getRelationalDatabaseMetricData",
          "lightsail:getRelationalDatabases",
          "lightsail:getRelationalDatabaseSnapshot",
          "lightsail:getRelationalDatabaseSnapshots",
          "lightsail:getStaticIp",
          "lightsail:getStaticIps",
          "lightsail:isVpcPeered",
          "logs:describeAccountPolicies",
          "logs:describeDeliveries",
          "logs:describeDeliveryDestinations",
          "logs:describeDeliverySources",
          "logs:describeDestinations",
          "logs:describeExportTasks",
          "logs:describeLogGroups",
          "logs:describeLogStreams",
          "logs:describeMetricFilters",
          "logs:describeQueries",
          "logs:describeQueryDefinitions",
          "logs:describeResourcePolicies",
          "logs:describeSubscriptionFilters",
          "logs:getDataProtectionPolicy",
          "logs:getDelivery",
          "logs:getDeliveryDestination",
          "logs:getDeliveryDestinationPolicy",
          "logs:getDeliverySource",
          "logs:getLogAnomalyDetector",
          "logs:getLogDelivery",
          "logs:getLogGroupFields",
          "logs:listAnomalies",
          "logs:listLogAnomalyDetectors",
          "logs:listLogDeliveries",
          "logs:testMetricFilter",
          "lookoutequipment:describeDataIngestionJob",
          "lookoutequipment:describeDataset",
          "lookoutequipment:describeInferenceScheduler",
          "lookoutequipment:describeModel",
          "lookoutequipment:listDataIngestionJobs",
          "lookoutequipment:listDatasets",
          "lookoutequipment:listInferenceExecutions",
          "lookoutequipment:listInferenceSchedulers",
          "lookoutequipment:listModels",
          "lookoutmetrics:describeAlert",
          "lookoutmetrics:describeAnomalyDetectionExecutions",
          "lookoutmetrics:describeAnomalyDetector",
          "lookoutmetrics:describeMetricSet",
          "lookoutmetrics:getAnomalyGroup",
          "lookoutmetrics:getDataQualityMetrics",
          "lookoutmetrics:getFeedback",
          "lookoutmetrics:getSampleData",
          "lookoutmetrics:listAlerts",
          "lookoutmetrics:listAnomalyDetectors",
          "lookoutmetrics:listAnomalyGroupSummaries",
          "lookoutmetrics:listAnomalyGroupTimeSeries",
          "lookoutmetrics:listMetricSets",
          "lookoutmetrics:listTagsForResource",
          "machinelearning:describeBatchPredictions",
          "machinelearning:describeDataSources",
          "machinelearning:describeEvaluations",
          "machinelearning:describeMLModels",
          "machinelearning:getBatchPrediction",
          "machinelearning:getDataSource",
          "machinelearning:getEvaluation",
          "machinelearning:getMLModel",
          "macie2:getClassificationExportConfiguration",
          "macie2:getCustomDataIdentifier",
          "macie2:getFindings",
          "macie2:getFindingStatistics",
          "macie2:listClassificationJobs",
          "macie2:listCustomDataIdentifiers",
          "macie2:listFindings",
          "managedblockchain:getMember",
          "managedblockchain:getNetwork",
          "managedblockchain:getNode",
          "managedblockchain:listMembers",
          "managedblockchain:listNetworks",
          "managedblockchain:listNodes",
          "mediaconnect:describeFlow",
          "mediaconnect:listEntitlements",
          "mediaconnect:listFlows",
          "mediaconvert:describeEndpoints",
          "mediaconvert:getJob",
          "mediaconvert:getJobTemplate",
          "mediaconvert:getPreset",
          "mediaconvert:getQueue",
          "mediaconvert:listJobs",
          "mediaconvert:listJobTemplates",
          "medialive:describeChannel",
          "medialive:describeInput",
          "medialive:describeInputDevice",
          "medialive:describeInputSecurityGroup",
          "medialive:describeMultiplex",
          "medialive:describeOffering",
          "medialive:describeReservation",
          "medialive:describeSchedule",
          "medialive:listChannels",
          "medialive:listInputDevices",
          "medialive:listInputs",
          "medialive:listInputSecurityGroups",
          "medialive:listMultiplexes",
          "medialive:listOfferings",
          "medialive:listReservations",
          "mediapackage:describeChannel",
          "mediapackage:describeOriginEndpoint",
          "mediapackage:listChannels",
          "mediapackage:listOriginEndpoints",
          "mediastore:describeContainer",
          "mediastore:getContainerPolicy",
          "mediastore:getCorsPolicy",
          "mediastore:listContainers",
          "mediatailor:getPlaybackConfiguration",
          "mediatailor:listPlaybackConfigurations",
          "medical-imaging:getDatastore",
          "medical-imaging:listDatastores",
          "mgn:describeJobLogItems",
          "mgn:describeJobs",
          "mgn:describeLaunchConfigurationTemplates",
          "mgn:describeReplicationConfigurationTemplates",
          "mgn:describeSourceServers",
          "mgn:describeVcenterClients",
          "mgn:getLaunchConfiguration",
          "mgn:getReplicationConfiguration",
          "mgn:listApplications",
          "mgn:listSourceServerActions",
          "mgn:listTemplateActions",
          "mgn:listWaves",
          "mobiletargeting:getAdmChannel",
          "mobiletargeting:getApnsChannel",
          "mobiletargeting:getApnsSandboxChannel",
          "mobiletargeting:getApnsVoipChannel",
          "mobiletargeting:getApnsVoipSandboxChannel",
          "mobiletargeting:getApp",
          "mobiletargeting:getApplicationSettings",
          "mobiletargeting:getApps",
          "mobiletargeting:getBaiduChannel",
          "mobiletargeting:getCampaign",
          "mobiletargeting:getCampaignActivities",
          "mobiletargeting:getCampaigns",
          "mobiletargeting:getCampaignVersion",
          "mobiletargeting:getCampaignVersions",
          "mobiletargeting:getEmailChannel",
          "mobiletargeting:getEndpoint",
          "mobiletargeting:getEventStream",
          "mobiletargeting:getExportJob",
          "mobiletargeting:getExportJobs",
          "mobiletargeting:getGcmChannel",
          "mobiletargeting:getImportJob",
          "mobiletargeting:getImportJobs",
          "mobiletargeting:getJourney",
          "mobiletargeting:getJourneyExecutionMetrics",
          "mobiletargeting:getJourneyExecutionActivityMetrics",
          "mobiletargeting:getJourneyRunExecutionActivityMetrics",
          "mobiletargeting:getJourneyRunExecutionMetrics",
          "mobiletargeting:getJourneyRuns",
          "mobiletargeting:getSegment",
          "mobiletargeting:getSegmentImportJobs",
          "mobiletargeting:getSegments",
          "mobiletargeting:getSegmentVersion",
          "mobiletargeting:getSegmentVersions",
          "mobiletargeting:getSmsChannel",
          "mobiletargeting:listJourneys",
          "mq:describeBroker",
          "mq:describeConfiguration",
          "mq:describeConfigurationRevision",
          "mq:describeUser",
          "mq:listBrokers",
          "mq:listConfigurationRevisions",
          "mq:listConfigurations",
          "mq:listUsers",
          "m2:getApplication",
          "m2:getApplicationVersion",
          "m2:getBatchJobExecution",
          "m2:getDataSetDetails",
          "m2:getDataSetImportTask",
          "m2:getDeployment",
          "m2:getEnvironment",
          "m2:listApplications",
          "m2:listApplicationVersions",
          "m2:listBatchJobDefinitions",
          "m2:listBatchJobExecutions",
          "m2:listDataSetImportHistory",
          "m2:listDataSets",
          "m2:listDeployments",
          "m2:listEngineVersions",
          "m2:listEnvironments",
          "network-firewall:describeFirewall",
          "network-firewall:describeFirewallPolicy",
          "network-firewall:describeLoggingConfiguration",
          "network-firewall:describeRuleGroup",
          "network-firewall:describeTlsInspectionConfiguration",
          "network-firewall:listFirewallPolicies",
          "network-firewall:listFirewalls",
          "network-firewall:listRuleGroups",
          "network-firewall:listTlsInspectionConfigurations",
          "networkmanager:describeGlobalNetworks",
          "networkmanager:getConnectAttachment",
          "networkmanager:getConnections",
          "networkmanager:getConnectPeer",
          "networkmanager:getConnectPeerAssociations",
          "networkmanager:getCoreNetwork",
          "networkmanager:getCoreNetworkChangeEvents",
          "networkmanager:getCoreNetworkChangeSet",
          "networkmanager:getCoreNetworkPolicy",
          "networkmanager:getCustomerGatewayAssociations",
          "networkmanager:getDevices",
          "networkmanager:getLinkAssociations",
          "networkmanager:getLinks",
          "networkmanager:getNetworkResourceCounts",
          "networkmanager:getNetworkResourceRelationships",
          "networkmanager:getNetworkResources",
          "networkmanager:getNetworkRoutes",
          "networkmanager:getNetworkTelemetry",
          "networkmanager:getResourcePolicy",
          "networkmanager:getRouteAnalysis",
          "networkmanager:getSites",
          "networkmanager:getSiteToSiteVpnAttachment",
          "networkmanager:getTransitGatewayConnectPeerAssociations",
          "networkmanager:getTransitGatewayPeering",
          "networkmanager:getTransitGatewayRegistrations",
          "networkmanager:getTransitGatewayRouteTableAttachment",
          "networkmanager:getVpcAttachment",
          "networkmanager:listAttachments",
          "networkmanager:listConnectPeers",
          "networkmanager:listCoreNetworkPolicyVersions",
          "networkmanager:listCoreNetworks",
          "networkmanager:listOrganizationServiceAccessStatus",
          "networkmanager:listPeerings",
          "networkmanager:listTagsForResource",
          "networkmonitor:getMonitor",
          "networkmonitor:getProbe",
          "networkmonitor:listMonitors",
          "notifications:getEventRule",
          "notifications:getNotificationConfiguration",
          "notifications:getNotificationEvent",
          "notifications:listChannels",
          "notifications:listEventRules",
          "notifications:listNotificationConfigurations",
          "notifications:listNotificationEvents",
          "notifications:listNotificationHubs",
          "notifications-contacts:getEmailContact",
          "notifications-contacts:listEmailContacts",
          "oam:getLink",
          "oam:getSink",
          "oam:getSinkPolicy",
          "oam:listAttachedLinks",
          "oam:listLinks",
          "oam:listSinks",
          "omics:getAnnotationImportJob",
          "omics:getAnnotationStore",
          "omics:getReadSetImportJob",
          "omics:getReadSetMetadata",
          "omics:getReference",
          "omics:getReferenceImportJob",
          "omics:getReferenceMetadata",
          "omics:getReferenceStore",
          "omics:getRun",
          "omics:getRunGroup",
          "omics:getSequenceStore",
          "omics:getVariantImportJob",
          "omics:getVariantStore",
          "omics:getWorkflow",
          "omics:listAnnotationImportJobs",
          "omics:listAnnotationStores",
          "omics:listMultipartReadSetUploads",
          "omics:listReadSetImportJobs",
          "omics:listReadSets",
          "omics:listReadSetUploadParts",
          "omics:listReferenceImportJobs",
          "omics:listReferenceStores",
          "omics:listReferences",
          "omics:listRunGroups",
          "omics:listRunTasks",
          "omics:listRuns",
          "omics:listSequenceStores",
          "omics:listVariantImportJobs",
          "omics:listVariantStores",
          "omics:listWorkflows",
          "opsworks-cm:describeAccountAttributes",
          "opsworks-cm:describeBackups",
          "opsworks-cm:describeEvents",
          "opsworks-cm:describeNodeAssociationStatus",
          "opsworks-cm:describeServers",
          "opsworks:describeAgentVersions",
          "opsworks:describeApps",
          "opsworks:describeCommands",
          "opsworks:describeDeployments",
          "opsworks:describeEcsClusters",
          "opsworks:describeElasticIps",
          "opsworks:describeElasticLoadBalancers",
          "opsworks:describeInstances",
          "opsworks:describeLayers",
          "opsworks:describeLoadBasedAutoScaling",
          "opsworks:describeMyUserProfile",
          "opsworks:describePermissions",
          "opsworks:describeRaidArrays",
          "opsworks:describeRdsDbInstances",
          "opsworks:describeServiceErrors",
          "opsworks:describeStackProvisioningParameters",
          "opsworks:describeStacks",
          "opsworks:describeStackSummary",
          "opsworks:describeTimeBasedAutoScaling",
          "opsworks:describeUserProfiles",
          "opsworks:describeVolumes",
          "opsworks:getHostnameSuggestion",
          "organizations:listAccounts",
          "organizations:listTagsForResource",
          "osis:getPipeline",
          "osis:getPipelineBlueprint",
          "osis:getPipelineChangeProgress",
          "osis:listPipelineBlueprints",
          "osis:listPipelines",
          "osis:validatePipeline",
          "outposts:getCatalogItem",
          "outposts:getConnection",
          "outposts:getOrder",
          "outposts:getOutpost",
          "outposts:getOutpostInstanceTypes",
          "outposts:getSite",
          "outposts:listAssets",
          "outposts:listCatalogItems",
          "outposts:listOrders",
          "outposts:listOutposts",
          "outposts:listSites",
          "personalize:describeAlgorithm",
          "personalize:describeBatchInferenceJob",
          "personalize:describeBatchSegmentJob",
          "personalize:describeCampaign",
          "personalize:describeDataset",
          "personalize:describeDatasetExportJob",
          "personalize:describeDatasetGroup",
          "personalize:describeDatasetImportJob",
          "personalize:describeEventTracker",
          "personalize:describeFeatureTransformation",
          "personalize:describeFilter",
          "personalize:describeRecipe",
          "personalize:describeRecommender",
          "personalize:describeSchema",
          "personalize:describeSolution",
          "personalize:describeSolutionVersion",
          "personalize:getPersonalizedRanking",
          "personalize:getRecommendations",
          "personalize:getSolutionMetrics",
          "personalize:listBatchInferenceJobs",
          "personalize:listBatchSegmentJobs",
          "personalize:listCampaigns",
          "personalize:listDatasetExportJobs",
          "personalize:listDatasetGroups",
          "personalize:listDatasetImportJobs",
          "personalize:listDatasets",
          "personalize:listEventTrackers",
          "personalize:listRecipes",
          "personalize:listRecommenders",
          "personalize:listSchemas",
          "personalize:listSolutions",
          "personalize:listSolutionVersions",
          "pipes:describePipe",
          "pipes:listPipes",
          "pipes:listTagsForResource",
          "polly:describeVoices",
          "polly:getLexicon",
          "polly:listLexicons",
          "pricing:describeServices",
          "pricing:getAttributeValues",
          "pricing:getProducts",
          "private-networks:getDeviceIdentifier",
          "private-networks:getNetwork",
          "private-networks:getNetworkResource",
          "private-networks:listDeviceIdentifiers",
          "private-networks:listNetworks",
          "private-networks:listNetworkResources",
          "qbusiness:getApplication",
          "qbusiness:getDataSource",
          "qbusiness:getIndex",
          "qbusiness:getRetriever",
          "qbusiness:getWebExperience",
          "qbusiness:listApplications",
          "qbusiness:listDataSources",
          "qbusiness:listDataSourceSyncJobs",
          "qbusiness:listIndices",
          "qbusiness:listRetrievers",
          "qbusiness:listWebExperiences",
          "quicksight:describeAccountCustomization",
          "quicksight:describeAccountSettings",
          "quicksight:describeAccountSubscription",
          "quicksight:describeAnalysis",
          "quicksight:describeAnalysisPermissions",
          "quicksight:describeDashboard",
          "quicksight:describeDashboardPermissions",
          "quicksight:describeDataSet",
          "quicksight:describeDataSetPermissions",
          "quicksight:describeDataSetRefreshProperties",
          "quicksight:describeDataSource",
          "quicksight:describeDataSourcePermissions",
          "quicksight:describeFolder",
          "quicksight:describeFolderPermissions",
          "quicksight:describeFolderResolvedPermissions",
          "quicksight:describeGroup",
          "quicksight:describeGroupMembership",
          "quicksight:describeIAMPolicyAssignment",
          "quicksight:describeIngestion",
          "quicksight:describeIpRestriction",
          "quicksight:describeNamespace",
          "quicksight:describeRefreshSchedule",
          "quicksight:describeTemplate",
          "quicksight:describeTemplateAlias",
          "quicksight:describeTemplatePermissions",
          "quicksight:describeTheme",
          "quicksight:describeThemeAlias",
          "quicksight:describeThemePermissions",
          "quicksight:describeTopic",
          "quicksight:describeTopicPermissions",
          "quicksight:describeTopicRefresh",
          "quicksight:describeTopicRefreshSchedule",
          "quicksight:describeUser",
          "quicksight:describeVPCConnection",
          "quicksight:listAnalyses",
          "quicksight:listDashboards",
          "quicksight:listDashboardVersions",
          "quicksight:listDataSets",
          "quicksight:listDataSources",
          "quicksight:listFolderMembers",
          "quicksight:listFolders",
          "quicksight:listGroupMemberships",
          "quicksight:listGroups",
          "quicksight:listIAMPolicyAssignments",
          "quicksight:listIAMPolicyAssignmentsForUser",
          "quicksight:listIngestions",
          "quicksight:listNamespaces",
          "quicksight:listRefreshSchedules",
          "quicksight:listTemplateAliases",
          "quicksight:listTemplates",
          "quicksight:listTemplateVersions",
          "quicksight:listThemeAliases",
          "quicksight:listThemes",
          "quicksight:listThemeVersions",
          "quicksight:listTopicRefreshSchedules",
          "quicksight:listTopics",
          "quicksight:listUserGroups",
          "quicksight:listUsers",
          "quicksight:listVPCConnections",
          "quicksight:searchAnalyses",
          "quicksight:searchDashboards",
          "quicksight:searchDataSets",
          "quicksight:searchDataSources",
          "quicksight:searchFolders",
          "quicksight:searchGroups",
          "ram:getPermission",
          "ram:getResourceShareAssociations",
          "ram:getResourceShareInvitations",
          "ram:getResourceShares",
          "ram:listPendingInvitationResources",
          "ram:listPrincipals",
          "ram:listResources",
          "ram:listResourceSharePermissions",
          "rbin:getRule",
          "rbin:listRules",
          "rds:describeAccountAttributes",
          "rds:describeBlueGreenDeployments",
          "rds:describeCertificates",
          "rds:describeDBClusterEndpoints",
          "rds:describeDBClusterParameterGroups",
          "rds:describeDBClusterParameters",
          "rds:describeDBClusters",
          "rds:describeDBClusterSnapshots",
          "rds:describeDBEngineVersions",
          "rds:describeDBInstanceAutomatedBackups",
          "rds:describeDBInstances",
          "rds:describeDBLogFiles",
          "rds:describeDBParameterGroups",
          "rds:describeDBParameters",
          "rds:describeDBSecurityGroups",
          "rds:describeDBSnapshotAttributes",
          "rds:describeDBSnapshots",
          "rds:describeDBSubnetGroups",
          "rds:describeEngineDefaultClusterParameters",
          "rds:describeEngineDefaultParameters",
          "rds:describeEventCategories",
          "rds:describeEvents",
          "rds:describeEventSubscriptions",
          "rds:describeExportTasks",
          "rds:describeGlobalClusters",
          "rds:describeIntegrations",
          "rds:describeOptionGroupOptions",
          "rds:describeOptionGroups",
          "rds:describeOrderableDBInstanceOptions",
          "rds:describePendingMaintenanceActions",
          "rds:describeReservedDBInstances",
          "rds:describeReservedDBInstancesOfferings",
          "rds:describeSourceRegions",
          "rds:describeValidDBInstanceModifications",
          "rds:listTagsForResource",
          "redshift-data:describeStatement",
          "redshift-data:listStatements",
          "redshift:describeClusterParameterGroups",
          "redshift:describeClusterParameters",
          "redshift:describeClusters",
          "redshift:describeClusterSecurityGroups",
          "redshift:describeClusterSnapshots",
          "redshift:describeClusterSubnetGroups",
          "redshift:describeClusterVersions",
          "redshift:describeDataShares",
          "redshift:describeDataSharesForConsumer",
          "redshift:describeDataSharesForProducer",
          "redshift:describeDefaultClusterParameters",
          "redshift:describeEventCategories",
          "redshift:describeEvents",
          "redshift:describeEventSubscriptions",
          "redshift:describeHsmClientCertificates",
          "redshift:describeHsmConfigurations",
          "redshift:describeLoggingStatus",
          "redshift:describeOrderableClusterOptions",
          "redshift:describeReservedNodeOfferings",
          "redshift:describeReservedNodes",
          "redshift:describeResize",
          "redshift:describeSnapshotCopyGrants",
          "redshift:describeStorage",
          "redshift:describeTableRestoreStatus",
          "redshift:describeTags",
          "redshift-serverless:getEndpointAccess",
          "redshift-serverless:getNamespace",
          "redshift-serverless:getRecoveryPoint",
          "redshift-serverless:getSnapshot",
          "redshift-serverless:getTableRestoreStatus",
          "redshift-serverless:getUsageLimit",
          "redshift-serverless:getWorkgroup",
          "redshift-serverless:listEndpointAccess",
          "redshift-serverless:listNamespaces",
          "redshift-serverless:listRecoveryPoints",
          "redshift-serverless:listSnapshots",
          "redshift-serverless:listTableRestoreStatus",
          "redshift-serverless:listUsageLimits",
          "redshift-serverless:listWorkgroups",
          "rekognition:listCollections",
          "rekognition:listFaces",
          "resource-explorer-2:getAccountLevelServiceConfiguration",
          "resource-explorer-2:getIndex",
          "resource-explorer-2:getView",
          "resource-explorer-2:listIndexes",
          "resource-explorer-2:listViews",
          "resource-explorer-2:search",
          "resource-groups:getGroup",
          "resource-groups:getGroupQuery",
          "resource-groups:getTags",
          "resource-groups:listGroupResources",
          "resource-groups:listGroups",
          "resource-groups:searchResources",
          "robomaker:batchDescribeSimulationJob",
          "robomaker:describeDeploymentJob",
          "robomaker:describeFleet",
          "robomaker:describeRobot",
          "robomaker:describeRobotApplication",
          "robomaker:describeSimulationApplication",
          "robomaker:describeSimulationJob",
          "robomaker:listDeploymentJobs",
          "robomaker:listFleets",
          "robomaker:listRobotApplications",
          "robomaker:listRobots",
          "robomaker:listSimulationApplications",
          "robomaker:listSimulationJobs",
          "route53-recovery-cluster:getRoutingControlState",
          "route53-recovery-cluster:listRoutingControls",
          "route53-recovery-control-config:describeControlPanel",
          "route53-recovery-control-config:describeRoutingControl",
          "route53-recovery-control-config:describeSafetyRule",
          "route53-recovery-control-config:listControlPanels",
          "route53-recovery-control-config:listRoutingControls",
          "route53-recovery-control-config:listSafetyRules",
          "route53-recovery-readiness:getCell",
          "route53-recovery-readiness:getCellReadinessSummary",
          "route53-recovery-readiness:getReadinessCheck",
          "route53-recovery-readiness:getReadinessCheckResourceStatus",
          "route53-recovery-readiness:getReadinessCheckStatus",
          "route53-recovery-readiness:getRecoveryGroup",
          "route53-recovery-readiness:getRecoveryGroupReadinessSummary",
          "route53-recovery-readiness:listCells",
          "route53-recovery-readiness:listReadinessChecks",
          "route53-recovery-readiness:listRecoveryGroups",
          "route53-recovery-readiness:listResourceSets",
          "route53:getAccountLimit",
          "route53:getChange",
          "route53:getCheckerIpRanges",
          "route53:getDNSSEC",
          "route53:getGeoLocation",
          "route53:getHealthCheck",
          "route53:getHealthCheckCount",
          "route53:getHealthCheckLastFailureReason",
          "route53:getHealthCheckStatus",
          "route53:getHostedZone",
          "route53:getHostedZoneCount",
          "route53:getHostedZoneLimit",
          "route53:getQueryLoggingConfig",
          "route53:getReusableDelegationSet",
          "route53:getTrafficPolicy",
          "route53:getTrafficPolicyInstance",
          "route53:getTrafficPolicyInstanceCount",
          "route53:listCidrBlocks",
          "route53:listCidrCollections",
          "route53:listCidrLocations",
          "route53:listGeoLocations",
          "route53:listHealthChecks",
          "route53:listHostedZones",
          "route53:listHostedZonesByName",
          "route53:listHostedZonesByVpc",
          "route53:listQueryLoggingConfigs",
          "route53:listResourceRecordSets",
          "route53:listReusableDelegationSets",
          "route53:listTrafficPolicies",
          "route53:listTrafficPolicyInstances",
          "route53:listTrafficPolicyInstancesByHostedZone",
          "route53:listTrafficPolicyInstancesByPolicy",
          "route53:listTrafficPolicyVersions",
          "route53:listVPCAssociationAuthorizations",
          "route53domains:checkDomainAvailability",
          "route53domains:getContactReachabilityStatus",
          "route53domains:getDomainDetail",
          "route53domains:getOperationDetail",
          "route53domains:listDomains",
          "route53domains:listOperations",
          "route53domains:listPrices",
          "route53domains:listTagsForDomain",
          "route53domains:viewBilling",
          "route53profiles:getProfile",
          "route53profiles:listProfileAssociations",
          "route53profiles:listProfileResourceAssociations",
          "route53profiles:listProfiles",
          "route53profiles:listTagsForResource",
          "route53profiles:getProfileResourceAssociation",
          "route53profiles:getProfileAssociation",
          "route53resolver:getFirewallConfig",
          "route53resolver:getFirewallDomainList",
          "route53resolver:getFirewallRuleGroup",
          "route53resolver:getFirewallRuleGroupAssociation",
          "route53resolver:getFirewallRuleGroupPolicy",
          "route53resolver:getOutpostResolver",
          "route53resolver:getResolverDnssecConfig",
          "route53resolver:getResolverQueryLogConfig",
          "route53resolver:getResolverQueryLogConfigAssociation",
          "route53resolver:getResolverQueryLogConfigPolicy",
          "route53resolver:getResolverRule",
          "route53resolver:getResolverRuleAssociation",
          "route53resolver:getResolverRulePolicy",
          "route53resolver:listFirewallConfigs",
          "route53resolver:listFirewallDomainLists",
          "route53resolver:listFirewallDomains",
          "route53resolver:listFirewallRuleGroupAssociations",
          "route53resolver:listFirewallRuleGroups",
          "route53resolver:listFirewallRules",
          "route53resolver:listOutpostResolvers",
          "route53resolver:listResolverConfigs",
          "route53resolver:listResolverDnssecConfigs",
          "route53resolver:listResolverEndpointIpAddresses",
          "route53resolver:listResolverEndpoints",
          "route53resolver:listResolverQueryLogConfigAssociations",
          "route53resolver:listResolverQueryLogConfigs",
          "route53resolver:listResolverRuleAssociations",
          "route53resolver:listResolverRules",
          "route53resolver:listTagsForResource",
          "rum:batchGetRumMetricDefinitions",
          "rum:getAppMonitor",
          "rum:listAppMonitors",
          "rum:listRumMetricsDestinations",
          "s3:describeJob",
          "s3:describeMultiRegionAccessPointOperation",
          "s3:getAccelerateConfiguration",
          "s3:getAccessPoint",
          "s3:getAccessPointConfigurationForObjectLambda",
          "s3:getAccessPointForObjectLambda",
          "s3:getAccessPointPolicy",
          "s3:getAccessPointPolicyForObjectLambda",
          "s3:getAccessPointPolicyStatus",
          "s3:getAccessPointPolicyStatusForObjectLambda",
          "s3:getAccountPublicAccessBlock",
          "s3:getAnalyticsConfiguration",
          "s3:getBucketAcl",
          "s3:getBucketCORS",
          "s3:getBucketLocation",
          "s3:getBucketLogging",
          "s3:getBucketNotification",
          "s3:getBucketObjectLockConfiguration",
          "s3:getBucketOwnershipControls",
          "s3:getBucketPolicy",
          "s3:getBucketPolicyStatus",
          "s3:getBucketPublicAccessBlock",
          "s3:getBucketRequestPayment",
          "s3:getBucketVersioning",
          "s3:getBucketWebsite",
          "s3:getEncryptionConfiguration",
          "s3:getIntelligentTieringConfiguration",
          "s3:getInventoryConfiguration",
          "s3:getLifecycleConfiguration",
          "s3:getMetricsConfiguration",
          "s3:getMultiRegionAccessPoint",
          "s3:getMultiRegionAccessPointPolicy",
          "s3:getMultiRegionAccessPointPolicyStatus",
          "s3:getMultiRegionAccessPointRoutes",
          "s3:getObjectLegalHold",
          "s3:getObjectRetention",
          "s3:getReplicationConfiguration",
          "s3:getStorageLensConfiguration",
          "s3:listAccessPoints",
          "s3:listAccessPointsForObjectLambda",
          "s3:listAllMyBuckets",
          "s3:listBucket",
          "s3:listBucketMultipartUploads",
          "s3:listBucketVersions",
          "s3:listJobs",
          "s3:listMultipartUploadParts",
          "s3:listMultiRegionAccessPoints",
          "s3:listStorageLensConfigurations",
          "s3express:getBucketPolicy",
          "s3express:listAllMyDirectoryBuckets",
          "sagemaker:describeAction",
          "sagemaker:describeAlgorithm",
          "sagemaker:describeApp",
          "sagemaker:describeAppImageConfig",
          "sagemaker:describeArtifact",
          "sagemaker:describeAutoMLJob",
          "sagemaker:describeCluster",
          "sagemaker:describeClusterNode",
          "sagemaker:describeCodeRepository",
          "sagemaker:describeCompilationJob",
          "sagemaker:describeContext",
          "sagemaker:describeDataQualityJobDefinition",
          "sagemaker:describeDevice",
          "sagemaker:describeDeviceFleet",
          "sagemaker:describeDomain",
          "sagemaker:describeEdgeDeploymentPlan",
          "sagemaker:describeEdgePackagingJob",
          "sagemaker:describeEndpoint",
          "sagemaker:describeEndpointConfig",
          "sagemaker:describeExperiment",
          "sagemaker:describeFeatureGroup",
          "sagemaker:describeFeatureMetadata",
          "sagemaker:describeFlowDefinition",
          "sagemaker:describeHub",
          "sagemaker:describeHubContent",
          "sagemaker:describeHumanTaskUi",
          "sagemaker:describeHyperParameterTuningJob",
          "sagemaker:describeImage",
          "sagemaker:describeImageVersion",
          "sagemaker:describeInferenceComponent",
          "sagemaker:describeInferenceExperiment",
          "sagemaker:describeInferenceRecommendationsJob",
          "sagemaker:describeLabelingJob",
          "sagemaker:describeModel",
          "sagemaker:describeModelBiasJobDefinition",
          "sagemaker:describeModelCard",
          "sagemaker:describeModelCardExportJob",
          "sagemaker:describeModelExplainabilityJobDefinition",
          "sagemaker:describeModelPackage",
          "sagemaker:describeModelPackageGroup",
          "sagemaker:describeModelQualityJobDefinition",
          "sagemaker:describeMonitoringSchedule",
          "sagemaker:describeNotebookInstance",
          "sagemaker:describeNotebookInstanceLifecycleConfig",
          "sagemaker:describePipeline",
          "sagemaker:describePipelineDefinitionForExecution",
          "sagemaker:describePipelineExecution",
          "sagemaker:describeProcessingJob",
          "sagemaker:describeProject",
          "sagemaker:describeSpace",
          "sagemaker:describeStudioLifecycleConfig",
          "sagemaker:describeSubscribedWorkteam",
          "sagemaker:describeTrainingJob",
          "sagemaker:describeTransformJob",
          "sagemaker:describeTrial",
          "sagemaker:describeTrialComponent",
          "sagemaker:describeUserProfile",
          "sagemaker:describeWorkforce",
          "sagemaker:describeWorkteam",
          "sagemaker:getDeviceFleetReport",
          "sagemaker:getModelPackageGroupPolicy",
          "sagemaker:getSagemakerServicecatalogPortfolioStatus",
          "sagemaker:listActions",
          "sagemaker:listAlgorithms",
          "sagemaker:listAliases",
          "sagemaker:listAppImageConfigs",
          "sagemaker:listApps",
          "sagemaker:listArtifacts",
          "sagemaker:listAssociations",
          "sagemaker:listAutoMLJobs",
          "sagemaker:listCandidatesForAutoMLJob",
          "sagemaker:listClusterNodes",
          "sagemaker:listClusters",
          "sagemaker:listCodeRepositories",
          "sagemaker:listCompilationJobs",
          "sagemaker:listContexts",
          "sagemaker:listDataQualityJobDefinitions",
          "sagemaker:listDeviceFleets",
          "sagemaker:listDevices",
          "sagemaker:listDomains",
          "sagemaker:listEdgeDeploymentPlans",
          "sagemaker:listEdgePackagingJobs",
          "sagemaker:listEndpointConfigs",
          "sagemaker:listEndpoints",
          "sagemaker:listExperiments",
          "sagemaker:listFeatureGroups",
          "sagemaker:listFlowDefinitions",
          "sagemaker:listHubContents",
          "sagemaker:listHubContentVersions",
          "sagemaker:listHubs",
          "sagemaker:listHumanTaskUis",
          "sagemaker:listHyperParameterTuningJobs",
          "sagemaker:listImages",
          "sagemaker:listImageVersions",
          "sagemaker:listInferenceComponents",
          "sagemaker:listInferenceExperiments",
          "sagemaker:listInferenceRecommendationsJobs",
          "sagemaker:listInferenceRecommendationsJobSteps",
          "sagemaker:listLabelingJobs",
          "sagemaker:listLabelingJobsForWorkteam",
          "sagemaker:listLineageGroups",
          "sagemaker:listModelBiasJobDefinitions",
          "sagemaker:listModelCardExportJobs",
          "sagemaker:listModelCards",
          "sagemaker:listModelCardVersions",
          "sagemaker:listModelExplainabilityJobDefinitions",
          "sagemaker:listModelMetadata",
          "sagemaker:listModelPackageGroups",
          "sagemaker:listModelPackages",
          "sagemaker:listModelQualityJobDefinitions",
          "sagemaker:listModels",
          "sagemaker:listMonitoringAlertHistory",
          "sagemaker:listMonitoringAlerts",
          "sagemaker:listMonitoringExecutions",
          "sagemaker:listMonitoringSchedules",
          "sagemaker:listNotebookInstanceLifecycleConfigs",
          "sagemaker:listNotebookInstances",
          "sagemaker:listPipelineExecutions",
          "sagemaker:listPipelineExecutionSteps",
          "sagemaker:listPipelineParametersForExecution",
          "sagemaker:listPipelines",
          "sagemaker:listProcessingJobs",
          "sagemaker:listProjects",
          "sagemaker:listSpaces",
          "sagemaker:listStageDevices",
          "sagemaker:listStudioLifecycleConfigs",
          "sagemaker:listSubscribedWorkteams",
          "sagemaker:listTags",
          "sagemaker:listTrainingJobs",
          "sagemaker:listTrainingJobsForHyperParameterTuningJob",
          "sagemaker:listTransformJobs",
          "sagemaker:listTrialComponents",
          "sagemaker:listTrials",
          "sagemaker:listUserProfiles",
          "sagemaker:listWorkforces",
          "sagemaker:listWorkteams",
          "savingsplans:describeSavingsPlans",
          "scheduler:getSchedule",
          "scheduler:getScheduleGroup",
          "scheduler:listScheduleGroups",
          "scheduler:listSchedules",
          "schemas:describeCodeBinding",
          "schemas:describeDiscoverer",
          "schemas:describeRegistry",
          "schemas:describeSchema",
          "schemas:getCodeBindingSource",
          "schemas:getDiscoveredSchema",
          "schemas:getResourcePolicy",
          "schemas:listDiscoverers",
          "schemas:listRegistries",
          "schemas:listSchemas",
          "schemas:listSchemaVersions",
          "sdb:domainMetadata",
          "sdb:listDomains",
          "secretsmanager:describeSecret",
          "secretsmanager:getResourcePolicy",
          "secretsmanager:listSecrets",
          "secretsmanager:listSecretVersionIds",
          "securityhub:getEnabledStandards",
          "securityhub:getFindings",
          "securityhub:getInsightResults",
          "securityhub:getInsights",
          "securityhub:getMasterAccount",
          "securityhub:getMembers",
          "securityhub:listEnabledProductsForImport",
          "securityhub:listInvitations",
          "securityhub:listMembers",
          "securityhub:describeOrganizationConfiguration",
          "securityhub:batchGetConfigurationPolicyAssociations",
          "securityhub:getConfigurationPolicy",
          "securityhub:getConfigurationPolicyAssociation",
          "securityhub:listConfigurationPolicies",
          "securityhub:listConfigurationPolicyAssociations",
          "securityhub:getFindingAggregator",
          "securityhub:listFindingAggregators",
          "securitylake:getDataLakeExceptionSubscription",
          "securitylake:getDataLakeOrganizationConfiguration",
          "securitylake:getDataLakeSources",
          "securitylake:getSubscriber",
          "securitylake:listDataLakeExceptions",
          "securitylake:listDataLakes",
          "securitylake:listLogSources",
          "securitylake:listSubscribers",
          "serverlessrepo:getApplication",
          "serverlessrepo:getApplicationPolicy",
          "serverlessrepo:getCloudFormationTemplate",
          "serverlessrepo:listApplicationDependencies",
          "serverlessrepo:listApplications",
          "serverlessrepo:listApplicationVersions",
          "servicecatalog:describeConstraint",
          "servicecatalog:describePortfolio",
          "servicecatalog:describeProduct",
          "servicecatalog:describeProductAsAdmin",
          "servicecatalog:describeProductView",
          "servicecatalog:describeProvisioningArtifact",
          "servicecatalog:describeProvisioningParameters",
          "servicecatalog:describeRecord",
          "servicecatalog:listAcceptedPortfolioShares",
          "servicecatalog:listConstraintsForPortfolio",
          "servicecatalog:listLaunchPaths",
          "servicecatalog:listPortfolioAccess",
          "servicecatalog:listPortfolios",
          "servicecatalog:listPortfoliosForProduct",
          "servicecatalog:listPrincipalsForPortfolio",
          "servicecatalog:listProvisioningArtifacts",
          "servicecatalog:listRecordHistory",
          "servicecatalog:scanProvisionedProducts",
          "servicecatalog:searchProducts",
          "servicequotas:getAssociationForServiceQuotaTemplate",
          "servicequotas:getAWSDefaultServiceQuota",
          "servicequotas:getRequestedServiceQuotaChange",
          "servicequotas:getServiceQuota",
          "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
          "servicequotas:listAWSDefaultServiceQuotas",
          "servicequotas:listRequestedServiceQuotaChangeHistory",
          "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
          "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
          "servicequotas:listServiceQuotas",
          "servicequotas:listServices",
          "ses:describeActiveReceiptRuleSet",
          "ses:describeConfigurationSet",
          "ses:describeReceiptRule",
          "ses:describeReceiptRuleSet",
          "ses:getAccount",
          "ses:getAccountSendingEnabled",
          "ses:getBlacklistReports",
          "ses:getConfigurationSet",
          "ses:getConfigurationSetEventDestinations",
          "ses:getContactList",
          "ses:getDedicatedIp",
          "ses:getDedicatedIpPool",
          "ses:getDedicatedIps",
          "ses:getDeliverabilityDashboardOptions",
          "ses:getDeliverabilityTestReport",
          "ses:getDomainDeliverabilityCampaign",
          "ses:getDomainStatisticsReport",
          "ses:getEmailIdentity",
          "ses:getIdentityDkimAttributes",
          "ses:getIdentityMailFromDomainAttributes",
          "ses:getIdentityNotificationAttributes",
          "ses:getIdentityPolicies",
          "ses:getIdentityVerificationAttributes",
          "ses:getImportJob",
          "ses:getSendQuota",
          "ses:getSendStatistics",
          "ses:listConfigurationSets",
          "ses:listContactLists",
          "ses:listContacts",
          "ses:listCustomVerificationEmailTemplates",
          "ses:listDedicatedIpPools",
          "ses:listDeliverabilityTestReports",
          "ses:listDomainDeliverabilityCampaigns",
          "ses:listEmailIdentities",
          "ses:listEmailTemplates",
          "ses:listIdentities",
          "ses:listIdentityPolicies",
          "ses:listImportJobs",
          "ses:listReceiptFilters",
          "ses:listReceiptRuleSets",
          "ses:listRecommendations",
          "ses:listTagsForResource",
          "ses:listTemplates",
          "ses:listVerifiedEmailAddresses",
          "shield:describeAttack",
          "shield:describeProtection",
          "shield:describeSubscription",
          "shield:listAttacks",
          "shield:listProtections",
          "sms-voice:getConfigurationSetEventDestinations",
          "sms:getConnectors",
          "sms:getReplicationJobs",
          "sms:getReplicationRuns",
          "sms:getServers",
          "snowball:describeAddress",
          "snowball:describeAddresses",
          "snowball:describeJob",
          "snowball:getSnowballUsage",
          "snowball:listJobs",
          "snowball:listServiceVersions",
          "sns:checkIfPhoneNumberIsOptedOut",
          "sns:getDataProtectionPolicy",
          "sns:getEndpointAttributes",
          "sns:getPlatformApplicationAttributes",
          "sns:getSMSAttributes",
          "sns:getSMSSandboxAccountStatus",
          "sns:getSubscriptionAttributes",
          "sns:getTopicAttributes",
          "sns:listEndpointsByPlatformApplication",
          "sns:listOriginationNumbers",
          "sns:listPhoneNumbersOptedOut",
          "sns:listPlatformApplications",
          "sns:listSMSSandboxPhoneNumbers",
          "sns:listSubscriptions",
          "sns:listSubscriptionsByTopic",
          "sns:listTopics",
          "sqs:getQueueAttributes",
          "sqs:getQueueUrl",
          "sqs:listDeadLetterSourceQueues",
          "sqs:listQueues",
          "ssm-contacts:describeEngagement",
          "ssm-contacts:describePage",
          "ssm-contacts:getContact",
          "ssm-contacts:getContactChannel",
          "ssm-contacts:getContactPolicy",
          "ssm-contacts:getRotation",
          "ssm-contacts:getRotationOverride",
          "ssm-contacts:listContactChannels",
          "ssm-contacts:listContacts",
          "ssm-contacts:listEngagements",
          "ssm-contacts:listPageReceipts",
          "ssm-contacts:listPageResolutions",
          "ssm-contacts:listPagesByContact",
          "ssm-contacts:listPagesByEngagement",
          "ssm-contacts:listPreviewRotationShifts",
          "ssm-contacts:listRotationOverrides",
          "ssm-contacts:listRotations",
          "ssm-contacts:listRotationShifts",
          "ssm-incidents:getIncidentRecord",
          "ssm-incidents:getReplicationSet",
          "ssm-incidents:getResourcePolicies",
          "ssm-incidents:getResponsePlan",
          "ssm-incidents:getTimelineEvent",
          "ssm-incidents:listIncidentRecords",
          "ssm-incidents:listRelatedItems",
          "ssm-incidents:listReplicationSets",
          "ssm-incidents:listResponsePlans",
          "ssm-incidents:listTimelineEvents",
          "ssm-sap:getApplication",
          "ssm-sap:getComponent",
          "ssm-sap:getDatabase",
          "ssm-sap:getOperation",
          "ssm-sap:getResourcePermission",
          "ssm-sap:listApplications",
          "ssm-sap:listComponents",
          "ssm-sap:listDatabases",
          "ssm-sap:listOperations",
          "ssm:describeActivations",
          "ssm:describeAssociation",
          "ssm:describeAssociationExecutions",
          "ssm:describeAssociationExecutionTargets",
          "ssm:describeAutomationExecutions",
          "ssm:describeAutomationStepExecutions",
          "ssm:describeAvailablePatches",
          "ssm:describeDocument",
          "ssm:describeDocumentPermission",
          "ssm:describeEffectiveInstanceAssociations",
          "ssm:describeEffectivePatchesForPatchBaseline",
          "ssm:describeInstanceAssociationsStatus",
          "ssm:describeInstanceInformation",
          "ssm:describeInstancePatches",
          "ssm:describeInstancePatchStates",
          "ssm:describeInstancePatchStatesForPatchGroup",
          "ssm:describeInventoryDeletions",
          "ssm:describeMaintenanceWindowExecutions",
          "ssm:describeMaintenanceWindowExecutionTaskInvocations",
          "ssm:describeMaintenanceWindowExecutionTasks",
          "ssm:describeMaintenanceWindows",
          "ssm:describeMaintenanceWindowSchedule",
          "ssm:describeMaintenanceWindowsForTarget",
          "ssm:describeMaintenanceWindowTargets",
          "ssm:describeMaintenanceWindowTasks",
          "ssm:describeOpsItems",
          "ssm:describeParameters",
          "ssm:describePatchBaselines",
          "ssm:describePatchGroups",
          "ssm:describePatchGroupState",
          "ssm:describePatchProperties",
          "ssm:describeSessions",
          "ssm:getAutomationExecution",
          "ssm:getCalendarState",
          "ssm:getCommandInvocation",
          "ssm:getConnectionStatus",
          "ssm:getDefaultPatchBaseline",
          "ssm:getDeployablePatchSnapshotForInstance",
          "ssm:getInventorySchema",
          "ssm:getMaintenanceWindow",
          "ssm:getMaintenanceWindowExecution",
          "ssm:getMaintenanceWindowExecutionTask",
          "ssm:getMaintenanceWindowExecutionTaskInvocation",
          "ssm:getMaintenanceWindowTask",
          "ssm:getOpsItem",
          "ssm:getOpsMetadata",
          "ssm:getOpsSummary",
          "ssm:getPatchBaseline",
          "ssm:getPatchBaselineForPatchGroup",
          "ssm:getResourcePolicies",
          "ssm:getServiceSetting",
          "ssm:listAssociations",
          "ssm:listAssociationVersions",
          "ssm:listCommandInvocations",
          "ssm:listCommands",
          "ssm:listComplianceItems",
          "ssm:listComplianceSummaries",
          "ssm:listDocuments",
          "ssm:listDocumentMetadataHistory",
          "ssm:listDocumentVersions",
          "ssm:listOpsItemEvents",
          "ssm:listOpsItemRelatedItems",
          "ssm:listOpsMetadata",
          "ssm:listResourceComplianceSummaries",
          "ssm:listResourceDataSync",
          "ssm:listTagsForResource",
          "sso:describeApplicationAssignment",
          "sso:describeApplicationProvider",
          "sso:describeApplication",
          "sso:describeInstance",
          "sso:describeTrustedTokenIssuer",
          "sso:getApplicationAccessScope",
          "sso:getApplicationAssignmentConfiguration",
          "sso:getApplicationAuthenticationMethod",
          "sso:getApplicationGrant",
          "sso:getApplicationInstance",
          "sso:getApplicationTemplate",
          "sso:getManagedApplicationInstance",
          "sso:getSharedSsoConfiguration",
          "sso:listApplicationAccessScopes",
          "sso:listApplicationAssignments",
          "sso:listApplicationAuthenticationMethods",
          "sso:listApplicationGrants",
          "sso:listApplicationInstances",
          "sso:listApplicationProviders",
          "sso:listApplications",
          "sso:listApplicationTemplates",
          "sso:listDirectoryAssociations",
          "sso:listInstances",
          "sso:listProfileAssociations",
          "sso:listTrustedTokenIssuers",
          "states:describeActivity",
          "states:describeExecution",
          "states:describeMapRun",
          "states:describeStateMachine",
          "states:describeStateMachineAlias",
          "states:describeStateMachineForExecution",
          "states:getExecutionHistory",
          "states:listActivities",
          "states:listExecutions",
          "states:listMapRuns",
          "states:listStateMachineAliases",
          "states:listStateMachines",
          "states:listStateMachineVersions",
          "storagegateway:describeBandwidthRateLimit",
          "storagegateway:describeCache",
          "storagegateway:describeCachediSCSIVolumes",
          "storagegateway:describeFileSystemAssociations",
          "storagegateway:describeGatewayInformation",
          "storagegateway:describeMaintenanceStartTime",
          "storagegateway:describeNFSFileShares",
          "storagegateway:describeSMBFileShares",
          "storagegateway:describeSMBSettings",
          "storagegateway:describeSnapshotSchedule",
          "storagegateway:describeStorediSCSIVolumes",
          "storagegateway:describeTapeArchives",
          "storagegateway:describeTapeRecoveryPoints",
          "storagegateway:describeTapes",
          "storagegateway:describeUploadBuffer",
          "storagegateway:describeVTLDevices",
          "storagegateway:describeWorkingStorage",
          "storagegateway:listAutomaticTapeCreationPolicies",
          "storagegateway:listFileShares",
          "storagegateway:listFileSystemAssociations",
          "storagegateway:listGateways",
          "storagegateway:listLocalDisks",
          "storagegateway:listTagsForResource",
          "storagegateway:listTapes",
          "storagegateway:listVolumeInitiators",
          "storagegateway:listVolumeRecoveryPoints",
          "storagegateway:listVolumes",
          "swf:countClosedWorkflowExecutions",
          "swf:countOpenWorkflowExecutions",
          "swf:countPendingActivityTasks",
          "swf:countPendingDecisionTasks",
          "swf:describeActivityType",
          "swf:describeDomain",
          "swf:describeWorkflowExecution",
          "swf:describeWorkflowType",
          "swf:getWorkflowExecutionHistory",
          "swf:listActivityTypes",
          "swf:listClosedWorkflowExecutions",
          "swf:listDomains",
          "swf:listOpenWorkflowExecutions",
          "swf:listWorkflowTypes",
          "synthetics:describeCanaries",
          "synthetics:describeCanariesLastRun",
          "synthetics:describeRuntimeVersions",
          "synthetics:getCanary",
          "synthetics:getCanaryRuns",
          "synthetics:getGroup",
          "synthetics:listAssociatedGroups",
          "synthetics:listGroupResources",
          "synthetics:listGroups",
          "tiros:createQuery",
          "tiros:getQueryAnswer",
          "tiros:getQueryExplanation",
          "transcribe:describeLanguageModel",
          "transcribe:getCallAnalyticsCategory",
          "transcribe:getCallAnalyticsJob",
          "transcribe:getMedicalTranscriptionJob",
          "transcribe:getMedicalVocabulary",
          "transcribe:getTranscriptionJob",
          "transcribe:getVocabulary",
          "transcribe:getVocabularyFilter",
          "transcribe:listCallAnalyticsCategories",
          "transcribe:listCallAnalyticsJobs",
          "transcribe:listLanguageModels",
          "transcribe:listMedicalTranscriptionJobs",
          "transcribe:listMedicalVocabularies",
          "transcribe:listTranscriptionJobs",
          "transcribe:listVocabularies",
          "transcribe:listVocabularyFilters",
          "transfer:describeAccess",
          "transfer:describeAgreement",
          "transfer:describeConnector",
          "transfer:describeExecution",
          "transfer:describeProfile",
          "transfer:describeServer",
          "transfer:describeUser",
          "transfer:describeWorkflow",
          "transfer:listAccesses",
          "transfer:listAgreements",
          "transfer:listConnectors",
          "transfer:listExecutions",
          "transfer:listHostKeys",
          "transfer:listProfiles",
          "transfer:listServers",
          "transfer:listTagsForResource",
          "transfer:listUsers",
          "transfer:listWorkflows",
          "transfer:sendWorkflowStepState",
          "trustedadvisor:getOrganizationRecommendation",
          "trustedadvisor:getRecommendation",
          "trustedadvisor:listChecks",
          "trustedadvisor:listOrganizationRecommendationAccounts",
          "trustedadvisor:listOrganizationRecommendationResources",
          "trustedadvisor:listOrganizationRecommendations",
          "trustedadvisor:listRecommendationResources",
          "trustedadvisor:listRecommendations",
          "verifiedpermissions:getIdentitySource",
          "verifiedpermissions:getPolicy",
          "verifiedpermissions:getPolicyStore",
          "verifiedpermissions:getPolicyTemplate",
          "verifiedpermissions:getSchema",
          "verifiedpermissions:listIdentitySources",
          "verifiedpermissions:listPolicies",
          "verifiedpermissions:listPolicyStores",
          "verifiedpermissions:listPolicyTemplates",
          "vpc-lattice:getAccessLogSubscription",
          "vpc-lattice:getAuthPolicy",
          "vpc-lattice:getListener",
          "vpc-lattice:getResourcePolicy",
          "vpc-lattice:getRule",
          "vpc-lattice:getService",
          "vpc-lattice:getServiceNetwork",
          "vpc-lattice:getServiceNetworkServiceAssociation",
          "vpc-lattice:getServiceNetworkVpcAssociation",
          "vpc-lattice:getTargetGroup",
          "vpc-lattice:listAccessLogSubscriptions",
          "vpc-lattice:listListeners",
          "vpc-lattice:listRules",
          "vpc-lattice:listServiceNetworks",
          "vpc-lattice:listServiceNetworkServiceAssociations",
          "vpc-lattice:listServiceNetworkVpcAssociations",
          "vpc-lattice:listServices",
          "vpc-lattice:listTargetGroups",
          "vpc-lattice:listTargets",
          "waf-regional:getByteMatchSet",
          "waf-regional:getChangeTokenStatus",
          "waf-regional:getGeoMatchSet",
          "waf-regional:getIPSet",
          "waf-regional:getLoggingConfiguration",
          "waf-regional:getRateBasedRule",
          "waf-regional:getRegexMatchSet",
          "waf-regional:getRegexPatternSet",
          "waf-regional:getRule",
          "waf-regional:getRuleGroup",
          "waf-regional:getSqlInjectionMatchSet",
          "waf-regional:getWebACL",
          "waf-regional:getWebACLForResource",
          "waf-regional:listActivatedRulesInRuleGroup",
          "waf-regional:listByteMatchSets",
          "waf-regional:listGeoMatchSets",
          "waf-regional:listIPSets",
          "waf-regional:listLoggingConfigurations",
          "waf-regional:listRateBasedRules",
          "waf-regional:listRegexMatchSets",
          "waf-regional:listRegexPatternSets",
          "waf-regional:listResourcesForWebACL",
          "waf-regional:listRuleGroups",
          "waf-regional:listRules",
          "waf-regional:listSqlInjectionMatchSets",
          "waf-regional:listWebACLs",
          "waf:getByteMatchSet",
          "waf:getChangeTokenStatus",
          "waf:getGeoMatchSet",
          "waf:getIPSet",
          "waf:getLoggingConfiguration",
          "waf:getRateBasedRule",
          "waf:getRegexMatchSet",
          "waf:getRegexPatternSet",
          "waf:getRule",
          "waf:getRuleGroup",
          "waf:getSampledRequests",
          "waf:getSizeConstraintSet",
          "waf:getSqlInjectionMatchSet",
          "waf:getWebACL",
          "waf:getXssMatchSet",
          "waf:listActivatedRulesInRuleGroup",
          "waf:listByteMatchSets",
          "waf:listGeoMatchSets",
          "waf:listIPSets",
          "waf:listLoggingConfigurations",
          "waf:listRateBasedRules",
          "waf:listRegexMatchSets",
          "waf:listRegexPatternSets",
          "waf:listRuleGroups",
          "waf:listRules",
          "waf:listSizeConstraintSets",
          "waf:listSqlInjectionMatchSets",
          "waf:listWebACLs",
          "waf:listXssMatchSets",
          "wafv2:checkCapacity",
          "wafv2:describeManagedRuleGroup",
          "wafv2:getIPSet",
          "wafv2:getLoggingConfiguration",
          "wafv2:getPermissionPolicy",
          "wafv2:getRateBasedStatementManagedKeys",
          "wafv2:getRegexPatternSet",
          "wafv2:getRuleGroup",
          "wafv2:getSampledRequests",
          "wafv2:getWebACL",
          "wafv2:getWebACLForResource",
          "wafv2:listAvailableManagedRuleGroups",
          "wafv2:listIPSets",
          "wafv2:listLoggingConfigurations",
          "wafv2:listRegexPatternSets",
          "wafv2:listResourcesForWebACL",
          "wafv2:listRuleGroups",
          "wafv2:listTagsForResource",
          "wafv2:listWebACLs",
          "workdocs:checkAlias",
          "workdocs:describeAvailableDirectories",
          "workdocs:describeInstances",
          "workmail:describeGroup",
          "workmail:describeOrganization",
          "workmail:describeResource",
          "workmail:describeUser",
          "workmail:listAliases",
          "workmail:listGroupMembers",
          "workmail:listGroups",
          "workmail:listMailboxPermissions",
          "workmail:listOrganizations",
          "workmail:listResourceDelegates",
          "workmail:listResources",
          "workmail:listUsers",
          "workspaces-web:getBrowserSettings",
          "workspaces-web:getIdentityProvider",
          "workspaces-web:getNetworkSettings",
          "workspaces-web:getPortal",
          "workspaces-web:getPortalServiceProviderMetadata",
          "workspaces-web:getTrustStoreCertificate",
          "workspaces-web:getUserSettings",
          "workspaces-web:listBrowserSettings",
          "workspaces-web:listIdentityProviders",
          "workspaces-web:listNetworkSettings",
          "workspaces-web:listPortals",
          "workspaces-web:listTagsForResource",
          "workspaces-web:listTrustStoreCertificates",
          "workspaces-web:listTrustStores",
          "workspaces-web:listUserSettings",
          "workspaces:describeAccount",
          "workspaces:describeAccountModifications",
          "workspaces:describeApplicationAssociations",
          "workspaces:describeWorkspaceAssociations",
          "workspaces:describeWorkspacesPools",
          "workspaces:describeWorkspacesPoolSessions",
          "workspaces:describeIpGroups",
          "workspaces:describeTags",
          "workspaces:describeWorkspaceBundles",
          "workspaces:describeWorkspaceDirectories",
          "workspaces:describeWorkspaceImages",
          "workspaces:describeWorkspaces",
          "workspaces:describeWorkspacesConnectionStatus",
          "xray:getEncryptionConfig",
          "xray:getGroup",
          "xray:getGroups",
          "xray:getSamplingRules",
          "xray:listResourcePolicies",
          "xray:getInsightImpactGraph",
          "xray:getSamplingStatisticSummaries",
          "xray:getSamplingTargets",
          "xray:getServiceGraph",
          "xray:getTimeSeriesServiceStatistics",
          "xray:getTraceGraph"
        ],
        "Resources": [
          "*"
        ]
      }
    ]
  },
  {
    "EntityType": "Role",
    "EntityName": "AWSServiceRoleForTrustedAdvisor",
    "PolicyName": "AWSTrustedAdvisorServiceRolePolicy",
    "PolicyType": "RoleManaged",
    "Findings": [
      {
        "Sid": "TrustedAdvisorServiceRolePermissions",
        "Actions": [
          "access-analyzer:ListAnalyzers",
          "autoscaling:DescribeAccountLimits",
          "autoscaling:DescribeAutoScalingGroups",
          "autoscaling:DescribeLaunchConfigurations",
          "ce:GetReservationPurchaseRecommendation",
          "ce:GetSavingsPlansPurchaseRecommendation",
          "cloudformation:DescribeAccountLimits",
          "cloudformation:DescribeStacks",
          "cloudformation:ListStacks",
          "cloudfront:ListDistributions",
          "cloudtrail:DescribeTrails",
          "cloudtrail:GetTrailStatus",
          "cloudtrail:GetTrail",
          "cloudtrail:ListTrails",
          "cloudtrail:GetEventSelectors",
          "cloudwatch:GetMetricStatistics",
          "cloudwatch:ListMetrics",
          "dax:DescribeClusters",
          "dynamodb:DescribeLimits",
          "dynamodb:DescribeTable",
          "dynamodb:ListTables",
          "ec2:DescribeAddresses",
          "ec2:DescribeReservedInstances",
          "ec2:DescribeInstances",
          "ec2:DescribeVpcs",
          "ec2:DescribeInternetGateways",
          "ec2:DescribeImages",
          "ec2:DescribeNatGateways",
          "ec2:DescribeVolumes",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSubnets",
          "ec2:DescribeRegions",
          "ec2:DescribeReservedInstancesOfferings",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSnapshots",
          "ec2:DescribeVpcEndpoints",
          "ec2:DescribeVpnConnections",
          "ec2:DescribeVpnGateways",
          "ec2:DescribeLaunchTemplateVersions",
          "ec2:GetManagedPrefixListEntries",
          "ecs:DescribeTaskDefinition",
          "ecs:ListTaskDefinitions",
          "elasticloadbalancing:DescribeAccountLimits",
          "elasticloadbalancing:DescribeInstanceHealth",
          "elasticloadbalancing:DescribeLoadBalancerAttributes",
          "elasticloadbalancing:DescribeLoadBalancerPolicies",
          "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
          "elasticloadbalancing:DescribeLoadBalancers",
          "elasticloadbalancing:DescribeListeners",
          "elasticloadbalancing:DescribeRules",
          "elasticloadbalancing:DescribeTargetGroups",
          "elasticloadbalancing:DescribeTargetHealth",
          "iam:GenerateCredentialReport",
          "iam:GetAccountPasswordPolicy",
          "iam:GetAccountSummary",
          "iam:GetCredentialReport",
          "iam:GetServerCertificate",
          "iam:ListServerCertificates",
          "iam:ListSAMLProviders",
          "kinesis:DescribeLimits",
          "kafka:DescribeClusterV2",
          "kafka:ListClustersV2",
          "kafka:ListNodes",
          "network-firewall:ListFirewalls",
          "network-firewall:DescribeFirewall",
          "outposts:ListAssets",
          "outposts:GetOutpost",
          "outposts:ListOutposts",
          "rds:DescribeAccountAttributes",
          "rds:DescribeDBClusters",
          "rds:DescribeDBEngineVersions",
          "rds:DescribeDBInstances",
          "rds:DescribeDBParameterGroups",
          "rds:DescribeDBParameters",
          "rds:DescribeDBSecurityGroups",
          "rds:DescribeDBSnapshots",
          "rds:DescribeDBSubnetGroups",
          "rds:DescribeEngineDefaultParameters",
          "rds:DescribeEvents",
          "rds:DescribeOptionGroupOptions",
          "rds:DescribeOptionGroups",
          "rds:DescribeOrderableDBInstanceOptions",
          "rds:DescribeReservedDBInstances",
          "rds:DescribeReservedDBInstancesOfferings",
          "rds:ListTagsForResource",
          "redshift:DescribeClusters",
          "redshift:DescribeReservedNodeOfferings",
          "redshift:DescribeReservedNodes",
          "route53:GetAccountLimit",
          "route53:GetHealthCheck",
          "route53:GetHostedZone",
          "route53:ListHealthChecks",
          "route53:ListHostedZones",
          "route53:ListHostedZonesByName",
          "route53:ListResourceRecordSets",
          "route53resolver:ListResolverEndpoints",
          "route53resolver:ListResolverEndpointIpAddresses",
          "s3:GetAccountPublicAccessBlock",
          "s3:GetBucketAcl",
          "s3:GetBucketPolicy",
          "s3:GetBucketPolicyStatus",
          "s3:GetBucketLocation",
          "s3:GetBucketLogging",
          "s3:GetBucketVersioning",
          "s3:GetBucketPublicAccessBlock",
          "s3:GetLifecycleConfiguration",
          "s3:ListBucket",
          "s3:ListAllMyBuckets",
          "ses:GetSendQuota",
          "sqs:GetQueueAttributes",
          "sqs:ListQueues"
        ],
        "Resources": [
          "*"
        ]
      }
    ]
  },
  {
    "EntityType": "Role",
    "EntityName": "CrossAccountReader",
    "PolicyName": "ReadOnlyAccess",
    "PolicyType": "RoleManaged",
    "Findings": [
      {
        "Sid": "ReadOnlyActionsGroup1",
        "Actions": [
          "a4b:Get*",
          "a4b:List*",
          "a4b:Search*",
          "access-analyzer:GetAccessPreview",
          "access-analyzer:GetAnalyzedResource",
          "access-analyzer:GetAnalyzer",
          "access-analyzer:GetArchiveRule",
          "access-analyzer:GetFinding",
          "access-analyzer:GetFindingsStatistics",
          "access-analyzer:GetGeneratedPolicy",
          "access-analyzer:ListAccessPreviewFindings",
          "access-analyzer:ListAccessPreviews",
          "access-analyzer:ListAnalyzedResources",
          "access-analyzer:ListAnalyzers",
          "access-analyzer:ListArchiveRules",
          "access-analyzer:ListFindings",
          "access-analyzer:ListPolicyGenerations",
          "access-analyzer:ListTagsForResource",
          "access-analyzer:ValidatePolicy",
          "account:GetAccountInformation",
          "account:GetAlternateContact",
          "account:GetChallengeQuestions",
          "account:GetContactInformation",
          "account:GetPrimaryEmail",
          "account:GetRegionOptStatus",
          "account:ListRegions",
          "acm-pca:Describe*",
          "acm-pca:Get*",
          "acm-pca:List*",
          "acm:Describe*",
          "acm:Get*",
          "acm:List*",
          "aiops:GetInvestigation",
          "aiops:GetInvestigationEvent",
          "aiops:GetInvestigationGroup",
          "aiops:GetInvestigationResource",
          "aiops:ListInvestigationEvents",
          "aiops:ListInvestigationGroups",
          "aiops:ListInvestigations",
          "airflow:ListEnvironments",
          "airflow:ListTagsForResource",
          "amplify:GetApp",
          "amplify:GetBackendEnvironment",
          "amplify:GetBranch",
          "amplify:GetDomainAssociation",
          "amplify:GetJob",
          "amplify:GetWebhook",
          "amplify:ListApps",
          "amplify:ListArtifacts",
          "amplify:ListBackendEnvironments",
          "amplify:ListBranches",
          "amplify:ListDomainAssociations",
          "amplify:ListJobs",
          "amplify:ListTagsForResource",
          "amplify:ListWebhooks",
          "aoss:BatchGetCollection",
          "aoss:BatchGetLifecyclePolicy",
          "aoss:BatchGetVpcEndpoint",
          "aoss:GetAccessPolicy",
          "aoss:GetAccountSettings",
          "aoss:GetPoliciesStats",
          "aoss:GetSecurityConfig",
          "aoss:GetSecurityPolicy",
          "aoss:ListAccessPolicies",
          "aoss:ListCollections",
          "aoss:ListLifecyclePolicies",
          "aoss:ListSecurityConfigs",
          "aoss:ListSecurityPolicies",
          "aoss:ListTagsForResource",
          "aoss:ListVpcEndpoints",
          "apigateway:GET",
          "appconfig:GetApplication",
          "appconfig:GetConfiguration",
          "appconfig:GetConfigurationProfile",
          "appconfig:GetDeployment",
          "appconfig:GetDeploymentStrategy",
          "appconfig:GetEnvironment",
          "appconfig:GetExtension",
          "appconfig:GetHostedConfigurationVersion",
          "appconfig:ListApplications",
          "appconfig:ListConfigurationProfiles",
          "appconfig:ListDeploymentStrategies",
          "appconfig:ListDeployments",
          "appconfig:ListEnvironments",
          "appconfig:ListExtensions",
          "appconfig:ListHostedConfigurationVersions",
          "appconfig:ListTagsForResource",
          "appfabric:GetAppAuthorization",
          "appfabric:GetAppBundle",
          "appfabric:GetIngestion",
          "appfabric:GetIngestionDestination",
          "appfabric:ListAppAuthorizations",
          "appfabric:ListAppBundles",
          "appfabric:ListIngestionDestinations",
          "appfabric:ListIngestions",
          "appfabric:ListTagsForResource",
          "appflow:DescribeConnector",
          "appflow:DescribeConnectorEntity",
          "appflow:DescribeConnectorFields",
          "appflow:DescribeConnectorProfiles",
          "appflow:DescribeConnectors",
          "appflow:DescribeFlow",
          "appflow:DescribeFlowExecution",
          "appflow:DescribeFlowExecutionRecords",
          "appflow:DescribeFlows",
          "appflow:ListConnectorEntities",
          "appflow:ListConnectorFields",
          "appflow:ListConnectors",
          "appflow:ListFlows",
          "appflow:ListTagsForResource",
          "application-autoscaling:Describe*",
          "application-autoscaling:ListTagsForResource",
          "application-signals:BatchGetServiceLevelObjectiveBudgetReport",
          "application-signals:GetService",
          "application-signals:GetServiceLevelObjective",
          "application-signals:ListObservedEntities",
          "application-signals:ListServiceDependencies",
          "application-signals:ListServiceDependents",
          "application-signals:ListServiceLevelObjectives",
          "application-signals:ListServiceOperations",
          "application-signals:ListServices",
          "application-signals:ListTagsForResource",
          "applicationinsights:Describe*",
          "applicationinsights:List*",
          "appmesh:Describe*",
          "appmesh:List*",
          "apprunner:DescribeAutoScalingConfiguration",
          "apprunner:DescribeCustomDomains",
          "apprunner:DescribeObservabilityConfiguration",
          "apprunner:DescribeService",
          "apprunner:DescribeVpcConnector",
          "apprunner:DescribeVpcIngressConnection",
          "apprunner:DescribeWebAclForService",
          "apprunner:ListAssociatedServicesForWebAcl",
          "apprunner:ListAutoScalingConfigurations",
          "apprunner:ListConnections",
          "apprunner:ListObservabilityConfigurations",
          "apprunner:ListOperations",
          "apprunner:ListServices",
          "apprunner:ListServicesForAutoScalingConfiguration",
          "apprunner:ListTagsForResource",
          "apprunner:ListVpcConnectors",
          "apprunner:ListVpcIngressConnections",
          "appstream:Describe*",
          "appstream:List*",
          "appstudio:GetAccountStatus",
          "appstudio:GetEnablementJobStatus",
          "appsync:Get*",
          "appsync:List*",
          "apptest:GetTestCase",
          "apptest:GetTestConfiguration",
          "apptest:GetTestRunStep",
          "apptest:GetTestSuite",
          "apptest:ListTagsForResource",
          "apptest:ListTestCases",
          "apptest:ListTestConfigurations",
          "apptest:ListTestRunSteps",
          "apptest:ListTestRunTestCases",
          "apptest:ListTestRuns",
          "apptest:ListTestSuites",
          "aps:DescribeAlertManagerDefinition",
          "aps:DescribeLoggingConfiguration",
          "aps:DescribeRuleGroupsNamespace",
          "aps:DescribeScraper",
          "aps:DescribeWorkspace",
          "aps:GetAlertManagerSilence",
          "aps:GetAlertManagerStatus",
          "aps:GetDefaultScraperConfiguration",
          "aps:GetLabels",
          "aps:GetMetricMetadata",
          "aps:GetSeries",
          "aps:ListAlertManagerAlertGroups",
          "aps:ListAlertManagerAlerts",
          "aps:ListAlertManagerReceivers",
          "aps:ListAlertManagerSilences",
          "aps:ListAlerts",
          "aps:ListRuleGroupsNamespaces",
          "aps:ListRules",
          "aps:ListScrapers",
          "aps:ListTagsForResource",
          "aps:ListWorkspaces",
          "aps:QueryMetrics",
          "arc-zonal-shift:GetAutoshiftObserverNotificationStatus",
          "arc-zonal-shift:GetManagedResource",
          "arc-zonal-shift:ListAutoshifts",
          "arc-zonal-shift:ListManagedResources",
          "arc-zonal-shift:ListZonalShifts",
          "artifact:GetCustomerAgreement",
          "artifact:GetReport",
          "artifact:GetReportMetadata",
          "artifact:GetTermForReport",
          "artifact:ListAgreements",
          "artifact:ListCustomerAgreements",
          "artifact:ListReports",
          "athena:Batch*",
          "athena:Get*",
          "athena:List*",
          "auditmanager:GetAccountStatus",
          "auditmanager:GetAssessment",
          "auditmanager:GetAssessmentFramework",
          "auditmanager:GetAssessmentReportUrl",
          "auditmanager:GetChangeLogs",
          "auditmanager:GetControl",
          "auditmanager:GetDelegations",
          "auditmanager:GetEvidence",
          "auditmanager:GetEvidenceByEvidenceFolder",
          "auditmanager:GetEvidenceFolder",
          "auditmanager:GetEvidenceFoldersByAssessment",
          "auditmanager:GetEvidenceFoldersByAssessmentControl",
          "auditmanager:GetOrganizationAdminAccount",
          "auditmanager:GetServicesInScope",
          "auditmanager:GetSettings",
          "auditmanager:ListAssessmentFrameworks",
          "auditmanager:ListAssessmentReports",
          "auditmanager:ListAssessments",
          "auditmanager:ListControls",
          "auditmanager:ListKeywordsForDataSource",
          "auditmanager:ListNotifications",
          "auditmanager:ListTagsForResource",
          "auditmanager:ValidateAssessmentReportIntegrity",
          "autoscaling-plans:Describe*",
          "autoscaling-plans:GetScalingPlanResourceForecastData",
          "autoscaling:Describe*",
          "autoscaling:GetPredictiveScalingForecast",
          "aws-portal:View*",
          "backup-gateway:GetBandwidthRateLimitSchedule",
          "backup-gateway:GetGateway",
          "backup-gateway:GetHypervisor",
          "backup-gateway:GetHypervisorPropertyMappings",
          "backup-gateway:GetVirtualMachine",
          "backup-gateway:ListGateways",
          "backup-gateway:ListHypervisors",
          "backup-gateway:ListTagsForResource",
          "backup-gateway:ListVirtualMachines",
          "backup:Describe*",
          "backup:Get*",
          "backup:List*",
          "batch:Describe*",
          "batch:List*",
          "bedrock:GetAgent",
          "bedrock:GetAgentActionGroup",
          "bedrock:GetAgentAlias",
          "bedrock:GetAgentCollaborator",
          "bedrock:GetAgentKnowledgeBase",
          "bedrock:GetAgentVersion",
          "bedrock:GetCustomModel",
          "bedrock:GetDataSource",
          "bedrock:GetEvaluationJob",
          "bedrock:GetFlow",
          "bedrock:GetFlowAlias",
          "bedrock:GetFlowVersion",
          "bedrock:GetFoundationModel",
          "bedrock:GetFoundationModelAvailability",
          "bedrock:GetGuardrail",
          "bedrock:GetInferenceProfile",
          "bedrock:GetIngestionJob",
          "bedrock:GetKnowledgeBase",
          "bedrock:GetModelCustomizationJob",
          "bedrock:GetModelInvocationLoggingConfiguration",
          "bedrock:GetPrompt",
          "bedrock:GetProvisionedModelThroughput",
          "bedrock:GetUseCaseForModelAccess",
          "bedrock:ListAgentActionGroups",
          "bedrock:ListAgentAliases",
          "bedrock:ListAgentCollaborators",
          "bedrock:ListAgentKnowledgeBases",
          "bedrock:ListAgentVersions",
          "bedrock:ListAgents",
          "bedrock:ListCustomModels",
          "bedrock:ListDataSources",
          "bedrock:ListEvaluationJobs",
          "bedrock:ListFlowAliases",
          "bedrock:ListFlowVersions",
          "bedrock:ListFlows",
          "bedrock:ListFoundationModelAgreementOffers",
          "bedrock:ListFoundationModels",
          "bedrock:ListGuardrails",
          "bedrock:ListInferenceProfiles",
          "bedrock:ListIngestionJobs",
          "bedrock:ListKnowledgeBases",
          "bedrock:ListModelCustomizationJobs",
          "bedrock:ListPrompts",
          "bedrock:ListProvisionedModelThroughputs",
          "billing:GetBillingData",
          "billing:GetBillingDetails",
          "billing:GetBillingNotifications",
          "billing:GetBillingPreferences",
          "billing:GetBillingView",
          "billing:GetContractInformation",
          "billing:GetCredits",
          "billing:GetIAMAccessPreference",
          "billing:GetResourcePolicy",
          "billing:GetSellerOfRecord",
          "billing:ListBillingViews",
          "billing:ListSourceViewsForBillingView",
          "billing:ListTagsForResource",
          "billingconductor:GetBillingGroupCostReport",
          "billingconductor:ListAccountAssociations",
          "billingconductor:ListBillingGroupCostReports",
          "billingconductor:ListBillingGroups",
          "billingconductor:ListCustomLineItemVersions",
          "billingconductor:ListCustomLineItems",
          "billingconductor:ListPricingPlans",
          "billingconductor:ListPricingPlansAssociatedWithPricingRule",
          "billingconductor:ListPricingRules",
          "billingconductor:ListPricingRulesAssociatedToPricingPlan",
          "billingconductor:ListResourcesAssociatedToCustomLineItem",
          "billingconductor:ListTagsForResource",
          "braket:GetDevice",
          "braket:GetJob",
          "braket:GetQuantumTask",
          "braket:SearchDevices",
          "braket:SearchJobs",
          "braket:SearchQuantumTasks",
          "budgets:Describe*",
          "budgets:ListTagsForResource",
          "budgets:View*",
          "cassandra:Select",
          "ce:DescribeCostCategoryDefinition",
          "ce:DescribeNotificationSubscription",
          "ce:DescribeReport",
          "ce:GetAnomalies",
          "ce:GetAnomalyMonitors",
          "ce:GetAnomalySubscriptions",
          "ce:GetApproximateUsageRecords",
          "ce:GetCommitmentPurchaseAnalysis",
          "ce:GetCostAndUsage",
          "ce:GetCostAndUsageWithResources",
          "ce:GetCostCategories",
          "ce:GetCostForecast",
          "ce:GetDimensionValues",
          "ce:GetPreferences",
          "ce:GetReservationCoverage",
          "ce:GetReservationPurchaseRecommendation",
          "ce:GetReservationUtilization",
          "ce:GetRightsizingRecommendation",
          "ce:GetSavingsPlanPurchaseRecommendationDetails",
          "ce:GetSavingsPlansCoverage",
          "ce:GetSavingsPlansPurchaseRecommendation",
          "ce:GetSavingsPlansUtilization",
          "ce:GetSavingsPlansUtilizationDetails",
          "ce:GetTags",
          "ce:GetUsageForecast",
          "ce:ListCommitmentPurchaseAnalyses",
          "ce:ListCostAllocationTagBackfillHistory",
          "ce:ListCostAllocationTags",
          "ce:ListCostCategoryDefinitions",
          "ce:ListSavingsPlansPurchaseRecommendationGeneration",
          "ce:ListTagsForResource",
          "chatbot:Describe*",
          "chatbot:Get*",
          "chatbot:List*",
          "chime:Get*",
          "chime:List*",
          "chime:Retrieve*",
          "chime:Search*",
          "chime:Validate*",
          "cleanrooms-ml:GetAudienceGenerationJob",
          "cleanrooms-ml:GetAudienceModel",
          "cleanrooms-ml:GetConfiguredAudienceModel",
          "cleanrooms-ml:GetConfiguredAudienceModelPolicy",
          "cleanrooms-ml:GetTrainingDataset",
          "cleanrooms-ml:ListAudienceExportJobs",
          "cleanrooms-ml:ListAudienceGenerationJobs",
          "cleanrooms-ml:ListAudienceModels",
          "cleanrooms-ml:ListConfiguredAudienceModels",
          "cleanrooms-ml:ListTagsForResource",
          "cleanrooms-ml:ListTrainingDatasets",
          "cleanrooms:BatchGetCollaborationAnalysisTemplate",
          "cleanrooms:BatchGetSchema",
          "cleanrooms:BatchGetSchemaAnalysisRule",
          "cleanrooms:GetAnalysisTemplate",
          "cleanrooms:GetCollaboration",
          "cleanrooms:GetCollaborationAnalysisTemplate",
          "cleanrooms:GetCollaborationConfiguredAudienceModelAssociation",
          "cleanrooms:GetCollaborationIdNamespaceAssociation",
          "cleanrooms:GetCollaborationPrivacyBudgetTemplate",
          "cleanrooms:GetConfiguredAudienceModelAssociation",
          "cleanrooms:GetConfiguredTable",
          "cleanrooms:GetConfiguredTableAnalysisRule",
          "cleanrooms:GetConfiguredTableAssociation",
          "cleanrooms:GetConfiguredTableAssociationAnalysisRule",
          "cleanrooms:GetIdMappingTable",
          "cleanrooms:GetIdNamespaceAssociation",
          "cleanrooms:GetMembership",
          "cleanrooms:GetPrivacyBudgetTemplate",
          "cleanrooms:GetProtectedQuery",
          "cleanrooms:GetSchema",
          "cleanrooms:GetSchemaAnalysisRule",
          "cleanrooms:ListAnalysisTemplates",
          "cleanrooms:ListCollaborationAnalysisTemplates",
          "cleanrooms:ListCollaborationConfiguredAudienceModelAssociations",
          "cleanrooms:ListCollaborationIdNamespaceAssociations",
          "cleanrooms:ListCollaborationPrivacyBudgetTemplates",
          "cleanrooms:ListCollaborationPrivacyBudgets",
          "cleanrooms:ListCollaborations",
          "cleanrooms:ListConfiguredAudienceModelAssociations",
          "cleanrooms:ListConfiguredTableAssociations",
          "cleanrooms:ListConfiguredTables",
          "cleanrooms:ListIdMappingTables",
          "cleanrooms:ListIdNamespaceAssociations",
          "cleanrooms:ListMembers",
          "cleanrooms:ListMemberships",
          "cleanrooms:ListPrivacyBudgetTemplates",
          "cleanrooms:ListPrivacyBudgets",
          "cleanrooms:ListProtectedQueries",
          "cleanrooms:ListSchemas",
          "cleanrooms:ListTagsForResource",
          "cleanrooms:PreviewPrivacyImpact",
          "cloud9:Describe*",
          "cloud9:List*",
          "clouddirectory:BatchRead",
          "clouddirectory:Get*",
          "clouddirectory:List*",
          "clouddirectory:LookupPolicy",
          "cloudformation:Describe*",
          "cloudformation:Detect*",
          "cloudformation:Estimate*",
          "cloudformation:Get*",
          "cloudformation:List*",
          "cloudformation:ValidateTemplate",
          "cloudfront-keyvaluestore:Describe*",
          "cloudfront-keyvaluestore:Get*",
          "cloudfront-keyvaluestore:List*",
          "cloudfront:Describe*",
          "cloudfront:Get*",
          "cloudfront:List*",
          "cloudhsm:Describe*",
          "cloudhsm:List*",
          "cloudsearch:Describe*",
          "cloudsearch:List*",
          "cloudtrail:Describe*",
          "cloudtrail:Get*",
          "cloudtrail:List*",
          "cloudtrail:LookupEvents",
          "cloudwatch:Describe*",
          "cloudwatch:GenerateQuery",
          "cloudwatch:Get*",
          "cloudwatch:List*",
          "codeartifact:DescribeDomain",
          "codeartifact:DescribePackage",
          "codeartifact:DescribePackageVersion",
          "codeartifact:DescribeRepository",
          "codeartifact:GetAuthorizationToken",
          "codeartifact:GetDomainPermissionsPolicy",
          "codeartifact:GetPackageVersionAsset",
          "codeartifact:GetPackageVersionReadme",
          "codeartifact:GetRepositoryEndpoint",
          "codeartifact:GetRepositoryPermissionsPolicy",
          "codeartifact:ListDomains",
          "codeartifact:ListPackageVersionAssets",
          "codeartifact:ListPackageVersionDependencies",
          "codeartifact:ListPackageVersions",
          "codeartifact:ListPackages",
          "codeartifact:ListRepositories",
          "codeartifact:ListRepositoriesInDomain",
          "codeartifact:ListTagsForResource",
          "codeartifact:ReadFromRepository",
          "codebuild:BatchGet*",
          "codebuild:DescribeCodeCoverages",
          "codebuild:DescribeTestCases",
          "codebuild:List*",
          "codecatalyst:GetBillingAuthorization",
          "codecatalyst:GetConnection",
          "codecatalyst:GetPendingConnection",
          "codecatalyst:ListConnections",
          "codecatalyst:ListIamRolesForConnection",
          "codecatalyst:ListTagsForResource",
          "codecommit:BatchGet*",
          "codecommit:Describe*",
          "codecommit:Get*",
          "codecommit:GitPull",
          "codecommit:List*",
          "codedeploy:BatchGet*",
          "codedeploy:Get*",
          "codedeploy:List*",
          "codeguru-profiler:Describe*",
          "codeguru-profiler:Get*",
          "codeguru-profiler:List*",
          "codeguru-reviewer:Describe*",
          "codeguru-reviewer:Get*",
          "codeguru-reviewer:List*",
          "codepipeline:Get*",
          "codepipeline:List*",
          "codestar-connections:GetConnection",
          "codestar-connections:GetHost",
          "codestar-connections:GetRepositoryLink",
          "codestar-connections:GetRepositorySyncStatus",
          "codestar-connections:GetResourceSyncStatus",
          "codestar-connections:GetSyncConfiguration",
          "codestar-connections:ListConnections",
          "codestar-connections:ListHosts",
          "codestar-connections:ListRepositoryLinks",
          "codestar-connections:ListRepositorySyncDefinitions",
          "codestar-connections:ListSyncConfigurations",
          "codestar-connections:ListTagsForResource",
          "codestar-notifications:ListTargets",
          "codestar-notifications:describeNotificationRule",
          "codestar-notifications:listEventTypes",
          "codestar-notifications:listNotificationRules",
          "codestar-notifications:listTagsForResource",
          "codestar:Describe*",
          "codestar:Get*",
          "codestar:List*",
          "codestar:Verify*",
          "cognito-identity:Describe*",
          "cognito-identity:GetCredentialsForIdentity",
          "cognito-identity:GetIdentityPoolAnalytics",
          "cognito-identity:GetIdentityPoolDailyAnalytics",
          "cognito-identity:GetIdentityPoolRoles",
          "cognito-identity:GetIdentityProviderDailyAnalytics",
          "cognito-identity:GetOpenIdToken",
          "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
          "cognito-identity:List*",
          "cognito-identity:Lookup*",
          "cognito-idp:AdminGet*",
          "cognito-idp:AdminList*",
          "cognito-idp:Describe*",
          "cognito-idp:Get*",
          "cognito-idp:List*",
          "cognito-sync:Describe*",
          "cognito-sync:Get*",
          "cognito-sync:List*",
          "cognito-sync:QueryRecords",
          "comprehend:BatchDetect*",
          "comprehend:Classify*",
          "comprehend:Contains*",
          "comprehend:Describe*",
          "comprehend:Detect*",
          "comprehend:List*",
          "compute-optimizer:DescribeRecommendationExportJobs",
          "compute-optimizer:GetAutoScalingGroupRecommendations",
          "compute-optimizer:GetEBSVolumeRecommendations",
          "compute-optimizer:GetEC2InstanceRecommendations",
          "compute-optimizer:GetEC2RecommendationProjectedMetrics",
          "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
          "compute-optimizer:GetECSServiceRecommendations",
          "compute-optimizer:GetEffectiveRecommendationPreferences",
          "compute-optimizer:GetEnrollmentStatus",
          "compute-optimizer:GetEnrollmentStatusesForOrganization",
          "compute-optimizer:GetIdleRecommendations",
          "compute-optimizer:GetLambdaFunctionRecommendations",
          "compute-optimizer:GetLicenseRecommendations",
          "compute-optimizer:GetRDSDatabaseRecommendationProjectedMetrics",
          "compute-optimizer:GetRDSDatabaseRecommendations",
          "compute-optimizer:GetRecommendationPreferences",
          "compute-optimizer:GetRecommendationSummaries",
          "config:BatchGetAggregateResourceConfig",
          "config:BatchGetResourceConfig",
          "config:Deliver*",
          "config:Describe*",
          "config:Get*",
          "config:List*",
          "config:SelectAggregateResourceConfig",
          "config:SelectResourceConfig",
          "connect:Describe*",
          "connect:GetContactAttributes",
          "connect:GetCurrentMetricData",
          "connect:GetCurrentUserData",
          "connect:GetFederationToken",
          "connect:GetMetricData",
          "connect:GetMetricDataV2",
          "connect:GetTaskTemplate",
          "connect:GetTrafficDistribution",
          "connect:List*",
          "consoleapp:GetDeviceIdentity",
          "consoleapp:ListDeviceIdentities",
          "consolidatedbilling:GetAccountBillingRole",
          "consolidatedbilling:ListLinkedAccounts",
          "controlcatalog:ListCommonControls",
          "controlcatalog:ListDomains",
          "controlcatalog:ListObjectives",
          "cost-optimization-hub:GetPreferences",
          "cost-optimization-hub:GetRecommendation",
          "cost-optimization-hub:ListEnrollmentStatuses",
          "cost-optimization-hub:ListRecommendationSummaries",
          "cost-optimization-hub:ListRecommendations",
          "cur:GetClassicReport",
          "cur:GetClassicReportPreferences",
          "cur:GetUsageReport",
          "customer-verification:GetCustomerVerificationDetails",
          "customer-verification:GetCustomerVerificationEligibility",
          "databrew:DescribeDataset",
          "databrew:DescribeJob",
          "databrew:DescribeJobRun",
          "databrew:DescribeProject",
          "databrew:DescribeRecipe",
          "databrew:DescribeRuleset",
          "databrew:DescribeSchedule",
          "databrew:ListDatasets",
          "databrew:ListJobRuns",
          "databrew:ListJobs",
          "databrew:ListProjects",
          "databrew:ListRecipeVersions",
          "databrew:ListRecipes",
          "databrew:ListRulesets",
          "databrew:ListSchedules",
          "databrew:ListTagsForResource",
          "dataexchange:Get*",
          "dataexchange:List*",
          "datapipeline:Describe*",
          "datapipeline:EvaluateExpression",
          "datapipeline:Get*",
          "datapipeline:List*",
          "datapipeline:QueryObjects",
          "datapipeline:Validate*",
          "datasync:Describe*",
          "datasync:List*",
          "datazone:GetAsset",
          "datazone:GetAssetType",
          "datazone:GetDataProduct",
          "datazone:GetDataSource",
          "datazone:GetDataSourceRun",
          "datazone:GetDomain",
          "datazone:GetDomainSharingPolicy",
          "datazone:GetDomainUnit",
          "datazone:GetEnvironment",
          "datazone:GetEnvironmentAction",
          "datazone:GetEnvironmentBlueprint",
          "datazone:GetEnvironmentBlueprintConfiguration",
          "datazone:GetEnvironmentProfile",
          "datazone:GetFormType",
          "datazone:GetGlossary",
          "datazone:GetGlossaryTerm",
          "datazone:GetGroupProfile",
          "datazone:GetLineageNode",
          "datazone:GetListing",
          "datazone:GetMetadataGenerationRun",
          "datazone:GetProject",
          "datazone:GetProjectProfile",
          "datazone:GetSubscription",
          "datazone:GetSubscriptionEligibility",
          "datazone:GetSubscriptionGrant",
          "datazone:GetSubscriptionRequestDetails",
          "datazone:GetSubscriptionTarget",
          "datazone:GetTimeSeriesDataPoint",
          "datazone:GetUserProfile",
          "datazone:ListAccountEnvironments",
          "datazone:ListAssetRevisions",
          "datazone:ListDataProductRevisions",
          "datazone:ListDataSourceRunActivities",
          "datazone:ListDataSourceRuns",
          "datazone:ListDataSources",
          "datazone:ListDomainUnitsForParent",
          "datazone:ListDomains",
          "datazone:ListEntityOwners",
          "datazone:ListEnvironmentActions",
          "datazone:ListEnvironmentBlueprintConfigurationSummaries",
          "datazone:ListEnvironmentBlueprintConfigurations",
          "datazone:ListEnvironmentBlueprints",
          "datazone:ListEnvironmentProfiles",
          "datazone:ListEnvironments",
          "datazone:ListGroupsForUser",
          "datazone:ListLineageNodeHistory",
          "datazone:ListNotifications",
          "datazone:ListPolicyGrants",
          "datazone:ListProjectMemberships",
          "datazone:ListProjectProfiles",
          "datazone:ListProjects",
          "datazone:ListSubscriptionGrants",
          "datazone:ListSubscriptionRequests",
          "datazone:ListSubscriptionTargets",
          "datazone:ListSubscriptions",
          "datazone:ListTagsForResource",
          "datazone:ListTimeSeriesDataPoints",
          "datazone:Search",
          "datazone:SearchGroupProfiles",
          "datazone:SearchListings",
          "datazone:SearchTypes",
          "datazone:SearchUserProfiles",
          "dax:BatchGetItem",
          "dax:Describe*",
          "dax:GetItem",
          "dax:ListTags",
          "dax:Query",
          "dax:Scan",
          "deadline:BatchGetJobEntity",
          "deadline:GetApplicationVersion",
          "deadline:GetBudget",
          "deadline:GetFarm",
          "deadline:GetFleet",
          "deadline:GetJob",
          "deadline:GetLicenseEndpoint",
          "deadline:GetMonitor",
          "deadline:GetQueue",
          "deadline:GetQueueEnvironment",
          "deadline:GetQueueFleetAssociation",
          "deadline:GetSession",
          "deadline:GetSessionAction",
          "deadline:GetSessionsStatisticsAggregation",
          "deadline:GetStep",
          "deadline:GetStorageProfile",
          "deadline:GetStorageProfileForQueue",
          "deadline:GetTask",
          "deadline:GetWorker",
          "deadline:ListAvailableMeteredProducts",
          "deadline:ListBudgets",
          "deadline:ListFarmMembers",
          "deadline:ListFarms",
          "deadline:ListFleetMembers",
          "deadline:ListFleets",
          "deadline:ListJobMembers",
          "deadline:ListJobParameterDefinitions",
          "deadline:ListJobs",
          "deadline:ListLicenseEndpoints",
          "deadline:ListMeteredProducts",
          "deadline:ListMonitors",
          "deadline:ListQueueEnvironments",
          "deadline:ListQueueFleetAssociations",
          "deadline:ListQueueMembers",
          "deadline:ListQueues",
          "deadline:ListSessionActions",
          "deadline:ListSessions",
          "deadline:ListSessionsForWorker",
          "deadline:ListStepConsumers",
          "deadline:ListStepDependencies",
          "deadline:ListSteps",
          "deadline:ListStorageProfiles",
          "deadline:ListStorageProfilesForQueue",
          "deadline:ListTagsForResource",
          "deadline:ListTasks",
          "deadline:ListWorkers",
          "deadline:SearchJobs",
          "deadline:SearchSteps",
          "deadline:SearchTasks",
          "deadline:SearchWorkers",
          "deepcomposer:GetComposition",
          "deepcomposer:GetModel",
          "deepcomposer:GetSampleModel",
          "deepcomposer:ListCompositions",
          "deepcomposer:ListModels",
          "deepcomposer:ListSampleModels",
          "deepcomposer:ListTrainingTopics",
          "detective:BatchGetGraphMemberDatasources",
          "detective:BatchGetMembershipDatasources",
          "detective:Get*",
          "detective:List*",
          "detective:SearchGraph",
          "devicefarm:Get*",
          "devicefarm:List*",
          "devops-guru:DescribeAccountHealth",
          "devops-guru:DescribeAccountOverview",
          "devops-guru:DescribeAnomaly",
          "devops-guru:DescribeEventSourcesConfig",
          "devops-guru:DescribeFeedback",
          "devops-guru:DescribeInsight",
          "devops-guru:DescribeOrganizationHealth",
          "devops-guru:DescribeOrganizationOverview",
          "devops-guru:DescribeOrganizationResourceCollectionHealth",
          "devops-guru:DescribeResourceCollectionHealth",
          "devops-guru:DescribeServiceIntegration",
          "devops-guru:GetCostEstimation",
          "devops-guru:GetResourceCollection",
          "devops-guru:ListAnomaliesForInsight",
          "devops-guru:ListAnomalousLogGroups",
          "devops-guru:ListEvents",
          "devops-guru:ListInsights",
          "devops-guru:ListMonitoredResources",
          "devops-guru:ListNotificationChannels",
          "devops-guru:ListOrganizationInsights",
          "devops-guru:ListRecommendations",
          "devops-guru:SearchInsights",
          "devops-guru:StartCostEstimation",
          "directconnect:Describe*",
          "discovery:Describe*",
          "discovery:Get*",
          "discovery:List*",
          "dlm:Get*",
          "dms:Describe*",
          "dms:List*",
          "dms:Test*",
          "drs:DescribeJobLogItems",
          "drs:DescribeJobs",
          "drs:DescribeLaunchConfigurationTemplates",
          "drs:DescribeRecoveryInstances",
          "drs:DescribeRecoverySnapshots",
          "drs:DescribeReplicationConfigurationTemplates",
          "drs:DescribeSourceNetworks",
          "drs:DescribeSourceServers",
          "drs:GetFailbackReplicationConfiguration",
          "drs:GetLaunchConfiguration",
          "drs:GetReplicationConfiguration",
          "drs:ListExtensibleSourceServers",
          "drs:ListLaunchActions",
          "drs:ListStagingAccounts",
          "drs:ListTagsForResource",
          "ds:Check*",
          "ds:Describe*",
          "ds:Get*",
          "ds:List*",
          "ds:Verify*",
          "dsql:GetCluster",
          "dsql:ListClusters",
          "dsql:ListTagsForResource",
          "dynamodb:BatchGet*",
          "dynamodb:Describe*",
          "dynamodb:Get*",
          "dynamodb:List*",
          "dynamodb:PartiQLSelect",
          "dynamodb:Query",
          "dynamodb:Scan",
          "ec2:Describe*",
          "ec2:DescribeInstanceImageMetadata",
          "ec2:Get*",
          "ec2:ListImagesInRecycleBin",
          "ec2:ListSnapshotsInRecycleBin",
          "ec2:SearchLocalGatewayRoutes",
          "ec2:SearchTransitGatewayRoutes",
          "ec2messages:Get*",
          "ecr-public:BatchCheckLayerAvailability",
          "ecr-public:DescribeImageTags",
          "ecr-public:DescribeImages",
          "ecr-public:DescribeRegistries",
          "ecr-public:DescribeRepositories",
          "ecr-public:GetAuthorizationToken",
          "ecr-public:GetRegistryCatalogData",
          "ecr-public:GetRepositoryCatalogData",
          "ecr-public:GetRepositoryPolicy",
          "ecr-public:ListTagsForResource",
          "ecr:BatchCheck*",
          "ecr:BatchGet*",
          "ecr:Describe*",
          "ecr:Get*",
          "ecr:List*",
          "ecs:Describe*",
          "ecs:List*",
          "eks:Describe*",
          "eks:List*",
          "elasticache:Describe*",
          "elasticache:List*",
          "elasticbeanstalk:Check*",
          "elasticbeanstalk:Describe*",
          "elasticbeanstalk:List*",
          "elasticbeanstalk:Request*",
          "elasticbeanstalk:Retrieve*",
          "elasticbeanstalk:Validate*",
          "elasticfilesystem:Describe*",
          "elasticfilesystem:ListTagsForResource",
          "elasticloadbalancing:Describe*",
          "elasticmapreduce:Describe*",
          "elasticmapreduce:GetBlockPublicAccessConfiguration",
          "elasticmapreduce:List*",
          "elasticmapreduce:View*",
          "elastictranscoder:List*",
          "elastictranscoder:Read*",
          "elemental-appliances-software:Get*",
          "elemental-appliances-software:List*",
          "emr-containers:DescribeJobRun",
          "emr-containers:DescribeManagedEndpoint",
          "emr-containers:DescribeVirtualCluster",
          "emr-containers:ListJobRuns",
          "emr-containers:ListManagedEndpoints",
          "emr-containers:ListTagsForResource",
          "emr-containers:ListVirtualClusters",
          "emr-serverless:GetApplication",
          "emr-serverless:GetDashboardForJobRun",
          "emr-serverless:GetJobRun",
          "emr-serverless:ListApplications",
          "emr-serverless:ListJobRuns",
          "emr-serverless:ListTagsForResource",
          "es:Describe*",
          "es:ESHttpGet",
          "es:ESHttpHead",
          "es:Get*",
          "es:List*",
          "events:Describe*",
          "events:List*",
          "events:Test*",
          "evidently:GetExperiment",
          "evidently:GetExperimentResults",
          "evidently:GetFeature",
          "evidently:GetLaunch",
          "evidently:GetProject",
          "evidently:GetSegment",
          "evidently:ListExperiments",
          "evidently:ListFeatures",
          "evidently:ListLaunches",
          "evidently:ListProjects",
          "evidently:ListSegmentReferences",
          "evidently:ListSegments",
          "evidently:ListTagsForResource",
          "evidently:TestSegmentPattern",
          "firehose:Describe*",
          "firehose:List*",
          "fis:GetAction",
          "fis:GetExperiment",
          "fis:GetExperimentTargetAccountConfiguration",
          "fis:GetExperimentTemplate",
          "fis:GetTargetAccountConfiguration",
          "fis:GetTargetResourceType",
          "fis:ListActions",
          "fis:ListExperimentResolvedTargets",
          "fis:ListExperimentTargetAccountConfigurations",
          "fis:ListExperimentTemplates",
          "fis:ListExperiments",
          "fis:ListTagsForResource",
          "fis:ListTargetAccountConfigurations",
          "fis:ListTargetResourceTypes",
          "fms:GetAdminAccount",
          "fms:GetAppsList",
          "fms:GetComplianceDetail",
          "fms:GetNotificationChannel",
          "fms:GetPolicy",
          "fms:GetProtectionStatus",
          "fms:GetProtocolsList",
          "fms:GetViolationDetails",
          "fms:ListAppsLists",
          "fms:ListComplianceStatus",
          "fms:ListMemberAccounts",
          "fms:ListPolicies",
          "fms:ListProtocolsLists",
          "fms:ListTagsForResource",
          "forecast:DescribeAutoPredictor",
          "forecast:DescribeDataset",
          "forecast:DescribeDatasetGroup",
          "forecast:DescribeDatasetImportJob",
          "forecast:DescribeExplainability",
          "forecast:DescribeExplainabilityExport",
          "forecast:DescribeForecast",
          "forecast:DescribeForecastExportJob",
          "forecast:DescribeMonitor",
          "forecast:DescribePredictor",
          "forecast:DescribePredictorBacktestExportJob",
          "forecast:DescribeWhatIfAnalysis",
          "forecast:DescribeWhatIfForecast",
          "forecast:DescribeWhatIfForecastExport",
          "forecast:GetAccuracyMetrics",
          "forecast:ListDatasetGroups",
          "forecast:ListDatasetImportJobs",
          "forecast:ListDatasets",
          "forecast:ListExplainabilities",
          "forecast:ListExplainabilityExports",
          "forecast:ListForecastExportJobs",
          "forecast:ListForecasts",
          "forecast:ListMonitorEvaluations",
          "forecast:ListMonitors",
          "forecast:ListPredictorBacktestExportJobs",
          "forecast:ListPredictors",
          "forecast:ListWhatIfAnalyses",
          "forecast:ListWhatIfForecastExports",
          "forecast:ListWhatIfForecasts",
          "forecast:QueryForecast",
          "forecast:QueryWhatIfForecast",
          "frauddetector:BatchGetVariable",
          "frauddetector:DescribeDetector",
          "frauddetector:DescribeModelVersions",
          "frauddetector:GetBatchImportJobs",
          "frauddetector:GetBatchPredictionJobs",
          "frauddetector:GetDeleteEventsByEventTypeStatus",
          "frauddetector:GetDetectorVersion",
          "frauddetector:GetDetectors",
          "frauddetector:GetEntityTypes",
          "frauddetector:GetEvent",
          "frauddetector:GetEventPredictionMetadata",
          "frauddetector:GetEventTypes",
          "frauddetector:GetExternalModels",
          "frauddetector:GetKMSEncryptionKey",
          "frauddetector:GetLabels",
          "frauddetector:GetListElements",
          "frauddetector:GetListsMetadata",
          "frauddetector:GetModelVersion",
          "frauddetector:GetModels",
          "frauddetector:GetOutcomes",
          "frauddetector:GetRules",
          "frauddetector:GetVariables",
          "frauddetector:ListEventPredictions",
          "frauddetector:ListTagsForResource",
          "freertos:Describe*",
          "freertos:List*",
          "freetier:GetFreeTierAlertPreference",
          "freetier:GetFreeTierUsage",
          "fsx:Describe*",
          "fsx:List*",
          "gamelift:Describe*",
          "gamelift:Get*",
          "gamelift:List*",
          "gamelift:ResolveAlias",
          "gamelift:Search*",
          "glacier:Describe*",
          "glacier:Get*",
          "glacier:List*",
          "globalaccelerator:Describe*",
          "globalaccelerator:List*",
          "glue:BatchGetCrawlers",
          "glue:BatchGetDevEndpoints",
          "glue:BatchGetJobs",
          "glue:BatchGetPartition",
          "glue:BatchGetTableOptimizer",
          "glue:BatchGetTriggers",
          "glue:BatchGetWorkflows",
          "glue:CheckSchemaVersionValidity",
          "glue:GetCatalogImportStatus",
          "glue:GetClassifier",
          "glue:GetClassifiers",
          "glue:GetCrawler",
          "glue:GetCrawlerMetrics",
          "glue:GetCrawlers",
          "glue:GetDataCatalogEncryptionSettings",
          "glue:GetDatabase",
          "glue:GetDatabases",
          "glue:GetDataflowGraph",
          "glue:GetDevEndpoint",
          "glue:GetDevEndpoints",
          "glue:GetJob",
          "glue:GetJobBookmark",
          "glue:GetJobRun",
          "glue:GetJobRuns",
          "glue:GetJobs",
          "glue:GetMLTaskRun",
          "glue:GetMLTaskRuns",
          "glue:GetMLTransform",
          "glue:GetMLTransforms",
          "glue:GetMapping",
          "glue:GetPartition",
          "glue:GetPartitions",
          "glue:GetPlan",
          "glue:GetRegistry",
          "glue:GetResourcePolicy",
          "glue:GetSchema",
          "glue:GetSchemaByDefinition",
          "glue:GetSchemaVersion",
          "glue:GetSchemaVersionsDiff",
          "glue:GetSecurityConfiguration",
          "glue:GetSecurityConfigurations",
          "glue:GetSession",
          "glue:GetStatement",
          "glue:GetTable",
          "glue:GetTableOptimizer",
          "glue:GetTableVersion",
          "glue:GetTableVersions",
          "glue:GetTables",
          "glue:GetTags",
          "glue:GetTrigger",
          "glue:GetTriggers",
          "glue:GetUserDefinedFunction",
          "glue:GetUserDefinedFunctions",
          "glue:GetWorkflow",
          "glue:GetWorkflowRun",
          "glue:GetWorkflowRunProperties",
          "glue:GetWorkflowRuns",
          "glue:ListCrawlers",
          "glue:ListCrawls",
          "glue:ListDevEndpoints",
          "glue:ListJobs",
          "glue:ListMLTransforms",
          "glue:ListRegistries",
          "glue:ListSchemaVersions",
          "glue:ListSchemas",
          "glue:ListSessions",
          "glue:ListStatements",
          "glue:ListTableOptimizerRuns",
          "glue:ListTriggers",
          "glue:ListWorkflows",
          "glue:QuerySchemaVersionMetadata",
          "glue:SearchTables",
          "grafana:DescribeWorkspace",
          "grafana:DescribeWorkspaceAuthentication",
          "grafana:DescribeWorkspaceConfiguration",
          "grafana:ListPermissions",
          "grafana:ListTagsForResource",
          "grafana:ListVersions",
          "grafana:ListWorkspaces",
          "greengrass:DescribeComponent",
          "greengrass:Get*",
          "greengrass:List*",
          "groundstation:DescribeContact",
          "groundstation:GetConfig",
          "groundstation:GetDataflowEndpointGroup",
          "groundstation:GetMinuteUsage",
          "groundstation:GetMissionProfile",
          "groundstation:GetSatellite",
          "groundstation:ListConfigs",
          "groundstation:ListContacts",
          "groundstation:ListDataflowEndpointGroups",
          "groundstation:ListGroundStations",
          "groundstation:ListMissionProfiles",
          "groundstation:ListSatellites",
          "groundstation:ListTagsForResource",
          "guardduty:Describe*",
          "guardduty:Get*",
          "guardduty:List*",
          "health:Describe*",
          "healthlake:DescribeFHIRDatastore",
          "healthlake:DescribeFHIRExportJob",
          "healthlake:DescribeFHIRImportJob",
          "healthlake:GetCapabilities",
          "healthlake:ListFHIRDatastores",
          "healthlake:ListFHIRExportJobs",
          "healthlake:ListFHIRImportJobs",
          "healthlake:ListTagsForResource",
          "healthlake:ReadResource",
          "healthlake:SearchWithGet",
          "healthlake:SearchWithPost",
          "iam:Generate*",
          "iam:Get*",
          "iam:List*",
          "iam:Simulate*",
          "identity-sync:GetSyncProfile",
          "identity-sync:GetSyncTarget",
          "identity-sync:ListSyncFilters",
          "identitystore-auth:BatchGetSession",
          "identitystore-auth:ListSessions",
          "identitystore:DescribeGroup",
          "identitystore:DescribeGroupMembership",
          "identitystore:DescribeUser",
          "identitystore:GetGroupId",
          "identitystore:GetGroupMembershipId",
          "identitystore:GetUserId",
          "identitystore:IsMemberInGroups",
          "identitystore:ListGroupMemberships",
          "identitystore:ListGroupMembershipsForMember",
          "identitystore:ListGroups",
          "identitystore:ListUsers",
          "imagebuilder:Get*",
          "imagebuilder:List*",
          "importexport:Get*",
          "importexport:List*",
          "inspector2:BatchGetAccountStatus",
          "inspector2:BatchGetFreeTrialInfo",
          "inspector2:DescribeOrganizationConfiguration",
          "inspector2:GetDelegatedAdminAccount",
          "inspector2:GetFindingsReportStatus",
          "inspector2:GetMember",
          "inspector2:ListAccountPermissions",
          "inspector2:ListCisScans",
          "inspector2:ListCoverage",
          "inspector2:ListCoverageStatistics",
          "inspector2:ListDelegatedAdminAccounts",
          "inspector2:ListFilters",
          "inspector2:ListFindingAggregations",
          "inspector2:ListFindings",
          "inspector2:ListMembers",
          "inspector2:ListTagsForResource",
          "inspector2:ListUsageTotals",
          "inspector:Describe*",
          "inspector:Get*",
          "inspector:List*",
          "inspector:Preview*",
          "internetmonitor:GetHealthEvent",
          "internetmonitor:GetInternetEvent",
          "internetmonitor:GetMonitor",
          "internetmonitor:ListHealthEvents",
          "internetmonitor:ListInternetEvents",
          "internetmonitor:ListMonitors",
          "internetmonitor:ListTagsForResource",
          "invoicing:GetInvoiceEmailDeliveryPreferences",
          "invoicing:GetInvoicePDF",
          "invoicing:ListInvoiceSummaries",
          "iot1click:DescribeDevice",
          "iot1click:DescribePlacement",
          "iot1click:DescribeProject",
          "iot1click:GetDeviceMethods",
          "iot1click:GetDevicesInPlacement",
          "iot1click:ListDeviceEvents",
          "iot1click:ListDevices",
          "iot1click:ListPlacements",
          "iot1click:ListProjects",
          "iot1click:ListTagsForResource",
          "iot:Describe*",
          "iot:Get*",
          "iot:List*",
          "iotanalytics:Describe*",
          "iotanalytics:Get*",
          "iotanalytics:List*",
          "iotanalytics:SampleChannelData",
          "iotevents:DescribeAlarm",
          "iotevents:DescribeAlarmModel",
          "iotevents:DescribeDetector",
          "iotevents:DescribeDetectorModel",
          "iotevents:DescribeInput",
          "iotevents:DescribeLoggingOptions",
          "iotevents:ListAlarmModelVersions",
          "iotevents:ListAlarmModels",
          "iotevents:ListAlarms",
          "iotevents:ListDetectorModelVersions",
          "iotevents:ListDetectorModels",
          "iotevents:ListDetectors",
          "iotevents:ListInputs",
          "iotevents:ListTagsForResource",
          "iotfleethub:DescribeApplication",
          "iotfleethub:ListApplications",
          "iotfleetwise:GetCampaign",
          "iotfleetwise:GetDecoderManifest",
          "iotfleetwise:GetFleet",
          "iotfleetwise:GetLoggingOptions",
          "iotfleetwise:GetModelManifest",
          "iotfleetwise:GetRegisterAccountStatus",
          "iotfleetwise:GetSignalCatalog",
          "iotfleetwise:GetVehicle",
          "iotfleetwise:GetVehicleStatus",
          "iotfleetwise:ListCampaigns",
          "iotfleetwise:ListDecoderManifestNetworkInterfaces",
          "iotfleetwise:ListDecoderManifestSignals",
          "iotfleetwise:ListDecoderManifests",
          "iotfleetwise:ListFleets",
          "iotfleetwise:ListFleetsForVehicle",
          "iotfleetwise:ListModelManifestNodes",
          "iotfleetwise:ListModelManifests",
          "iotfleetwise:ListSignalCatalogNodes",
          "iotfleetwise:ListSignalCatalogs",
          "iotfleetwise:ListTagsForResource",
          "iotfleetwise:ListVehicles",
          "iotfleetwise:ListVehiclesInFleet",
          "iotroborunner:GetDestination",
          "iotroborunner:GetSite",
          "iotroborunner:GetWorker",
          "iotroborunner:GetWorkerFleet",
          "iotroborunner:ListDestinations",
          "iotroborunner:ListSites",
          "iotroborunner:ListWorkerFleets",
          "iotroborunner:ListWorkers",
          "iotsitewise:Describe*",
          "iotsitewise:Get*",
          "iotsitewise:List*",
          "iotwireless:GetDestination",
          "iotwireless:GetDeviceProfile",
          "iotwireless:GetEventConfigurationByResourceTypes",
          "iotwireless:GetFuotaTask",
          "iotwireless:GetLogLevelsByResourceTypes",
          "iotwireless:GetMetricConfiguration",
          "iotwireless:GetMetrics",
          "iotwireless:GetMulticastGroup",
          "iotwireless:GetMulticastGroupSession",
          "iotwireless:GetNetworkAnalyzerConfiguration",
          "iotwireless:GetPartnerAccount",
          "iotwireless:GetPosition",
          "iotwireless:GetPositionConfiguration",
          "iotwireless:GetPositionEstimate",
          "iotwireless:GetResourceEventConfiguration",
          "iotwireless:GetResourceLogLevel",
          "iotwireless:GetResourcePosition",
          "iotwireless:GetServiceEndpoint",
          "iotwireless:GetServiceProfile",
          "iotwireless:GetWirelessDevice",
          "iotwireless:GetWirelessDeviceImportTask",
          "iotwireless:GetWirelessDeviceStatistics",
          "iotwireless:GetWirelessGateway",
          "iotwireless:GetWirelessGatewayCertificate",
          "iotwireless:GetWirelessGatewayFirmwareInformation",
          "iotwireless:GetWirelessGatewayStatistics",
          "iotwireless:GetWirelessGatewayTask",
          "iotwireless:GetWirelessGatewayTaskDefinition",
          "iotwireless:ListDestinations",
          "iotwireless:ListDeviceProfiles",
          "iotwireless:ListDevicesForWirelessDeviceImportTask",
          "iotwireless:ListEventConfigurations",
          "iotwireless:ListFuotaTasks",
          "iotwireless:ListMulticastGroups",
          "iotwireless:ListMulticastGroupsByFuotaTask",
          "iotwireless:ListNetworkAnalyzerConfigurations",
          "iotwireless:ListPartnerAccounts",
          "iotwireless:ListPositionConfigurations",
          "iotwireless:ListQueuedMessages",
          "iotwireless:ListServiceProfiles",
          "iotwireless:ListTagsForResource",
          "iotwireless:ListWirelessDeviceImportTasks",
          "iotwireless:ListWirelessDevices",
          "iotwireless:ListWirelessGatewayTaskDefinitions",
          "iotwireless:ListWirelessGateways",
          "ivs:BatchGetChannel",
          "ivs:GetChannel",
          "ivs:GetComposition",
          "ivs:GetEncoderConfiguration",
          "ivs:GetIngestConfiguration",
          "ivs:GetParticipant",
          "ivs:GetPlaybackKeyPair",
          "ivs:GetPlaybackRestrictionPolicy",
          "ivs:GetPublicKey",
          "ivs:GetRecordingConfiguration",
          "ivs:GetStage",
          "ivs:GetStageSession",
          "ivs:GetStorageConfiguration",
          "ivs:GetStream",
          "ivs:GetStreamSession",
          "ivs:ListChannels",
          "ivs:ListCompositions",
          "ivs:ListEncoderConfigurations",
          "ivs:ListIngestConfigurations",
          "ivs:ListParticipantEvents",
          "ivs:ListParticipants",
          "ivs:ListPlaybackKeyPairs",
          "ivs:ListPlaybackRestrictionPolicies",
          "ivs:ListPublicKeys",
          "ivs:ListRecordingConfigurations",
          "ivs:ListStageSessions",
          "ivs:ListStages",
          "ivs:ListStorageConfigurations",
          "ivs:ListStreamKeys",
          "ivs:ListStreamSessions",
          "ivs:ListStreams",
          "ivs:ListTagsForResource",
          "ivschat:GetLoggingConfiguration",
          "ivschat:GetRoom",
          "ivschat:ListLoggingConfigurations",
          "ivschat:ListRooms",
          "ivschat:ListTagsForResource"
        ],
        "Resources": [
          "*"
        ]
      },
      {
        "Sid": "ReadOnlyActionsGroup2",
        "Actions": [
          "kafka:Describe*",
          "kafka:DescribeCluster",
          "kafka:DescribeClusterOperation",
          "kafka:DescribeClusterV2",
          "kafka:DescribeConfiguration",
          "kafka:DescribeConfigurationRevision",
          "kafka:Get*",
          "kafka:GetBootstrapBrokers",
          "kafka:GetCompatibleKafkaVersions",
          "kafka:List*",
          "kafka:ListClusterOperations",
          "kafka:ListClusters",
          "kafka:ListClustersV2",
          "kafka:ListConfigurationRevisions",
          "kafka:ListConfigurations",
          "kafka:ListKafkaVersions",
          "kafka:ListNodes",
          "kafka:ListTagsForResource",
          "kafkaconnect:DescribeConnector",
          "kafkaconnect:DescribeCustomPlugin",
          "kafkaconnect:DescribeWorkerConfiguration",
          "kafkaconnect:ListConnectors",
          "kafkaconnect:ListCustomPlugins",
          "kafkaconnect:ListWorkerConfigurations",
          "kendra:BatchGetDocumentStatus",
          "kendra:DescribeDataSource",
          "kendra:DescribeExperience",
          "kendra:DescribeFaq",
          "kendra:DescribeIndex",
          "kendra:DescribePrincipalMapping",
          "kendra:DescribeQuerySuggestionsBlockList",
          "kendra:DescribeQuerySuggestionsConfig",
          "kendra:DescribeThesaurus",
          "kendra:GetQuerySuggestions",
          "kendra:GetSnapshots",
          "kendra:ListDataSourceSyncJobs",
          "kendra:ListDataSources",
          "kendra:ListEntityPersonas",
          "kendra:ListExperienceEntities",
          "kendra:ListExperiences",
          "kendra:ListFaqs",
          "kendra:ListGroupsOlderThanOrderingId",
          "kendra:ListIndices",
          "kendra:ListQuerySuggestionsBlockLists",
          "kendra:ListTagsForResource",
          "kendra:ListThesauri",
          "kendra:Query",
          "kinesis:Describe*",
          "kinesis:Get*",
          "kinesis:List*",
          "kinesisanalytics:Describe*",
          "kinesisanalytics:Discover*",
          "kinesisanalytics:Get*",
          "kinesisanalytics:List*",
          "kinesisvideo:Describe*",
          "kinesisvideo:Get*",
          "kinesisvideo:List*",
          "kms:Describe*",
          "kms:Get*",
          "kms:List*",
          "lakeformation:DescribeResource",
          "lakeformation:GetDataCellsFilter",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:GetEffectivePermissionsForPath",
          "lakeformation:GetLfTag",
          "lakeformation:GetResourceLfTags",
          "lakeformation:ListDataCellsFilter",
          "lakeformation:ListLfTags",
          "lakeformation:ListPermissions",
          "lakeformation:ListResources",
          "lakeformation:ListTableStorageOptimizers",
          "lakeformation:SearchDatabasesByLfTags",
          "lakeformation:SearchTablesByLfTags",
          "lambda:Get*",
          "lambda:List*",
          "launchwizard:DescribeAdditionalNode",
          "launchwizard:DescribeProvisionedApp",
          "launchwizard:DescribeProvisioningEvents",
          "launchwizard:DescribeSettingsSet",
          "launchwizard:GetDeployment",
          "launchwizard:GetInfrastructureSuggestion",
          "launchwizard:GetIpAddress",
          "launchwizard:GetResourceCostEstimate",
          "launchwizard:GetResourceRecommendation",
          "launchwizard:GetSettingsSet",
          "launchwizard:GetWorkload",
          "launchwizard:GetWorkloadAsset",
          "launchwizard:GetWorkloadAssets",
          "launchwizard:GetWorkloadDeploymentPattern",
          "launchwizard:ListAdditionalNodes",
          "launchwizard:ListAllowedResources",
          "launchwizard:ListDeploymentEvents",
          "launchwizard:ListDeployments",
          "launchwizard:ListProvisionedApps",
          "launchwizard:ListResourceCostEstimates",
          "launchwizard:ListSettingsSets",
          "launchwizard:ListTagsForResource",
          "launchwizard:ListWorkloadDeploymentOptions",
          "launchwizard:ListWorkloadDeploymentPatterns",
          "launchwizard:ListWorkloads",
          "lex:DescribeBot",
          "lex:DescribeBotAlias",
          "lex:DescribeBotChannel",
          "lex:DescribeBotLocale",
          "lex:DescribeBotReplica",
          "lex:DescribeBotVersion",
          "lex:DescribeExport",
          "lex:DescribeImport",
          "lex:DescribeIntent",
          "lex:DescribeResourcePolicy",
          "lex:DescribeSlot",
          "lex:DescribeSlotType",
          "lex:Get*",
          "lex:ListBotAliasReplicas",
          "lex:ListBotAliases",
          "lex:ListBotChannels",
          "lex:ListBotLocales",
          "lex:ListBotReplicas",
          "lex:ListBotVersionReplicas",
          "lex:ListBotVersions",
          "lex:ListBots",
          "lex:ListBuiltInIntents",
          "lex:ListBuiltInSlotTypes",
          "lex:ListExports",
          "lex:ListImports",
          "lex:ListIntents",
          "lex:ListSlotTypes",
          "lex:ListSlots",
          "lex:ListTagsForResource",
          "license-manager:Get*",
          "license-manager:List*",
          "lightsail:GetActiveNames",
          "lightsail:GetAlarms",
          "lightsail:GetAutoSnapshots",
          "lightsail:GetBlueprints",
          "lightsail:GetBucketAccessKeys",
          "lightsail:GetBucketBundles",
          "lightsail:GetBucketMetricData",
          "lightsail:GetBuckets",
          "lightsail:GetBundles",
          "lightsail:GetCertificates",
          "lightsail:GetCloudFormationStackRecords",
          "lightsail:GetContainerAPIMetadata",
          "lightsail:GetContainerImages",
          "lightsail:GetContainerServiceDeployments",
          "lightsail:GetContainerServiceMetricData",
          "lightsail:GetContainerServicePowers",
          "lightsail:GetContainerServices",
          "lightsail:GetDisk",
          "lightsail:GetDiskSnapshot",
          "lightsail:GetDiskSnapshots",
          "lightsail:GetDisks",
          "lightsail:GetDistributionBundles",
          "lightsail:GetDistributionLatestCacheReset",
          "lightsail:GetDistributionMetricData",
          "lightsail:GetDistributions",
          "lightsail:GetDomain",
          "lightsail:GetDomains",
          "lightsail:GetExportSnapshotRecords",
          "lightsail:GetInstance",
          "lightsail:GetInstanceMetricData",
          "lightsail:GetInstancePortStates",
          "lightsail:GetInstanceSnapshot",
          "lightsail:GetInstanceSnapshots",
          "lightsail:GetInstanceState",
          "lightsail:GetInstances",
          "lightsail:GetKeyPair",
          "lightsail:GetKeyPairs",
          "lightsail:GetLoadBalancer",
          "lightsail:GetLoadBalancerMetricData",
          "lightsail:GetLoadBalancerTlsCertificates",
          "lightsail:GetLoadBalancers",
          "lightsail:GetOperation",
          "lightsail:GetOperations",
          "lightsail:GetOperationsForResource",
          "lightsail:GetRegions",
          "lightsail:GetRelationalDatabase",
          "lightsail:GetRelationalDatabaseBlueprints",
          "lightsail:GetRelationalDatabaseBundles",
          "lightsail:GetRelationalDatabaseEvents",
          "lightsail:GetRelationalDatabaseLogEvents",
          "lightsail:GetRelationalDatabaseLogStreams",
          "lightsail:GetRelationalDatabaseMetricData",
          "lightsail:GetRelationalDatabaseParameters",
          "lightsail:GetRelationalDatabaseSnapshot",
          "lightsail:GetRelationalDatabaseSnapshots",
          "lightsail:GetRelationalDatabases",
          "lightsail:GetStaticIp",
          "lightsail:GetStaticIps",
          "lightsail:Is*",
          "logs:Describe*",
          "logs:FilterLogEvents",
          "logs:Get*",
          "logs:ListAnomalies",
          "logs:ListEntitiesForLogGroup",
          "logs:ListIntegrations",
          "logs:ListLogAnomalyDetectors",
          "logs:ListLogDeliveries",
          "logs:ListLogGroupsForEntity",
          "logs:ListLogGroupsForQuery",
          "logs:ListTagsForResource",
          "logs:ListTagsLogGroup",
          "logs:StartLiveTail",
          "logs:StartQuery",
          "logs:StopLiveTail",
          "logs:StopQuery",
          "logs:TestMetricFilter",
          "lookoutequipment:DescribeDataIngestionJob",
          "lookoutequipment:DescribeDataset",
          "lookoutequipment:DescribeInferenceScheduler",
          "lookoutequipment:DescribeLabel",
          "lookoutequipment:DescribeLabelGroup",
          "lookoutequipment:DescribeModel",
          "lookoutequipment:DescribeModelVersion",
          "lookoutequipment:DescribeResourcePolicy",
          "lookoutequipment:DescribeRetrainingScheduler",
          "lookoutequipment:ListDataIngestionJobs",
          "lookoutequipment:ListDatasets",
          "lookoutequipment:ListInferenceEvents",
          "lookoutequipment:ListInferenceExecutions",
          "lookoutequipment:ListInferenceSchedulers",
          "lookoutequipment:ListLabelGroups",
          "lookoutequipment:ListLabels",
          "lookoutequipment:ListModelVersions",
          "lookoutequipment:ListModels",
          "lookoutequipment:ListRetrainingSchedulers",
          "lookoutequipment:ListSensorStatistics",
          "lookoutequipment:ListTagsForResource",
          "lookoutmetrics:Describe*",
          "lookoutmetrics:Get*",
          "lookoutmetrics:List*",
          "lookoutvision:DescribeDataset",
          "lookoutvision:DescribeModel",
          "lookoutvision:DescribeModelPackagingJob",
          "lookoutvision:DescribeProject",
          "lookoutvision:ListDatasetEntries",
          "lookoutvision:ListModelPackagingJobs",
          "lookoutvision:ListModels",
          "lookoutvision:ListProjects",
          "lookoutvision:ListTagsForResource",
          "m2:GetApplication",
          "m2:GetApplicationVersion",
          "m2:GetBatchJobExecution",
          "m2:GetDataSetDetails",
          "m2:GetDataSetImportTask",
          "m2:GetDeployment",
          "m2:GetEnvironment",
          "m2:ListApplicationVersions",
          "m2:ListApplications",
          "m2:ListBatchJobDefinitions",
          "m2:ListBatchJobExecutions",
          "m2:ListDataSetImportHistory",
          "m2:ListDataSets",
          "m2:ListDeployments",
          "m2:ListEngineVersions",
          "m2:ListEnvironments",
          "m2:ListTagsForResource",
          "machinelearning:Describe*",
          "machinelearning:Get*",
          "macie2:BatchGetCustomDataIdentifiers",
          "macie2:DescribeBuckets",
          "macie2:DescribeClassificationJob",
          "macie2:DescribeOrganizationConfiguration",
          "macie2:GetAdministratorAccount",
          "macie2:GetAllowList",
          "macie2:GetAutomatedDiscoveryConfiguration",
          "macie2:GetBucketStatistics",
          "macie2:GetClassificationExportConfiguration",
          "macie2:GetClassificationScope",
          "macie2:GetCustomDataIdentifier",
          "macie2:GetFindingStatistics",
          "macie2:GetFindings",
          "macie2:GetFindingsFilter",
          "macie2:GetFindingsPublicationConfiguration",
          "macie2:GetInvitationsCount",
          "macie2:GetMacieSession",
          "macie2:GetMember",
          "macie2:GetResourceProfile",
          "macie2:GetRevealConfiguration",
          "macie2:GetSensitiveDataOccurrencesAvailability",
          "macie2:GetSensitivityInspectionTemplate",
          "macie2:GetUsageStatistics",
          "macie2:GetUsageTotals",
          "macie2:ListAllowLists",
          "macie2:ListAutomatedDiscoveryAccounts",
          "macie2:ListClassificationJobs",
          "macie2:ListClassificationScopes",
          "macie2:ListCustomDataIdentifiers",
          "macie2:ListFindings",
          "macie2:ListFindingsFilters",
          "macie2:ListInvitations",
          "macie2:ListMembers",
          "macie2:ListOrganizationAdminAccounts",
          "macie2:ListResourceProfileArtifacts",
          "macie2:ListResourceProfileDetections",
          "macie2:ListSensitivityInspectionTemplates",
          "macie2:ListTagsForResource",
          "macie2:SearchResources",
          "managedblockchain:GetMember",
          "managedblockchain:GetNetwork",
          "managedblockchain:GetNode",
          "managedblockchain:GetProposal",
          "managedblockchain:ListInvitations",
          "managedblockchain:ListMembers",
          "managedblockchain:ListNetworks",
          "managedblockchain:ListNodes",
          "managedblockchain:ListProposalVotes",
          "managedblockchain:ListProposals",
          "managedblockchain:ListTagsForResource",
          "mediaconnect:DescribeFlow",
          "mediaconnect:DescribeOffering",
          "mediaconnect:DescribeReservation",
          "mediaconnect:ListEntitlements",
          "mediaconnect:ListFlows",
          "mediaconnect:ListOfferings",
          "mediaconnect:ListReservations",
          "mediaconnect:ListTagsForResource",
          "mediaconvert:DescribeEndpoints",
          "mediaconvert:Get*",
          "mediaconvert:List*",
          "medialive:DescribeChannel",
          "medialive:DescribeInput",
          "medialive:DescribeInputDevice",
          "medialive:DescribeInputDeviceThumbnail",
          "medialive:DescribeInputSecurityGroup",
          "medialive:DescribeMultiplex",
          "medialive:DescribeMultiplexProgram",
          "medialive:DescribeOffering",
          "medialive:DescribeReservation",
          "medialive:DescribeSchedule",
          "medialive:GetCloudWatchAlarmTemplate",
          "medialive:GetCloudWatchAlarmTemplateGroup",
          "medialive:GetEventBridgeRuleTemplate",
          "medialive:GetEventBridgeRuleTemplateGroup",
          "medialive:GetSignalMap",
          "medialive:ListChannels",
          "medialive:ListCloudWatchAlarmTemplateGroups",
          "medialive:ListCloudWatchAlarmTemplates",
          "medialive:ListEventBridgeRuleTemplateGroups",
          "medialive:ListEventBridgeRuleTemplates",
          "medialive:ListInputDeviceTransfers",
          "medialive:ListInputDevices",
          "medialive:ListInputSecurityGroups",
          "medialive:ListInputs",
          "medialive:ListMultiplexPrograms",
          "medialive:ListMultiplexes",
          "medialive:ListOfferings",
          "medialive:ListReservations",
          "medialive:ListSignalMaps",
          "medialive:ListTagsForResource",
          "mediapackage-vod:Describe*",
          "mediapackage-vod:List*",
          "mediapackage:Describe*",
          "mediapackage:List*",
          "mediapackagev2:GetChannel",
          "mediapackagev2:GetChannelGroup",
          "mediapackagev2:GetChannelPolicy",
          "mediapackagev2:GetHeadObject",
          "mediapackagev2:GetObject",
          "mediapackagev2:GetOriginEndpoint",
          "mediapackagev2:GetOriginEndpointPolicy",
          "mediapackagev2:ListChannelGroups",
          "mediapackagev2:ListChannels",
          "mediapackagev2:ListOriginEndpoints",
          "mediapackagev2:ListTagsForResource",
          "mediastore:DescribeContainer",
          "mediastore:DescribeObject",
          "mediastore:GetContainerPolicy",
          "mediastore:GetCorsPolicy",
          "mediastore:GetLifecyclePolicy",
          "mediastore:GetMetricPolicy",
          "mediastore:GetObject",
          "mediastore:ListContainers",
          "mediastore:ListItems",
          "mediastore:ListTagsForResource",
          "memorydb:DescribeClusters",
          "memorydb:DescribeParameterGroups",
          "memorydb:DescribeParameters",
          "memorydb:ListTags",
          "mgh:Describe*",
          "mgh:GetHomeRegion",
          "mgh:List*",
          "mgn:DescribeJobLogItems",
          "mgn:DescribeJobs",
          "mgn:DescribeLaunchConfigurationTemplates",
          "mgn:DescribeReplicationConfigurationTemplates",
          "mgn:DescribeSourceServers",
          "mgn:DescribeVcenterClients",
          "mgn:GetLaunchConfiguration",
          "mgn:GetReplicationConfiguration",
          "mgn:ListApplications",
          "mgn:ListSourceServerActions",
          "mgn:ListTemplateActions",
          "mgn:ListWaves",
          "mobileanalytics:Get*",
          "mobiletargeting:Get*",
          "mobiletargeting:List*",
          "monitron:GetProject",
          "monitron:GetProjectAdminUser",
          "monitron:ListProjects",
          "monitron:ListTagsForResource",
          "mq:Describe*",
          "mq:List*",
          "network-firewall:DescribeFirewall",
          "network-firewall:DescribeFirewallPolicy",
          "network-firewall:DescribeLoggingConfiguration",
          "network-firewall:DescribeResourcePolicy",
          "network-firewall:DescribeRuleGroup",
          "network-firewall:DescribeRuleGroupMetadata",
          "network-firewall:DescribeTLSInspectionConfiguration",
          "network-firewall:ListFirewallPolicies",
          "network-firewall:ListFirewalls",
          "network-firewall:ListRuleGroups",
          "network-firewall:ListTLSInspectionConfigurations",
          "network-firewall:ListTagsForResource",
          "networkmanager:DescribeGlobalNetworks",
          "networkmanager:GetConnectAttachment",
          "networkmanager:GetConnectPeer",
          "networkmanager:GetConnectPeerAssociations",
          "networkmanager:GetConnections",
          "networkmanager:GetCoreNetwork",
          "networkmanager:GetCoreNetworkChangeEvents",
          "networkmanager:GetCoreNetworkChangeSet",
          "networkmanager:GetCoreNetworkPolicy",
          "networkmanager:GetCustomerGatewayAssociations",
          "networkmanager:GetDevices",
          "networkmanager:GetLinkAssociations",
          "networkmanager:GetLinks",
          "networkmanager:GetNetworkResourceCounts",
          "networkmanager:GetNetworkResourceRelationships",
          "networkmanager:GetNetworkResources",
          "networkmanager:GetNetworkRoutes",
          "networkmanager:GetNetworkTelemetry",
          "networkmanager:GetResourcePolicy",
          "networkmanager:GetRouteAnalysis",
          "networkmanager:GetSiteToSiteVpnAttachment",
          "networkmanager:GetSites",
          "networkmanager:GetTransitGatewayConnectPeerAssociations",
          "networkmanager:GetTransitGatewayPeering",
          "networkmanager:GetTransitGatewayRegistrations",
          "networkmanager:GetTransitGatewayRouteTableAttachment",
          "networkmanager:GetVpcAttachment",
          "networkmanager:ListAttachments",
          "networkmanager:ListConnectPeers",
          "networkmanager:ListCoreNetworkPolicyVersions",
          "networkmanager:ListCoreNetworks",
          "networkmanager:ListPeerings",
          "networkmanager:ListTagsForResource",
          "nimble:GetEula",
          "nimble:GetFeatureMap",
          "nimble:GetLaunchProfile",
          "nimble:GetLaunchProfileDetails",
          "nimble:GetLaunchProfileInitialization",
          "nimble:GetLaunchProfileMember",
          "nimble:GetStreamingImage",
          "nimble:GetStreamingSession",
          "nimble:GetStudio",
          "nimble:GetStudioComponent",
          "nimble:GetStudioMember",
          "nimble:ListEulaAcceptances",
          "nimble:ListEulas",
          "nimble:ListLaunchProfileMembers",
          "nimble:ListLaunchProfiles",
          "nimble:ListStreamingImages",
          "nimble:ListStreamingSessions",
          "nimble:ListStudioComponents",
          "nimble:ListStudioMembers",
          "nimble:ListStudios",
          "nimble:ListTagsForResource",
          "notifications-contacts:GetEmailContact",
          "notifications-contacts:ListEmailContacts",
          "notifications-contacts:ListTagsForResource",
          "notifications:GetEventRule",
          "notifications:GetFeatureOptInStatus",
          "notifications:GetManagedNotificationChildEvent",
          "notifications:GetManagedNotificationConfiguration",
          "notifications:GetManagedNotificationEvent",
          "notifications:GetNotificationConfiguration",
          "notifications:GetNotificationEvent",
          "notifications:GetNotificationsAccessForOrganization",
          "notifications:List*",
          "oam:GetLink",
          "oam:GetSink",
          "oam:GetSinkPolicy",
          "oam:ListAttachedLinks",
          "oam:ListLinks",
          "oam:ListSinks",
          "observabilityadmin:GetTelemetryEvaluationStatus",
          "observabilityadmin:GetTelemetryEvaluationStatusForOrganization",
          "observabilityadmin:ListResourceTelemetry",
          "observabilityadmin:ListResourceTelemetryForOrganization",
          "omics:Get*",
          "omics:List*",
          "one:GetDeviceConfigurationTemplate",
          "one:GetDeviceInstance",
          "one:GetDeviceInstanceConfiguration",
          "one:GetSite",
          "one:GetSiteAddress",
          "one:ListDeviceConfigurationTemplates",
          "one:ListDeviceInstances",
          "one:ListSites",
          "one:ListUsers",
          "opsworks-cm:Describe*",
          "opsworks-cm:List*",
          "opsworks:Describe*",
          "opsworks:Get*",
          "organizations:Describe*",
          "organizations:List*",
          "osis:GetPipeline",
          "osis:GetPipelineBlueprint",
          "osis:GetPipelineChangeProgress",
          "osis:ListPipelineBlueprints",
          "osis:ListPipelines",
          "osis:ListTagsForResource",
          "outposts:Get*",
          "outposts:List*",
          "payment-cryptography:GetAlias",
          "payment-cryptography:GetKey",
          "payment-cryptography:GetPublicKeyCertificate",
          "payment-cryptography:ListAliases",
          "payment-cryptography:ListKeys",
          "payment-cryptography:ListTagsForResource",
          "payments:GetPaymentInstrument",
          "payments:GetPaymentStatus",
          "payments:ListPaymentInstruments",
          "payments:ListPaymentPreferences",
          "payments:ListPaymentProgramOptions",
          "payments:ListPaymentProgramStatus",
          "payments:ListTagsForResource",
          "pca-connector-ad:GetConnector",
          "pca-connector-ad:GetDirectoryRegistration",
          "pca-connector-ad:GetServicePrincipalName",
          "pca-connector-ad:GetTemplate",
          "pca-connector-ad:GetTemplateGroupAccessControlEntry",
          "pca-connector-ad:ListConnectors",
          "pca-connector-ad:ListDirectoryRegistrations",
          "pca-connector-ad:ListServicePrincipalNames",
          "pca-connector-ad:ListTagsForResource",
          "pca-connector-ad:ListTemplateGroupAccessControlEntries",
          "pca-connector-ad:ListTemplates",
          "pca-connector-scep:GetChallengeMetadata",
          "pca-connector-scep:GetConnector",
          "pca-connector-scep:ListChallengeMetadata",
          "pca-connector-scep:ListConnectors",
          "pca-connector-scep:ListTagsForResource",
          "pcs:GetCluster",
          "pcs:GetComputeNodeGroup",
          "pcs:GetQueue",
          "pcs:ListClusters",
          "pcs:ListComputeNodeGroups",
          "pcs:ListQueues",
          "pcs:ListTagsForResource",
          "personalize:Describe*",
          "personalize:Get*",
          "personalize:List*",
          "pi:DescribeDimensionKeys",
          "pi:GetDimensionKeyDetails",
          "pi:GetResourceMetadata",
          "pi:GetResourceMetrics",
          "pi:ListAvailableResourceDimensions",
          "pi:ListAvailableResourceMetrics",
          "pipes:DescribePipe",
          "pipes:ListPipes",
          "pipes:ListTagsForResource",
          "polly:Describe*",
          "polly:Get*",
          "polly:List*",
          "polly:SynthesizeSpeech",
          "pricing:DescribeServices",
          "pricing:GetAttributeValues",
          "pricing:GetPriceListFileUrl",
          "pricing:GetProducts",
          "pricing:ListPriceLists",
          "proton:GetDeployment",
          "proton:GetEnvironment",
          "proton:GetEnvironmentTemplate",
          "proton:GetEnvironmentTemplateVersion",
          "proton:GetService",
          "proton:GetServiceInstance",
          "proton:GetServiceTemplate",
          "proton:GetServiceTemplateVersion",
          "proton:ListDeployments",
          "proton:ListEnvironmentAccountConnections",
          "proton:ListEnvironmentTemplates",
          "proton:ListEnvironments",
          "proton:ListServiceInstances",
          "proton:ListServiceTemplates",
          "proton:ListServices",
          "proton:ListTagsForResource",
          "purchase-orders:GetPurchaseOrder",
          "purchase-orders:ListPurchaseOrderInvoices",
          "purchase-orders:ListPurchaseOrders",
          "purchase-orders:ViewPurchaseOrders",
          "qbusiness:GetApplication",
          "qbusiness:GetChatControlsConfiguration",
          "qbusiness:GetDataSource",
          "qbusiness:GetGroup",
          "qbusiness:GetIndex",
          "qbusiness:GetPlugin",
          "qbusiness:GetRetriever",
          "qbusiness:GetUser",
          "qbusiness:GetWebExperience",
          "qbusiness:ListApplications",
          "qbusiness:ListDataSourceSyncJobs",
          "qbusiness:ListDataSources",
          "qbusiness:ListGroups",
          "qbusiness:ListIndices",
          "qbusiness:ListPlugins",
          "qbusiness:ListRetrievers",
          "qbusiness:ListSubscriptions",
          "qbusiness:ListTagsForResource",
          "qbusiness:ListWebExperiences",
          "qldb:DescribeJournalKinesisStream",
          "qldb:DescribeJournalS3Export",
          "qldb:DescribeLedger",
          "qldb:GetBlock",
          "qldb:GetDigest",
          "qldb:GetRevision",
          "qldb:ListJournalKinesisStreamsForLedger",
          "qldb:ListJournalS3Exports",
          "qldb:ListJournalS3ExportsForLedger",
          "qldb:ListLedgers",
          "qldb:ListTagsForResource",
          "ram:Get*",
          "ram:List*",
          "rbin:GetRule",
          "rbin:ListRules",
          "rbin:ListTagsForResource",
          "rds:Describe*",
          "rds:Download*",
          "rds:List*",
          "redshift-serverless:GetCustomDomainAssociation",
          "redshift-serverless:GetEndpointAccess",
          "redshift-serverless:GetNamespace",
          "redshift-serverless:GetRecoveryPoint",
          "redshift-serverless:GetResourcePolicy",
          "redshift-serverless:GetScheduledAction",
          "redshift-serverless:GetSnapshot",
          "redshift-serverless:GetTableRestoreStatus",
          "redshift-serverless:GetUsageLimit",
          "redshift-serverless:GetWorkgroup",
          "redshift-serverless:ListCustomDomainAssociations",
          "redshift-serverless:ListEndpointAccess",
          "redshift-serverless:ListNamespaces",
          "redshift-serverless:ListRecoveryPoints",
          "redshift-serverless:ListScheduledActions",
          "redshift-serverless:ListSnapshotCopyConfigurations",
          "redshift-serverless:ListSnapshots",
          "redshift-serverless:ListTableRestoreStatus",
          "redshift-serverless:ListTagsForResource",
          "redshift-serverless:ListUsageLimits",
          "redshift-serverless:ListWorkgroups",
          "redshift:Describe*",
          "redshift:GetReservedNodeExchangeOfferings",
          "redshift:ListRecommendations",
          "redshift:View*",
          "refactor-spaces:GetApplication",
          "refactor-spaces:GetEnvironment",
          "refactor-spaces:GetResourcePolicy",
          "refactor-spaces:GetRoute",
          "refactor-spaces:GetService",
          "refactor-spaces:ListApplications",
          "refactor-spaces:ListEnvironmentVpcs",
          "refactor-spaces:ListEnvironments",
          "refactor-spaces:ListRoutes",
          "refactor-spaces:ListServices",
          "refactor-spaces:ListTagsForResource",
          "rekognition:CompareFaces",
          "rekognition:DescribeDataset",
          "rekognition:DescribeProjectVersions",
          "rekognition:DescribeProjects",
          "rekognition:DescribeStreamProcessor",
          "rekognition:Detect*",
          "rekognition:GetCelebrityInfo",
          "rekognition:GetCelebrityRecognition",
          "rekognition:GetContentModeration",
          "rekognition:GetFaceDetection",
          "rekognition:GetFaceSearch",
          "rekognition:GetLabelDetection",
          "rekognition:GetPersonTracking",
          "rekognition:GetSegmentDetection",
          "rekognition:GetTextDetection",
          "rekognition:List*",
          "rekognition:RecognizeCelebrities",
          "rekognition:Search*",
          "resiliencehub:DescribeApp",
          "resiliencehub:DescribeAppAssessment",
          "resiliencehub:DescribeAppVersion",
          "resiliencehub:DescribeAppVersionAppComponent",
          "resiliencehub:DescribeAppVersionResource",
          "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
          "resiliencehub:DescribeAppVersionTemplate",
          "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
          "resiliencehub:DescribeMetricsExport",
          "resiliencehub:DescribeResiliencyPolicy",
          "resiliencehub:DescribeResourceGroupingRecommendationTask",
          "resiliencehub:ListAlarmRecommendations",
          "resiliencehub:ListAppAssessmentComplianceDrifts",
          "resiliencehub:ListAppAssessmentResourceDrifts",
          "resiliencehub:ListAppAssessments",
          "resiliencehub:ListAppComponentCompliances",
          "resiliencehub:ListAppComponentRecommendations",
          "resiliencehub:ListAppInputSources",
          "resiliencehub:ListAppVersionAppComponents",
          "resiliencehub:ListAppVersionResourceMappings",
          "resiliencehub:ListAppVersionResources",
          "resiliencehub:ListAppVersions",
          "resiliencehub:ListApps",
          "resiliencehub:ListMetrics",
          "resiliencehub:ListRecommendationTemplates",
          "resiliencehub:ListResiliencyPolicies",
          "resiliencehub:ListResourceGroupingRecommendations",
          "resiliencehub:ListSopRecommendations",
          "resiliencehub:ListSuggestedResiliencyPolicies",
          "resiliencehub:ListTagsForResource",
          "resiliencehub:ListTestRecommendations",
          "resiliencehub:ListUnsupportedAppVersionResources",
          "resource-explorer-2:BatchGetView",
          "resource-explorer-2:GetDefaultView",
          "resource-explorer-2:GetIndex",
          "resource-explorer-2:GetView",
          "resource-explorer-2:ListIndexes",
          "resource-explorer-2:ListSupportedResourceTypes",
          "resource-explorer-2:ListTagsForResource",
          "resource-explorer-2:ListViews",
          "resource-explorer-2:Search",
          "resource-groups:Get*",
          "resource-groups:List*",
          "resource-groups:Search*",
          "robomaker:BatchDescribe*",
          "robomaker:Describe*",
          "robomaker:Get*",
          "robomaker:List*",
          "route53-recovery-cluster:Get*",
          "route53-recovery-cluster:ListRoutingControls",
          "route53-recovery-control-config:Describe*",
          "route53-recovery-control-config:GetResourcePolicy",
          "route53-recovery-control-config:List*",
          "route53-recovery-readiness:Get*",
          "route53-recovery-readiness:List*",
          "route53:Get*",
          "route53:List*",
          "route53:Test*",
          "route53domains:Check*",
          "route53domains:Get*",
          "route53domains:List*",
          "route53domains:View*",
          "route53profiles:GetProfile",
          "route53profiles:GetProfileAssociation",
          "route53profiles:GetProfileResourceAssociation",
          "route53profiles:ListProfileAssociations",
          "route53profiles:ListProfileResourceAssociations",
          "route53profiles:ListProfiles",
          "route53profiles:ListTagsForResource",
          "route53resolver:Get*",
          "route53resolver:List*",
          "rum:GetAppMonitor",
          "rum:GetAppMonitorData",
          "rum:ListAppMonitors",
          "s3-object-lambda:GetObject",
          "s3-object-lambda:GetObjectAcl",
          "s3-object-lambda:GetObjectLegalHold",
          "s3-object-lambda:GetObjectRetention",
          "s3-object-lambda:GetObjectTagging",
          "s3-object-lambda:GetObjectVersion",
          "s3-object-lambda:GetObjectVersionAcl",
          "s3-object-lambda:GetObjectVersionTagging",
          "s3-object-lambda:ListBucket",
          "s3-object-lambda:ListBucketMultipartUploads",
          "s3-object-lambda:ListBucketVersions",
          "s3-object-lambda:ListMultipartUploadParts",
          "s3-outposts:GetAccessPoint",
          "s3-outposts:GetAccessPointPolicy",
          "s3-outposts:GetBucket",
          "s3-outposts:GetBucketPolicy",
          "s3-outposts:GetBucketTagging",
          "s3-outposts:GetBucketVersioning",
          "s3-outposts:GetLifecycleConfiguration",
          "s3-outposts:GetObject",
          "s3-outposts:GetObjectTagging",
          "s3-outposts:GetObjectVersion",
          "s3-outposts:GetObjectVersionForReplication",
          "s3-outposts:GetObjectVersionTagging",
          "s3-outposts:GetReplicationConfiguration",
          "s3-outposts:ListAccessPoints",
          "s3-outposts:ListBucket",
          "s3-outposts:ListBucketMultipartUploads",
          "s3-outposts:ListBucketVersions",
          "s3-outposts:ListEndpoints",
          "s3-outposts:ListMultipartUploadParts",
          "s3-outposts:ListOutpostsWithS3",
          "s3-outposts:ListRegionalBuckets",
          "s3-outposts:ListSharedEndpoints",
          "s3:DescribeJob",
          "s3:Get*",
          "s3:List*",
          "sagemaker-groundtruth-synthetic:GetAccountDetails",
          "sagemaker-groundtruth-synthetic:GetBatch",
          "sagemaker-groundtruth-synthetic:GetProject",
          "sagemaker-groundtruth-synthetic:ListBatchDataTransfers",
          "sagemaker-groundtruth-synthetic:ListBatchSummaries",
          "sagemaker-groundtruth-synthetic:ListProjectDataTransfers",
          "sagemaker-groundtruth-synthetic:ListProjectSummaries",
          "sagemaker:Describe*",
          "sagemaker:GetSearchSuggestions",
          "sagemaker:List*",
          "sagemaker:Search",
          "savingsplans:DescribeSavingsPlanRates",
          "savingsplans:DescribeSavingsPlans",
          "savingsplans:DescribeSavingsPlansOfferingRates",
          "savingsplans:DescribeSavingsPlansOfferings",
          "savingsplans:ListTagsForResource",
          "scheduler:GetSchedule",
          "scheduler:GetScheduleGroup",
          "scheduler:ListScheduleGroups",
          "scheduler:ListSchedules",
          "scheduler:ListTagsForResource",
          "schemas:Describe*",
          "schemas:Get*",
          "schemas:List*",
          "schemas:Search*",
          "sdb:Get*",
          "sdb:List*",
          "sdb:Select*",
          "secretsmanager:Describe*",
          "secretsmanager:GetResourcePolicy",
          "secretsmanager:List*",
          "securityhub:BatchGetAutomationRules",
          "securityhub:BatchGetConfigurationPolicyAssociations",
          "securityhub:BatchGetControlEvaluations",
          "securityhub:BatchGetSecurityControls",
          "securityhub:BatchGetStandardsControlAssociations",
          "securityhub:Describe*",
          "securityhub:Get*",
          "securityhub:List*",
          "securitylake:GetDataLakeExceptionSubscription",
          "securitylake:GetDataLakeOrganizationConfiguration",
          "securitylake:GetDataLakeSources",
          "securitylake:GetSubscriber",
          "securitylake:ListDataLakeExceptions",
          "securitylake:ListDataLakes",
          "securitylake:ListLogSources",
          "securitylake:ListSubscribers",
          "securitylake:ListTagsForResource",
          "serverlessrepo:Get*",
          "serverlessrepo:List*",
          "serverlessrepo:SearchApplications",
          "servicecatalog:Describe*",
          "servicecatalog:GetApplication",
          "servicecatalog:GetAttributeGroup",
          "servicecatalog:List*",
          "servicecatalog:Scan*",
          "servicecatalog:Search*",
          "servicediscovery:DiscoverInstances",
          "servicediscovery:DiscoverInstancesRevision",
          "servicediscovery:Get*",
          "servicediscovery:List*",
          "servicequotas:GetAWSDefaultServiceQuota",
          "servicequotas:GetAssociationForServiceQuotaTemplate",
          "servicequotas:GetRequestedServiceQuotaChange",
          "servicequotas:GetServiceQuota",
          "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
          "servicequotas:ListAWSDefaultServiceQuotas",
          "servicequotas:ListRequestedServiceQuotaChangeHistory",
          "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
          "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
          "servicequotas:ListServiceQuotas",
          "servicequotas:ListServices",
          "ses:BatchGetMetricData",
          "ses:Describe*",
          "ses:Get*",
          "ses:List*",
          "shield:Describe*",
          "shield:Get*",
          "shield:List*",
          "signer:DescribeSigningJob",
          "signer:GetSigningPlatform",
          "signer:GetSigningProfile",
          "signer:ListProfilePermissions",
          "signer:ListSigningJobs",
          "signer:ListSigningPlatforms",
          "signer:ListSigningProfiles",
          "signer:ListTagsForResource",
          "signin:ListTrustedIdentityPropagationApplicationsForConsole",
          "sms-voice:DescribeAccountAttributes",
          "sms-voice:DescribeAccountLimits",
          "sms-voice:DescribeConfigurationSets",
          "sms-voice:DescribeKeywords",
          "sms-voice:DescribeOptOutLists",
          "sms-voice:DescribeOptedOutNumbers",
          "sms-voice:DescribePhoneNumbers",
          "sms-voice:DescribePools",
          "sms-voice:DescribeSenderIds",
          "sms-voice:DescribeSpendLimits",
          "sms-voice:ListPoolOriginationIdentities",
          "sms-voice:ListTagsForResource",
          "snowball:Describe*",
          "snowball:Get*",
          "snowball:List*",
          "sns:Check*",
          "sns:Get*",
          "sns:List*",
          "sqs:Get*",
          "sqs:List*",
          "sqs:Receive*",
          "ssm-contacts:DescribeEngagement",
          "ssm-contacts:DescribePage",
          "ssm-contacts:GetContact",
          "ssm-contacts:GetContactChannel",
          "ssm-contacts:ListContactChannels",
          "ssm-contacts:ListContacts",
          "ssm-contacts:ListEngagements",
          "ssm-contacts:ListPageReceipts",
          "ssm-contacts:ListPagesByContact",
          "ssm-contacts:ListPagesByEngagement",
          "ssm-incidents:GetIncidentRecord",
          "ssm-incidents:GetReplicationSet",
          "ssm-incidents:GetResourcePolicies",
          "ssm-incidents:GetResponsePlan",
          "ssm-incidents:GetTimelineEvent",
          "ssm-incidents:ListIncidentRecords",
          "ssm-incidents:ListRelatedItems",
          "ssm-incidents:ListReplicationSets",
          "ssm-incidents:ListResponsePlans",
          "ssm-incidents:ListTagsForResource",
          "ssm-incidents:ListTimelineEvents",
          "ssm-quicksetup:GetConfiguration",
          "ssm-quicksetup:GetConfigurationManager",
          "ssm-quicksetup:GetServiceSettings",
          "ssm-quicksetup:ListConfigurationManagers",
          "ssm-quicksetup:ListConfigurations",
          "ssm-quicksetup:ListQuickSetupTypes",
          "ssm-quicksetup:ListTagsForResource",
          "ssm-sap:GetApplication",
          "ssm-sap:GetComponent",
          "ssm-sap:GetDatabase",
          "ssm-sap:GetOperation",
          "ssm-sap:GetResourcePermission",
          "ssm-sap:ListApplications",
          "ssm-sap:ListComponents",
          "ssm-sap:ListDatabases",
          "ssm-sap:ListOperationEvents",
          "ssm-sap:ListOperations",
          "ssm-sap:ListTagsForResource",
          "ssm:Describe*",
          "ssm:Get*",
          "ssm:List*",
          "sso-directory:Describe*",
          "sso-directory:List*",
          "sso-directory:Search*",
          "sso:Describe*",
          "sso:Get*",
          "sso:List*",
          "sso:Search*",
          "states:Describe*",
          "states:GetExecutionHistory",
          "states:List*",
          "states:ValidateStateMachineDefinition",
          "storagegateway:Describe*",
          "storagegateway:List*",
          "sts:GetAccessKeyInfo",
          "sts:GetCallerIdentity",
          "sts:GetSessionToken",
          "support:DescribeAttachment",
          "support:DescribeCaseAttributes",
          "support:DescribeCases",
          "support:DescribeCommunication",
          "support:DescribeCommunications",
          "support:DescribeCreateCaseOptions",
          "support:DescribeIssueTypes",
          "support:DescribeServices",
          "support:DescribeSeverityLevels",
          "support:DescribeSupportLevel",
          "support:DescribeSupportedLanguages",
          "support:DescribeTrustedAdvisorCheckRefreshStatuses",
          "support:DescribeTrustedAdvisorCheckResult",
          "support:DescribeTrustedAdvisorCheckSummaries",
          "support:DescribeTrustedAdvisorChecks",
          "support:SearchForCases",
          "supportplans:GetSupportPlan",
          "supportplans:GetSupportPlanUpdateStatus",
          "supportplans:ListSupportPlanModifiers",
          "sustainability:GetCarbonFootprintSummary",
          "swf:Count*",
          "swf:Describe*",
          "swf:Get*",
          "swf:List*",
          "synthetics:Describe*",
          "synthetics:Get*",
          "synthetics:List*",
          "tag:DescribeReportCreation",
          "tag:Get*",
          "tax:GetExemptions",
          "tax:GetTaxInheritance",
          "tax:GetTaxInterview",
          "tax:GetTaxRegistration",
          "tax:GetTaxRegistrationDocument",
          "tax:ListTaxRegistrations",
          "timestream:DescribeBatchLoadTask",
          "timestream:DescribeDatabase",
          "timestream:DescribeEndpoints",
          "timestream:DescribeTable",
          "timestream:ListBatchLoadTasks",
          "timestream:ListDatabases",
          "timestream:ListMeasures",
          "timestream:ListTables",
          "timestream:ListTagsForResource",
          "tnb:GetSolFunctionInstance",
          "tnb:GetSolFunctionPackage",
          "tnb:GetSolFunctionPackageContent",
          "tnb:GetSolFunctionPackageDescriptor",
          "tnb:GetSolNetworkInstance",
          "tnb:GetSolNetworkOperation",
          "tnb:GetSolNetworkPackage",
          "tnb:GetSolNetworkPackageContent",
          "tnb:GetSolNetworkPackageDescriptor",
          "tnb:ListSolFunctionInstances",
          "tnb:ListSolFunctionPackages",
          "tnb:ListSolNetworkInstances",
          "tnb:ListSolNetworkOperations",
          "tnb:ListSolNetworkPackages",
          "tnb:ListTagsForResource",
          "transcribe:Get*",
          "transcribe:List*",
          "transfer:Describe*",
          "transfer:List*",
          "transfer:TestIdentityProvider",
          "translate:DescribeTextTranslationJob",
          "translate:GetParallelData",
          "translate:GetTerminology",
          "translate:ListParallelData",
          "translate:ListTerminologies",
          "translate:ListTextTranslationJobs",
          "trustedadvisor:Describe*",
          "trustedadvisor:GetOrganizationRecommendation",
          "trustedadvisor:GetRecommendation",
          "trustedadvisor:ListChecks",
          "trustedadvisor:ListOrganizationRecommendationAccounts",
          "trustedadvisor:ListOrganizationRecommendationResources",
          "trustedadvisor:ListOrganizationRecommendations",
          "trustedadvisor:ListRecommendationResources",
          "trustedadvisor:ListRecommendations",
          "user-subscriptions:ListApplicationClaims",
          "user-subscriptions:ListClaims",
          "user-subscriptions:ListUserSubscriptions",
          "verifiedpermissions:GetIdentitySource",
          "verifiedpermissions:GetPolicy",
          "verifiedpermissions:GetPolicyStore",
          "verifiedpermissions:GetPolicyTemplate",
          "verifiedpermissions:GetSchema",
          "verifiedpermissions:IsAuthorized",
          "verifiedpermissions:IsAuthorizedWithToken",
          "verifiedpermissions:ListIdentitySources",
          "verifiedpermissions:ListPolicies",
          "verifiedpermissions:ListPolicyStores",
          "verifiedpermissions:ListPolicyTemplates",
          "vpc-lattice:GetAccessLogSubscription",
          "vpc-lattice:GetAuthPolicy",
          "vpc-lattice:GetListener",
          "vpc-lattice:GetResourcePolicy",
          "vpc-lattice:GetRule",
          "vpc-lattice:GetService",
          "vpc-lattice:GetServiceNetwork",
          "vpc-lattice:GetServiceNetworkServiceAssociation",
          "vpc-lattice:GetServiceNetworkVpcAssociation",
          "vpc-lattice:GetTargetGroup",
          "vpc-lattice:ListAccessLogSubscriptions",
          "vpc-lattice:ListListeners",
          "vpc-lattice:ListRules",
          "vpc-lattice:ListServiceNetworkServiceAssociations",
          "vpc-lattice:ListServiceNetworkVpcAssociations",
          "vpc-lattice:ListServiceNetworks",
          "vpc-lattice:ListServices",
          "vpc-lattice:ListTagsForResource",
          "vpc-lattice:ListTargetGroups",
          "vpc-lattice:ListTargets",
          "waf-regional:Get*",
          "waf-regional:List*",
          "waf:Get*",
          "waf:List*",
          "wafv2:CheckCapacity",
          "wafv2:Describe*",
          "wafv2:Get*",
          "wafv2:List*",
          "wellarchitected:ExportLens",
          "wellarchitected:GetAnswer",
          "wellarchitected:GetConsolidatedReport",
          "wellarchitected:GetLens",
          "wellarchitected:GetLensReview",
          "wellarchitected:GetLensReviewReport",
          "wellarchitected:GetLensVersionDifference",
          "wellarchitected:GetMilestone",
          "wellarchitected:GetProfile",
          "wellarchitected:GetProfileTemplate",
          "wellarchitected:GetReviewTemplate",
          "wellarchitected:GetReviewTemplateAnswer",
          "wellarchitected:GetReviewTemplateLensReview",
          "wellarchitected:GetWorkload",
          "wellarchitected:List*",
          "workdocs:CheckAlias",
          "workdocs:Describe*",
          "workdocs:Get*",
          "workmail:Describe*",
          "workmail:Get*",
          "workmail:List*",
          "workmail:Search*",
          "workspaces-web:GetBrowserSettings",
          "workspaces-web:GetIdentityProvider",
          "workspaces-web:GetNetworkSettings",
          "workspaces-web:GetPortal",
          "workspaces-web:GetPortalServiceProviderMetadata",
          "workspaces-web:GetTrustStore",
          "workspaces-web:GetUserAccessLoggingSettings",
          "workspaces-web:GetUserSettings",
          "workspaces-web:ListBrowserSettings",
          "workspaces-web:ListIdentityProviders",
          "workspaces-web:ListNetworkSettings",
          "workspaces-web:ListPortals",
          "workspaces-web:ListTagsForResource",
          "workspaces-web:ListTrustStores",
          "workspaces-web:ListUserAccessLoggingSettings",
          "workspaces-web:ListUserSettings",
          "workspaces:Describe*",
          "xray:BatchGet*",
          "xray:Get*"
        ],
        "Resources": [
          "*"
        ]
      }
    ]
  },
  {
    "EntityType": "Role",
    "EntityName": "EC2S3ReadOnlyRole",
    "PolicyName": "AmazonS3ReadOnlyAccess",
    "PolicyType": "RoleManaged",
    "Findings": [
      {
        "Sid": "",
        "Actions": [
          "s3:Get*",
          "s3:List*",
          "s3:Describe*",
          "s3-object-lambda:Get*",
          "s3-object-lambda:List*"
        ],
        "Resources": [
          "*"
        ]
      }
    ]
  }
]